/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import e from"../../_virtual/rangePlugin.min.js";import n from"../../globals/mixins/on.min.js";var a=a=>{const t=e(Object.assign({position:"left"},a));return e=>{const r=t(e),{onReady:o}=r,i=n=>{n.stopPropagation();const t=e._input,r=a.input,o=n.target===t||n.target===r,i=[t.value,r.value].filter((e=>e)).filter(((n,a,t)=>"range"!==e.config.mode||e.config.enableTime||t.indexOf(n)===a)).join("range"!==e.config.mode?e.config.conjunction:e.l10n.rangeSeparator)!==e.getDateStr();const l=n.relatedTarget&&n.relatedTarget instanceof Node&&e.calendarContainer.contains(n.relatedTarget);o&&i&&!l&&e.setDate([t.value,r.value],!0,t===e.altInput?e.config.altFormat:e.config.dateFormat)};return Object.assign(r,{onReady(){o.call(this);const{ignoredFocusElements:t}=e.config;t.push(...t.map((e=>e.shadowRoot)).filter(Boolean)),e._hBXCEDatePickerRangePluginOnBlurFrom&&(e._hBXCEDatePickerRangePluginOnBlurFrom=e._hBXCEDatePickerRangePluginOnBlurFrom.release()),e._hBXCEDatePickerRangePluginOnBlurTo&&(e._hBXCEDatePickerRangePluginOnBlurTo=e._hBXCEDatePickerRangePluginOnBlurTo.release()),e.config.allowInput&&(e._hBXCEDatePickerRangePluginOnBlurFrom=n(e._input,"blur",i,{capture:!0}),e._hBXCEDatePickerRangePluginOnBlurTo=n(a.input,"blur",i,{capture:!0}))}})}};export{a as default};
