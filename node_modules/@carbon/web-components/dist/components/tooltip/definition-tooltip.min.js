/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as o}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as t}from"../../node_modules/lit-element/lit-element.min.js";import{property as n}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{state as s}from"../../node_modules/@lit/reactive-element/decorators/state.min.js";import{prefix as i}from"../../globals/settings.min.js";import{POPOVER_ALIGNMENT as r}from"../popover/defs.min.js";import"../popover/popover.min.js";import"../popover/popover-content.min.js";import p from"./tooltip.scss.min.js";import{carbonElement as l}from"../../globals/decorators/carbon-element.min.js";let a=class extends t{constructor(){super(...arguments),this.align="bottom",this.autoalign=!1,this.defaultOpen=!1,this.openOnHover=!1,this.open=!1}connectedCallback(){super.connectedCallback(),this.hasAttribute("default-open")&&(this.open=!0)}_handleBlur(){this.open=!1}_handleMouseDown(){this.open=!this.open}_handleKeyDown(e){const{key:o}=e;!this.open||"Esc"!==o&&"Escape"!==o||(e.stopPropagation(),this.open=!1)}_handleHover(){this.openOnHover&&!this.open?this.open=!0:this.open=!1}_handleFocus(){this.open=!0}render(){const{align:e,open:t}=this;return o`
      <cds-popover
        @mouseenter=${this._handleHover}
        @mouseleave=${this._handleHover}
        highContrast
        dropShadow=${!1}
        align=${e}
        .open=${t}>
        <button
          @focus=${this._handleFocus}
          @blur=${this._handleBlur}
          @mousedown=${this._handleMouseDown}
          @keydown=${this._handleKeyDown}
          aria-expanded=${t}
          part="definition-term"
          class="${i}--definition-term">
          <slot></slot>
        </button>
        <cds-popover-content>
          <slot name="definition"></slot>
        </cds-popover-content>
      </cds-popover>
    `}};a.styles=p,e([n({reflect:!0,type:r})],a.prototype,"align",void 0),e([n({type:Boolean,reflect:!0})],a.prototype,"autoalign",void 0),e([n({type:Boolean,reflect:!0,attribute:"default-open"})],a.prototype,"defaultOpen",void 0),e([n({reflect:!0,type:Boolean,attribute:"open-on-hover"})],a.prototype,"openOnHover",void 0),e([s()],a.prototype,"open",void 0),a=e([l(`${i}-definition-tooltip`)],a);
