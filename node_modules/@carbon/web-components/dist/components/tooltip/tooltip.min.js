/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as t}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import"../../node_modules/lit-html/lit-html.min.js";import"../../node_modules/lit-element/lit-element.min.js";import{property as e}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{prefix as o}from"../../globals/settings.min.js";import i from"../../globals/decorators/host-listener.min.js";import s from"../../globals/mixins/host-listener.min.js";import n from"../popover/popover.min.js";import"../popover/popover-content.min.js";import a from"./tooltip.scss.min.js";import{carbonElement as r}from"../../globals/decorators/carbon-element.min.js";import{css as l}from"../../node_modules/@lit/reactive-element/css-tag.min.js";let d=class extends(s(n)){constructor(){super(...arguments),this.align="top",this.autoalign=!1,this.dataTable=!1,this.closeOnActivation=!1,this.defaultOpen=!1,this.enterDelayMs=100,this.leaveDelayMs=300,this.keyboardOnly=!1,this.size=!1,this.timeoutId=0,this.toolbarAction=!1,this.lastInteractionWasKeyboard=!1,this._showTooltip=async()=>{window.clearTimeout(this.timeoutId),this.timeoutId=window.setTimeout((async()=>{var t;this.open=!0;const{open:e,updateComplete:o}=this;if(e){await o;const{selectorTooltipContent:e}=this.constructor;null===(t=this.querySelector(e))||void 0===t||t.focus()}}),this.enterDelayMs)},this._handleHover=t=>{this.keyboardOnly?t instanceof FocusEvent&&this.lastInteractionWasKeyboard&&this._showTooltip():this._showTooltip()},this._handleHoverOut=async()=>{window.clearTimeout(this.timeoutId),this.timeoutId=window.setTimeout((async()=>{const{open:t}=this;t&&(this.open=!1)}),this.leaveDelayMs)},this._handleClick=async()=>{this.lastInteractionWasKeyboard=!1,this.closeOnActivation&&this._handleHoverOut()},this._handleKeydown=async t=>{"Tab"===t.key&&(this.lastInteractionWasKeyboard=!0)," "!==t.key&&"Enter"!==t.key&&"Escape"!==t.key||(this.lastInteractionWasKeyboard=!0,this.closeOnActivation&&this._handleHoverOut())}}_handleSlotChange({target:t}){const e=t.assignedNodes().filter((t=>t.nodeType!==Node.TEXT_NODE||t.textContent.trim()));e[0]&&(e[0].addEventListener("focus",this._handleHover),e[0].addEventListener("focusout",this._handleHoverOut),this.keyboardOnly||(e[0].addEventListener("mouseover",this._handleHover),e[0].addEventListener("mouseleave",this._handleHoverOut)),this.requestUpdate())}connectedCallback(){this.hasAttribute("highContrast")||this.setAttribute("highContrast",""),this.shadowRoot||this.attachShadow({mode:"open"}),window.addEventListener("keydown",this._handleKeydown,!0),super.connectedCallback()}disconnectedCallback(){window.removeEventListener("keydown",this._handleKeydown,!0),super.disconnectedCallback()}updated(t){var e,i;const{selectorTooltipContent:s}=this.constructor,n=this.querySelector(s);t.has("defaultOpen")&&(this.open=this.defaultOpen),t.has("open")&&(this.open?null==n||n.setAttribute("open",""):null==n||n.removeAttribute("open")),["align","caret","autoalign"].forEach((e=>{if(t.has(e)){const{[e]:t}=this;n[e]=t}})),null===(i=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector(`.${o}--popover-container`))||void 0===i||i.classList.add(`${o}--tooltip`),super.updated(t)}static get selectorTooltipContent(){return`${o}-tooltip-content`}static get styles(){return l`
      ${super.styles}${a}
    `}};t([e({reflect:!0,type:String})],d.prototype,"align",void 0),t([e({type:Boolean,reflect:!0})],d.prototype,"autoalign",void 0),t([e({type:Boolean,reflect:!0,attribute:"data-table"})],d.prototype,"dataTable",void 0),t([e({reflect:!0,type:Boolean})],d.prototype,"closeOnActivation",void 0),t([e({reflect:!0,type:Boolean})],d.prototype,"defaultOpen",void 0),t([e({attribute:"enter-delay-ms",type:Number})],d.prototype,"enterDelayMs",void 0),t([e({attribute:"leave-delay-ms",type:Number})],d.prototype,"leaveDelayMs",void 0),t([e({attribute:"keyboard-only",type:Boolean})],d.prototype,"keyboardOnly",void 0),t([e({reflect:!0})],d.prototype,"size",void 0),t([e({reflect:!0})],d.prototype,"timeoutId",void 0),t([e({reflect:!0,attribute:"toolbar-action",type:Boolean})],d.prototype,"toolbarAction",void 0),t([i("click")],d.prototype,"_handleClick",void 0),t([i("keydown")],d.prototype,"_handleKeydown",void 0),d=t([r(`${o}-tooltip`)],d);
