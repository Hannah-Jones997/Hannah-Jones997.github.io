/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as t}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as e}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as i}from"../../node_modules/lit-element/lit-element.min.js";import{property as s}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{query as n}from"../../node_modules/@lit/reactive-element/decorators/query.min.js";import{classMap as l}from"../../node_modules/lit-html/directives/class-map.min.js";import{prefix as a}from"../../globals/settings.min.js";import o from"../../packages/icons/lib/warning--filled/16.min.js";import r from"../../packages/icons/lib/warning--alt--filled/16.min.js";import d from"../../packages/icons/lib/add/16.min.js";import p from"../../packages/icons/lib/subtract/16.min.js";import u from"../../globals/directives/if-non-empty.min.js";export{NUMBER_INPUT_VALIDATION_STATUS}from"./defs.min.js";import m from"./number-input.scss.min.js";import h from"../text-input/text-input.min.js";import{carbonElement as c}from"../../globals/decorators/carbon-element.min.js";import{INPUT_SIZE as b}from"../text-input/defs.min.js";let v=class extends h{constructor(){super(...arguments),this._preventWheel=t=>{t.preventDefault()},this._min="",this._max="",this._step="1",this.iconDescription="",this.incrementButtonAssistiveText="increase number input",this.decrementButtonAssistiveText="decrease number input",this.hideSteppers=!1,this.allowEmpty=!1,this.defaultValue="",this.disableWheel=!1,this.size=b.MEDIUM}_handleInput(t){const{target:e}=t,{value:i}=e,s=void 0!==this._value&&Number(i)>Number(this._value)?"up":"down";this.dispatchEvent(new CustomEvent(this.constructor.eventInput,{bubbles:!0,composed:!0,cancelable:!1,detail:{value:i,direction:s}})),super._handleInput(t)}_handleUserInitiatedStepDown(t){const{_input:e}=this;this.stepDown(),this.dispatchEvent(new CustomEvent(this.constructor.eventInput,{bubbles:!0,composed:!0,cancelable:!1,detail:{value:e.value,direction:"down"}}))}_handleUserInitiatedStepUp(t){const{_input:e}=this;this.stepUp(),this.dispatchEvent(new CustomEvent(this.constructor.eventInput,{bubbles:!0,composed:!0,cancelable:!1,detail:{value:e.value,direction:"up"}}))}_handleFocus(t){this.disableWheel&&t.target.addEventListener("wheel",this._preventWheel,{passive:!1})}_handleBlur(t){this.disableWheel&&t.target.removeEventListener("wheel",this._preventWheel)}_getInputValidity(){var t,e;return!this.invalid&&(""===this.value?this.allowEmpty:!((null===(t=this._input)||void 0===t?void 0:t.valueAsNumber)>Number(this.max)||(null===(e=this._input)||void 0===e?void 0:e.valueAsNumber)<Number(this.min)))}get min(){return this._min.toString()}set min(t){const e=this.min;this._min=t,this.requestUpdate("min",e)}get max(){return this._max.toString()}set max(t){const e=this.max;this._max=t,this.requestUpdate("max",e)}get step(){return this._step.toString()}set step(t){const e=this.step;this._step=t,this.requestUpdate("step",e)}stepUp(){this._input.stepUp()}stepDown(){this._input.stepDown()}render(){const{_handleInput:t,_handleUserInitiatedStepDown:i,_handleUserInitiatedStepUp:s,_handleFocus:n,_handleBlur:m}=this,h=this._getInputValidity(),c=o({class:`${a}--number__invalid`}),b=r({class:`${a}--number__invalid ${a}--number__invalid--warning`}),v={disabled:!this.readonly&&this.disabled,invalid:!this.readonly&&!h,warn:!this.readonly&&h&&this.warn,"slot-name":"","slot-text":"",icon:null},_=l({[`${a}--number`]:!0,[`${a}--number--${this.size}`]:this.size,[`${a}--number--nosteppers`]:this.hideSteppers,[`${a}--number--readonly`]:this.readonly}),$=l({[`${a}--number__input-wrapper`]:!0,[`${a}--number__input-wrapper--warning`]:v.warn,[`${a}--number__input-wrapper--decorator`]:this._hasAILabel}),f=l({[`${a}--label`]:!0,[`${a}--label--disabled`]:v.disabled,[`${a}--visually-hidden`]:this.hideLabel}),y=l({[`${a}--form__helper-text`]:!0,[`${a}--form__helper-text--disabled`]:v.disabled}),x=this.hasAttribute("value")?this._value:this.defaultValue||this._value,w=e`
      <button
        class="${a}--number__control-btn up-icon"
        aria-label="${this.iconDescription||this.incrementButtonAssistiveText}"
        aria-live="polite"
        aria-atomic="true"
        type="button"
        ?disabled=${v.disabled}
        @click=${s}>
        ${d()}
      </button>
      <div class="${a}--number__rule-divider"></div>
    `,g=e`
      <button
        class="${a}--number__control-btn down-icon"
        aria-label="${this.iconDescription||this.decrementButtonAssistiveText}"
        aria-live="polite"
        aria-atomic="true"
        type="button"
        ?disabled=${v.disabled}
        @click=${i}>
        ${p()}
      </button>
      <div class="${a}--number__rule-divider"></div>
    `,j=e`
      <input
        autocomplete="${this.autocomplete}"
        ?autofocus="${this.autofocus}"
        ?data-invalid="${v.invalid}"
        ?disabled="${v.disabled}"
        id="input"
        name="${u(this.name)}"
        pattern="${u(this.pattern)}"
        ?readonly="${this.readonly}"
        ?required="${this.required}"
        type="number"
        .value="${x}"
        @input="${t}"
        @focus="${n}"
        @blur="${m}"
        min="${u(this.min)}"
        max="${u(this.max)}"
        step="${u(this.step)}"
        role="alert"
        aria-atomic="true" />
    `;return v.invalid?(v.icon=c,v["slot-name"]="invalid-text",v["slot-text"]=this.invalidText):v.warn&&(v.icon=b,v["slot-name"]="warn-text",v["slot-text"]=this.warnText),e`
      <div class="${_}" ?data-invalid=${v.invalid}>
        <label class="${f}" for="input">
          <slot name="label-text"> ${this.label} </slot>
        </label>
        <div class="${$}">
          ${v.icon} ${j}
          <slot name="ai-label" @slotchange="${this._handleSlotChange}"></slot>
          <slot name="slug" @slotchange="${this._handleSlotChange}"></slot>
          <div class="${a}--number__controls">
            ${this.hideSteppers?null:e`${g} ${w}`}
          </div>
        </div>
        <div
          class="${y}"
          ?hidden="${v.invalid||v.warn}">
          <slot name="helper-text"> ${this.helperText} </slot>
        </div>
        <div
          class="${a}--form-requirement"
          ?hidden="${!v.invalid&&!v.warn}">
          <slot name="${v["slot-name"]}">
            ${v["slot-text"]}
          </slot>
        </div>
      </div>
    `}static get eventInput(){return`${a}-number-input`}};v.shadowRootOptions=Object.assign(Object.assign({},i.shadowRootOptions),{delegatesFocus:!0}),v.styles=m,t([n("input")],v.prototype,"_input",void 0),t([s({reflect:!0})],v.prototype,"min",null),t([s({reflect:!0})],v.prototype,"max",null),t([s({reflect:!0})],v.prototype,"step",null),t([s({attribute:"icon-description"})],v.prototype,"iconDescription",void 0),t([s({attribute:"increment-button-assistive-text"})],v.prototype,"incrementButtonAssistiveText",void 0),t([s({attribute:"decrement-button-assistive-text"})],v.prototype,"decrementButtonAssistiveText",void 0),t([s({type:Boolean,attribute:"hide-steppers",reflect:!0})],v.prototype,"hideSteppers",void 0),t([s({type:Boolean,attribute:"allow-empty",reflect:!0})],v.prototype,"allowEmpty",void 0),t([s({attribute:"default-value"})],v.prototype,"defaultValue",void 0),t([s({type:Boolean,attribute:"disable-wheel",reflect:!0})],v.prototype,"disableWheel",void 0),t([s({reflect:!0})],v.prototype,"size",void 0),v=t([c(`${a}-number-input`)],v);
