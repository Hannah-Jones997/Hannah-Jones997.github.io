/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as t}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as o}from"../../node_modules/lit-element/lit-element.min.js";import{property as i}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{query as s}from"../../node_modules/@lit/reactive-element/decorators/query.min.js";import{ifDefined as r}from"../../node_modules/lit-html/directives/if-defined.min.js";import n from"../../packages/icons/lib/checkmark--filled/16.min.js";import{prefix as l}from"../../globals/settings.min.js";import a from"../../globals/decorators/host-listener.min.js";import c from"../../globals/mixins/host-listener.min.js";import d,{NAVIGATION_DIRECTION as m}from"../../globals/internal/radio-group-manager.min.js";import u from"./structured-list.scss.min.js";import{carbonElement as h}from"../../globals/decorators/carbon-element.min.js";const p={ArrowUp:m.BACKWARD,Up:m.BACKWARD,ArrowDown:m.FORWARD,Down:m.FORWARD};class _{constructor(e){this._row=e}get checked(){return this._row.selected}set checked(e){this._row.selected=e,this._row.tabIndex=e?0:-1}get tabIndex(){return this._row.tabIndex}set tabIndex(e){this._row.tabIndex=e}get name(){return this._row.selectionName}compareDocumentPosition(e){return this._row.compareDocumentPosition(e._row)}focus(){this._row.focus()}}let g=class extends(c(o)){constructor(){super(...arguments),this._manager=null,this._radioButtonDelegate=new _(this),this._handleClick=()=>{const{_inputNode:e}=this;e&&(this.selected=!0,this._manager&&this._manager.select(this._radioButtonDelegate))},this._handleKeydown=e=>{const{_inputNode:t}=this,o=this._manager;if(t&&o){const t=p[e.key];t&&o.select(o.navigate(this._radioButtonDelegate,t))," "!==e.key&&"Enter"!==e.key||o.select(this._radioButtonDelegate)}},this.selected=!1,this.selectionName="",this.selectionValue="",this.selectionIconTitle=""}connectedCallback(){var e;if(this.hasAttribute("role")||this.setAttribute("role","row"),super.connectedCallback(),!this._manager){this._manager=d.get(this.getRootNode({composed:!0}));const{selectionName:t}=this;t&&(null===(e=this._manager)||void 0===e||e.add(this._radioButtonDelegate))}}disconnectedCallback(){this._manager&&this._manager.delete(this._radioButtonDelegate),super.disconnectedCallback()}updated(e){const{_manager:t,selectionName:o}=this;e.has("selectionName")&&(t&&(t.delete(this._radioButtonDelegate,e.get("selectionName")),o&&t.add(this._radioButtonDelegate)),this.setAttribute("tabindex",o&&t&&t.shouldBeFocusable(this._radioButtonDelegate)?"0":"-1"))}render(){const{selected:e,selectionName:o,selectionValue:i,selectionIconTitle:s}=this;return o?t`
        <slot></slot>
        <input
          id="input"
          type="radio"
          class="${l}--structured-list-input ${l}--visually-hidden"
          .checked=${e}
          name=${o}
          value=${r(i)} />
        <div
          class="${l}--structured-list-td ${l}--structured-list-cell">
          ${n({class:`${l}--structured-list-svg`,title:s})}
        </div>
      `:t` <slot></slot> `}};g.styles=u,e([s("#input")],g.prototype,"_inputNode",void 0),e([a("click")],g.prototype,"_handleClick",void 0),e([a("keydown")],g.prototype,"_handleKeydown",void 0),e([i({type:Boolean,reflect:!0})],g.prototype,"selected",void 0),e([i({attribute:"selection-name"})],g.prototype,"selectionName",void 0),e([i({attribute:"selection-value"})],g.prototype,"selectionValue",void 0),e([i({attribute:"selection-icon-title"})],g.prototype,"selectionIconTitle",void 0),g=e([h(`${l}-structured-list-row`)],g);
