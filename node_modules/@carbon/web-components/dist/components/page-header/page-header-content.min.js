/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as t}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as e}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as s}from"../../node_modules/lit-element/lit-element.min.js";import{classMap as i}from"../../node_modules/lit-html/directives/class-map.min.js";import{property as o}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{state as l}from"../../node_modules/@lit/reactive-element/decorators/state.min.js";import{prefix as n}from"../../globals/settings.min.js";import a from"./page-header.scss.min.js";import{carbonElement as r}from"../../globals/decorators/carbon-element.min.js";
/**
 * @license
 *
 * Copyright IBM Corp. 2025, 2025
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */let d=class extends s{constructor(){super(...arguments),this._hasContextualActions=!1,this.title="",this._hasEllipsisApplied=!1,this.withinGrid=!1}_handleSlotChange({target:t}){this._hasContextualActions=Boolean(t.assignedNodes()),this._hasContextualActions?this.setAttribute("contextual-actions","true"):this.removeAttribute("contextual-actions"),this.requestUpdate()}updated(){var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(`.${n}--page-header__content__title`);e&&!0!==this._hasEllipsisApplied&&(this._hasEllipsisApplied=e.scrollHeight>e.clientHeight)}render(){const{title:t,withinGrid:s,_hasEllipsisApplied:o,_handleSlotChange:l}=this,a=i({[`${n}--css-grid`]:!s,[`${n}--subgrid ${n}--subgrid--wide`]:s});return e` <div class="${a}">
      <div
        class="${n}--sm:col-span-4 ${n}--md:col-span-8 ${n}--lg:col-span-16 ${n}--css-grid-column">
        <div class="${n}--page-header__content__title-wrapper">
          <div class="${n}--page-header__content__start">
            <div class="${n}--page-header__content__title-container">
              <slot name="icon"></slot>
              ${o?e`
                    <cds-definition-tooltip>
                      <span slot="definition">${t}</span>
                      <h4 class="${n}--page-header__content__title">
                        ${t}
                      </h4>
                    </cds-definition-tooltip>
                  `:e`
                    <h4 class="${n}--page-header__content__title">
                      ${t}
                    </h4>
                  `}
            </div>
            <slot
              name="contextual-actions"
              @slotchange=${l}></slot>
          </div>
          <div class="${n}--page-header__content__page-actions">
            <slot name="page-actions"></slot>
          </div>
        </div>
        <slot></slot>
      </div>
    </div>`}};d.styles=a,t([o()],d.prototype,"title",void 0),t([l()],d.prototype,"_hasEllipsisApplied",void 0),t([o({attribute:"within-grid",type:Boolean})],d.prototype,"withinGrid",void 0),d=t([r(`${n}-page-header-content`)],d);
