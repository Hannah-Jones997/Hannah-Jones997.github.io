/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import{classMap as t}from"../../node_modules/lit-html/directives/class-map.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as o}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as i}from"../../node_modules/lit-element/lit-element.min.js";import{property as s}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import n from"../../packages/icons/lib/close/20.min.js";import l from"../../packages/icons/lib/menu/20.min.js";import{ifDefined as a}from"../../node_modules/lit-html/directives/if-defined.min.js";import{prefix as r}from"../../globals/settings.min.js";import m from"../../globals/mixins/focus.min.js";import"./side-nav.min.js";import d from"./header.scss.min.js";import{carbonElement as c}from"../../globals/decorators/carbon-element.min.js";import{SIDE_NAV_COLLAPSE_MODE as p}from"./defs.min.js";let b=class extends(m(i)){constructor(){super(...arguments),this.active=!1,this.buttonLabelActive="Close navigation menu",this.buttonLabelInactive="Open navigation menu",this.collapseMode=p.RESPONSIVE,this.disabled=!1,this.isNotChildOfHeader=!1}_handleClick(){const e=!this.active;this.active=e,this.dispatchEvent(new CustomEvent(this.constructor.eventToggle,{bubbles:!0,cancelable:!0,composed:!0,detail:{active:e}}))}render(){const{active:e,buttonLabelActive:i,buttonLabelInactive:s,disabled:m,_handleClick:d}=this,c=e?i:s,p=t({[`${r}--header__action`]:!0,[`${r}--header__menu-trigger`]:!0,[`${r}--header__menu-toggle`]:!0,[`${r}--header__action--active`]:e});return o`
      <button
        part="button"
        class="${p}"
        ?disabled=${m}
        aria-label="${a(c)}"
        @click=${d}>
        ${(e?n:l)({slot:"toggle-icon"})}
      </button>
    `}static get eventToggle(){return`${r}-header-menu-button-toggled`}};b.shadowRootOptions=Object.assign(Object.assign({},i.shadowRootOptions),{delegatesFocus:!0}),b.styles=d,e([s({type:Boolean,reflect:!0})],b.prototype,"active",void 0),e([s({attribute:"button-label-active"})],b.prototype,"buttonLabelActive",void 0),e([s({attribute:"button-label-inactive"})],b.prototype,"buttonLabelInactive",void 0),e([s({reflect:!0,attribute:"collapse-mode"})],b.prototype,"collapseMode",void 0),e([s({type:Boolean,reflect:!0})],b.prototype,"disabled",void 0),e([s({type:Boolean,attribute:"is-not-child-of-header"})],b.prototype,"isNotChildOfHeader",void 0),b=e([c(`${r}-header-menu-button`)],b);
