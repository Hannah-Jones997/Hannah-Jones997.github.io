/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import{FeatureFlags as t,createScope as n}from"../../packages/feature-flags/es/index.min.js";import{carbonElement as l}from"../../globals/decorators/carbon-element.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as o}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as a}from"../../node_modules/lit-element/lit-element.min.js";var r;let s=r=class extends a{static get observedAttributes(){return["enable-v12-tile-default-icons","enable-v12-tile-radio-icons","enable-v12-overflowmenu","enable-treeview-controllable","enable-experimental-focus-wrap-without-sentinels","enable-dialog-element","enable-v12-dynamic-floating-styles"]}constructor(){super(),this.scope=t,this.flags={},this.attachShadow({mode:"open"})}connectedCallback(){super.connectedCallback(),this.updateScope()}attributeChangedCallback(e,t,n){const l="true"===n;this.flags[e]=l,this.updateScope()}getParentScope(){let e=this.parentNode;for(;e;){if(e instanceof r)return e.getScope();e=e.parentNode}return null}updateScope(){const e=n(this.flags),l=this.getParentScope()||t;l&&e.mergeWithScope(l),this.scope=e}render(){return o` <slot></slot> `}isFeatureFlagEnabled(e){return this.scope.enabled(e)}getScope(){return this.scope}};s=r=e([l("feature-flags")],s);var i=s;function c(e){let t=e.parentNode;for(;t;){if(t instanceof s)return t;t=t.parentNode}return null}function u(e,t){var n;const l=c(t);return null!==(n=null==l?void 0:l.isFeatureFlagEnabled(e))&&void 0!==n&&n}export{i as default,c as findParentFeatureFlags,u as isFeatureFlagEnabled};
