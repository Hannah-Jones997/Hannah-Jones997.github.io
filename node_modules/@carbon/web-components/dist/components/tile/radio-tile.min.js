/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{svg as t,html as l}from"../../node_modules/lit-html/lit-html.min.js";import"../../node_modules/lit-element/lit-element.min.js";import{classMap as i}from"../../node_modules/lit-html/directives/class-map.min.js";import{ifDefined as s}from"../../node_modules/lit-html/directives/if-defined.min.js";import{prefix as o}from"../../globals/settings.min.js";import n from"./selectable-tile.min.js";import a from"../../packages/icons/lib/checkmark--filled/16.min.js";import{carbonElement as d}from"../../globals/decorators/carbon-element.min.js";let m=class extends n{constructor(){super(...arguments),this._handleKeydown=e=>{" "!==e.key&&"Enter"!==e.key||e.preventDefault()}}_handleChange(){this.selected=!0;const{selected:e,name:t}=this,{eventRadioChange:l}=this.constructor;this.dispatchEvent(new CustomEvent(l,{bubbles:!0,composed:!0,detail:{selected:e,name:t}}))}render(){const{colorScheme:e,checkmarkLabel:n,disabled:d,hasRoundedCorners:m,name:r,selected:c,value:h,_handleChange:$,_handleKeydown:p,_hasAILabel:u}=this,b=i({[`${o}--tile`]:!0,[`${o}--tile--selectable`]:!0,[`${o}--tile--radio`]:!0,[`${o}--tile--disabled`]:d,[`${o}--tile--is-selected`]:c,[`${o}--tile--${e}`]:e,[`${o}--tile--slug-rounded`]:u&&m});return l`
      <input
        type="radio"
        id="input"
        class="${o}--tile-input"
        ?disabled="${d}"
        tabindex="${c?0:-1}"
        name="${s(r)}"
        value="${s(h)}"
        .checked=${c}
        @change=${d?void 0:$}
        @keydown="${d?void 0:p}" />
      <label part="label" for="input" class="${b}">
        ${a({children:n?t`<title>${n}</title>`:void 0,class:`${o}--tile__checkmark`})}
        <div class="${o}--tile-content"><slot></slot></div>
      </label>
      <slot name="decorator"></slot>
      <slot name="ai-label" @slotchange="${this._handleSlotChange}"></slot>
    `}static get eventRadioChange(){return`${o}-radio-tile-selected`}};m=e([d(`${o}-radio-tile`)],m);
