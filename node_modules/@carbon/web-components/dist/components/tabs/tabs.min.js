/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as t}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as e}from"../../node_modules/lit-html/lit-html.min.js";import"../../node_modules/lit-element/lit-element.min.js";import{property as s}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{state as i}from"../../node_modules/@lit/reactive-element/decorators/state.min.js";import{query as n}from"../../node_modules/@lit/reactive-element/decorators/query.min.js";import{classMap as o}from"../../node_modules/lit-html/directives/class-map.min.js";import{prefix as r}from"../../globals/settings.min.js";import l from"../../globals/mixins/host-listener.min.js";import c from"../../globals/decorators/host-listener.min.js";import{forEach as a}from"../../globals/internal/collection-helpers.min.js";import d from"../../packages/icons/lib/chevron--right/16.min.js";import h from"../../packages/icons/lib/chevron--left/16.min.js";import m from"../content-switcher/content-switcher.min.js";import{TABS_TYPE as b,TABS_KEYBOARD_ACTION as u}from"./defs.min.js";import v from"./tabs.scss.min.js";import{carbonElement as _}from"../../globals/decorators/carbon-element.min.js";import{NAVIGATION_DIRECTION as p}from"../content-switcher/defs.min.js";let I=class extends(l(m)){constructor(){super(...arguments),this._currentIndex=0,this._totalTabs=0,this._isScrollable=!1,this.tablist=null,this.BUTTON_WIDTH=44,this._currentScrollPosition=0,this.selectingItemsAssistiveText="Selecting items. Use up and down arrow keys to navigate.",this.selectedItemAssistiveText="Selected an item.",this.triggerContent="",this.type=b.REGULAR,this._isIntersectionLeftTrackerInContent=!0,this._isIntersectionRightTrackerInContent=!0,this._observerIntersection=null,this._observeIntersectionContainer=t=>{const{_intersectionLeftSentinelNode:e,_intersectionRightSentinelNode:s}=this;t.forEach((({isIntersecting:t,target:i})=>{i===e&&(this._isIntersectionLeftTrackerInContent=t),i===s&&(this._isIntersectionRightTrackerInContent=t)}))}}_navigate(t,{immediate:e=!0}={}){const{selectorItem:s,selectorItemHighlighted:i,selectorItemSelected:n}=this.constructor,o=this._getNextItem(this.querySelector(e?n:i),t);if(!o)return;e?this._handleUserInitiatedSelectItem(o):a(this.querySelectorAll(s),(t=>{t[e?"selected":"highlighted"]=o===t})),o.scrollIntoView({block:"nearest",inline:"nearest"});const r=o.textContent;r&&(this._assistiveStatusText=r),this._currentIndex+=t,this.requestUpdate()}_handleClick(t){super._handleClick(t)}_handleKeydown(t){const{key:e}=t,s=this.constructor.getAction(e),i=this.querySelectorAll(`${r}-tab:not([disabled])`);switch(s){case u.HOME:{const[t]=i;t.scrollIntoView({block:"nearest",inline:"nearest"}),this._handleUserInitiatedSelectItem(t),this.requestUpdate()}break;case u.END:{const t=i[i.length-1];t.scrollIntoView({block:"nearest",inline:"nearest"}),this._handleUserInitiatedSelectItem(t),this.requestUpdate()}break;case u.NAVIGATING:{const t=p[e];t&&this._navigate(t)}}}_handleScrollButtonClick(t,{direction:e}){if(!this.tablist)return;const{scrollLeft:s,clientWidth:i,scrollWidth:n}=this._contentContainerNode;switch(e){case-1:this._contentContainerNode.scrollLeft=Math.max(s-n/this._totalTabs*1.5,0);break;case 1:this._contentContainerNode.scrollLeft=Math.min(s+n/this._totalTabs*1.5,n-i)+1}}_handleSlotchange(){const{selectorItemSelected:t}=this.constructor,e=this.querySelector(t),s=this._getNextItem(e,1);s&&(s.hideDivider=!0)}_selectionDidChange(t){super._selectionDidChange(t),this._assistiveStatusText=this.selectedItemAssistiveText}_cleanAndCreateIntersectionObserverContainer({create:t}={}){const{_intersectionLeftSentinelNode:e,_intersectionRightSentinelNode:s}=this;this._observerIntersection&&(this._observerIntersection.disconnect(),this._observerIntersection=null),t&&(this._observerIntersection=new IntersectionObserver(this._observeIntersectionContainer,{root:this,threshold:0}),e&&this._observerIntersection.observe(e),s&&this._observerIntersection.observe(s))}disconnectedCallback(){this._cleanAndCreateIntersectionObserverContainer(),super.disconnectedCallback()}shouldUpdate(t){if(super.shouldUpdate(t),this.tablist){const{clientWidth:t,scrollWidth:e}=this.tablist;this._isScrollable=e>t}const{selectorItem:e}=this.constructor;return t.has("type")&&a(this.querySelectorAll(e),(t=>{this._totalTabs++,t.type=this.type})),!0}firstUpdated(){const{selectorTablist:t}=this.constructor,e=this.shadowRoot.querySelector(t);this.tablist=e,this._cleanAndCreateIntersectionObserverContainer({create:!0})}updated(t){var e,s;if(t.has("value")){const t=this.querySelector(`${r}-tab[value="${this.value}"]`);if(t){const{width:i}=null!==(e=null==t?void 0:t.getBoundingClientRect())&&void 0!==e?e:{},n=null!==(s=t.offsetLeft)&&void 0!==s?s:0,o=t.offsetLeft+i,r=this.tablist.scrollLeft+this.BUTTON_WIDTH,l=this.tablist.scrollLeft+this.tablist.clientWidth-this.BUTTON_WIDTH;n<r&&(this.tablist.scrollLeft=n-this.BUTTON_WIDTH),o>l&&(this.tablist.scrollLeft=o+this.BUTTON_WIDTH-this.tablist.clientWidth)}}t.has("_currentScrollPosition")&&this._contentNode&&(this._contentNode.style.insetInlineStart=`-${this._currentScrollPosition}px`)}renderPreviousButton(){const{_isIntersectionLeftTrackerInContent:t}=this,s=o({[`${r}--tab--overflow-nav-button`]:!0,[`${r}--tabs__nav-caret-left`]:!0,[`${r}--tab--overflow-nav-button--previous`]:!0,[`${r}--tab--overflow-nav-button--hidden`]:t});return e`
      <button
        part="prev-button"
        tabindex="-1"
        aria-hidden="true"
        class="${s}"
        @click=${t=>this._handleScrollButtonClick(t,{direction:p.Left})}>
        ${h()}
      </button>
    `}renderNextButton(){const{_isIntersectionRightTrackerInContent:t}=this,s=o({[`${r}--tab--overflow-nav-button`]:!0,[`${r}--tabs__nav-caret-right`]:!0,[`${r}--tab--overflow-nav-button--next`]:!0,[`${r}--tab--overflow-nav-button--hidden`]:t});return e`
      <button
        part="next-button"
        tabindex="-1"
        aria-hidden="true"
        class="${s}"
        @click=${t=>this._handleScrollButtonClick(t,{direction:p.Right})}>
        ${d()}
      </button>
    `}render(){const{_assistiveStatusText:t,_handleSlotchange:s}=this;return e`
      ${this.renderPreviousButton()}
      <div class="${r}--tabs-nav-content-container">
        <div class="${r}--tabs-nav-content">
          <div class="${r}--tabs-nav">
            <div id="tablist" role="tablist" class="${r}--tab--list">
              <div class="${r}--sub-content-left"></div>
              <slot @slotchange=${s}></slot>
              <div class="${r}--sub-content-right"></div>
            </div>
          </div>
        </div>
      </div>
      ${this.renderNextButton()}
      <div
        class="${r}--assistive-text"
        role="status"
        aria-live="assertive"
        aria-relevant="additions text">
        ${t}
      </div>
    `}static get selectorItem(){return`${r}-tab`}static get selectorItemEnabled(){return`${r}-tab:not([disabled])`}static get selectorItemHighlighted(){return`${r}-tab[highlighted]`}static get selectorItemSelected(){return`${r}-tab[selected]`}static get selectorTablist(){return`.${r}--tab--list`}static get eventBeforeSelect(){return`${r}-tabs-beingselected`}static get eventSelect(){return`${r}-tabs-selected`}static getAction(t){return"Home"===t?u.HOME:"End"===t?u.END:t in p?u.NAVIGATING:u.NONE}};I.TRIGGER_KEYS=new Set([" ","Enter"]),I.styles=v,t([c("click")],I.prototype,"_handleClick",null),t([c("keydown")],I.prototype,"_handleKeydown",null),t([n(`.${r}--tabs-nav-content-container`)],I.prototype,"_contentContainerNode",void 0),t([n(`.${r}--tabs-nav-content`)],I.prototype,"_contentNode",void 0),t([i()],I.prototype,"_currentScrollPosition",void 0),t([n(`.${r}--sub-content-left`)],I.prototype,"_intersectionLeftSentinelNode",void 0),t([n(`.${r}--sub-content-right`)],I.prototype,"_intersectionRightSentinelNode",void 0),t([s({attribute:"selecting-items-assistive-text"})],I.prototype,"selectingItemsAssistiveText",void 0),t([s({attribute:"selected-item-assistive-text"})],I.prototype,"selectedItemAssistiveText",void 0),t([s({attribute:"trigger-content"})],I.prototype,"triggerContent",void 0),t([s({reflect:!0})],I.prototype,"type",void 0),t([i()],I.prototype,"_isIntersectionLeftTrackerInContent",void 0),t([i()],I.prototype,"_isIntersectionRightTrackerInContent",void 0),I=t([_(`${r}-tabs`)],I);export{p as NAVIGATION_DIRECTION,u as TABS_KEYBOARD_ACTION,b as TABS_TYPE};
