/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as t}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as o}from"../../node_modules/lit-element/lit-element.min.js";import{property as s}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{prefix as i}from"../../globals/settings.min.js";import r from"./menu-item.scss.min.js";import{carbonElement as m}from"../../globals/decorators/carbon-element.min.js";import{consume as n}from"../../node_modules/@lit/context/lib/decorators/consume.min.js";import{MenuContext as l}from"./menu-context.min.js";let a=class extends o{constructor(){super(...arguments),this.items=[]}static get eventOnChange(){return`${i}-item-changed`}firstUpdated(){this.context.updateFromChild({hasSelectableItems:!0}),this.addEventListener("click",(e=>{this.selectedItem=e.target;const t={bubbles:!0,cancelable:!0,composed:!0,detail:{triggeredBy:e.target}};this.dispatchEvent(new CustomEvent(this.constructor.eventOnChange,t))&&this.dispatchEvent(new CustomEvent(this.constructor.eventOnChange,t))}))}updated(e){e.has("selectedItem")&&this.querySelectorAll(`${i}-menu-item`).forEach((e=>{e===this.selectedItem?e.setAttribute("aria-checked","true"):e.setAttribute("aria-checked","false")}))}render(){const{label:e}=this;return t`
      <ul role="group" aria-label="${e}">
        <slot></slot>
      </ul>
    `}};a.styles=r,e([n({context:l})],a.prototype,"context",void 0),e([s({type:String})],a.prototype,"label",void 0),e([s({type:Array})],a.prototype,"items",void 0),e([s({type:String,attribute:!0})],a.prototype,"selectedItem",void 0),e([s()],a.prototype,"itemToString",void 0),a=e([m(`${i}-menu-item-radio-group`)],a);
