/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import{classMap as t}from"../../node_modules/lit-html/directives/class-map.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as s}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as i}from"../../node_modules/lit-element/lit-element.min.js";import{property as a}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{state as o}from"../../node_modules/@lit/reactive-element/decorators/state.min.js";import{prefix as d}from"../../globals/settings.min.js";import l from"../../packages/icons/lib/caret--down/16.min.js";import n from"./tree-view.scss.min.js";import{carbonElement as r}from"../../globals/decorators/carbon-element.min.js";
/**
 * @license
 *
 * Copyright IBM Corp. 2025, 2025
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */let h=class extends i{constructor(){super(...arguments),this._hasChildren=!1,this._hasIcon=!1,this._handleStyles=()=>{const{_depth:e,_hasChildren:t,_hasIcon:s}=this,i=()=>t&&s?e+1+.5*e:t?e+1:s?e+2+.5*e:e+2.5,a=this.shadowRoot.querySelector(`.${d}--tree-node__label`);a&&(a.style.marginInlineStart=`-${i()}rem`,a.style.paddingInlineStart=`${i()}rem`)},this._handleToggleClick=e=>{const{disabled:t,href:s}=this;t||(e.stopPropagation(),s&&e.preventDefault(),this.isExpanded=!this.isExpanded,this.hasAttribute("aria-expanded")&&this.setAttribute("aria-expanded",String(this.isExpanded)))},this.active=!1,this.disabled=!1,this._depth=0,this.isExpanded=!1,this.id=Math.random().toString(16).slice(2),this.selected=!1}_handleSlotChange({target:e}){const{_depth:t,disabled:s}=this,i=e.assignedNodes().filter((e=>e.nodeType===Node.ELEMENT_NODE&&e.tagName.toLowerCase()===`${d}-tree-node`));i.forEach((e=>{e._depth=t+1,e.disabled=s})),this._hasChildren=i.length>0,this._hasChildren&&this.setAttribute("parent",""),this.requestUpdate()}_handleIconSlotChange({target:e}){this._hasIcon=e.assignedNodes().length>0,this._hasIcon&&this.setAttribute("has-icon",""),this.requestUpdate()}connectedCallback(){super.connectedCallback(),this._hasChildren=Array.from(this.children).some((e=>e.tagName.toLowerCase()===`${d}-tree-node`)),this._hasIcon=Array.from(this.children).some((e=>"icon"===e.getAttribute("slot"))),this.hasAttribute("role")||this.href||this.setAttribute("role","treeitem"),this.hasAttribute("aria-owns")||!this._hasChildren||this.href||this.setAttribute("aria-owns",`subtree-id-${this.id}`),this._hasChildren&&!this.href&&this.setAttribute("aria-expanded",String(this.isExpanded)),this.hasAttribute("aria-label")||this.setAttribute("aria-label",this.label)}_dispatchSelectedEvent(e){const{eventSelected:t}=this.constructor;this.dispatchEvent(new CustomEvent(t,{bubbles:!0,composed:!0,detail:{value:e}}))}_dispatchToggledEvent(e,t){const{eventToggled:s}=this.constructor;this.dispatchEvent(new CustomEvent(s,{bubbles:!0,composed:!0,detail:{value:e,expanded:t}}))}updated(e){e.has("_depth")&&this._handleStyles(),e.has("selected")&&(this.href||this.setAttribute("aria-selected",String(this.href||this.disabled?void 0:this.selected)),this.selected&&this._dispatchSelectedEvent(this.label)),e.has("active")&&!this.href&&this.setAttribute("aria-current",String(this.href?this.active?"page":void 0:this.active||void 0)),e.has("disabled")&&this.setAttribute("aria-disabled",String(this.disabled)),e.has("isExpanded")&&this._dispatchToggledEvent(this.label,this.isExpanded)}render(){const{disabled:e,isExpanded:i,href:a,id:o,label:n,onClick:r,_hasChildren:h,_handleIconSlotChange:c,_handleSlotChange:p,_handleToggleClick:m}=this;let _=`${d}--tree-parent-node__toggle-icon`;i&&(_+=`${d}--tree-parent-node__toggle-icon--expanded`);const b=t({[`${d}--tree-node`]:!0,[`${d}--tree-node--active`]:this.active,[`${d}--tree-node--disabled`]:e,[`${d}--tree-node--selected`]:this.selected,[`${d}--tree-node--with-icon`]:this._hasIcon,[`${d}--tree-leaf-node`]:!this._hasChildren,[`${d}--tree-parent-node`]:this._hasChildren}),$=t({[`${d}--tree-node__children`]:!0,[`${d}--tree-node__hidden`]:!i});return s`
      ${h?s`
            ${a?s` <a
                    role="treeitem"
                    class=${b}
                    aria-expanded=${!!i}
                    aria-owns="subtree-id-${o}"
                    href=${e?void 0:a}
                    tabindex=${e?-1:void 0}
                    @click=${r}>
                    <div id="label" class="${d}--tree-node__label">
                      <span
                        class="${d}--tree-parent-node__toggle"
                        ?disabled=${e}
                        @click=${m}>
                        ${l({class:_})}
                      </span>
                      <span class="${d}--tree-node__label__details">
                        <slot
                          name="icon"
                          @slotchange=${c}></slot>
                        ${n}
                      </span>
                    </div>
                  </a>
                  <ul id="subtree-id-${o} role="group" class="${$}">
                    <slot @slotchange=${p}></slot>
                  </ul>`:s`<div id="label" class="${d}--tree-node__label">
                    <span
                      class="${d}--tree-parent-node__toggle"
                      ?disabled=${e}
                      @click=${m}>
                      ${l({class:_})}
                    </span>
                    <span class="${d}--tree-node__label__details">
                      <slot
                        name="icon"
                        @slotchange=${c}></slot>
                      ${n}
                    </span>
                  </div>
                  <ul
                    id="subtree-id-${o}"
                    role="group"
                    class="${$}">
                    <slot @slotchange=${p}></slot>
                  </ul>`}
          `:s`
            ${a?s`<a
                  class=${b}
                  href=${e?void 0:a}
                  role="treeitem"
                  ?aria-disabled=${e}
                  aria-current=${this.href?this.active?"page":void 0:this.active||void 0}
                  tabindex=${e?-1:void 0}
                  @click=${r}>
                  <div id="label" class="${d}--tree-node__label">
                    <slot
                      name="icon"
                      @slotchange=${c}></slot>
                    ${n}
                  </div>
                </a>`:s` <div id="label" class="${d}--tree-node__label">
                  <slot name="icon" @slotchange=${c}></slot>
                  ${n}
                </div>`}
          `}
    `}static get eventSelected(){return`${d}-tree-node-selected`}static get eventToggled(){return`${d}-tree-node-toggled`}};h.styles=n,e([a({type:Boolean,reflect:!0})],h.prototype,"active",void 0),e([a({type:Boolean,reflect:!0})],h.prototype,"disabled",void 0),e([o()],h.prototype,"_depth",void 0),e([a({type:Boolean,attribute:"is-expanded"})],h.prototype,"isExpanded",void 0),e([a({})],h.prototype,"href",void 0),e([a({})],h.prototype,"id",void 0),e([a({})],h.prototype,"label",void 0),e([a({type:Boolean,reflect:!0})],h.prototype,"selected",void 0),e([a({type:Function})],h.prototype,"onClick",void 0),h=e([r(`${d}-tree-node`)],h);
