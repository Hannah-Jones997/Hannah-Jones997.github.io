/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as t}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as e}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as o}from"../../node_modules/lit-element/lit-element.min.js";import{property as s}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{state as i}from"../../node_modules/@lit/reactive-element/decorators/state.min.js";import{query as l}from"../../node_modules/@lit/reactive-element/decorators/query.min.js";import a from"../../packages/icons/lib/close/16.min.js";import{prefix as n}from"../../globals/settings.min.js";import r from"../../globals/mixins/focus.min.js";import d from"../../globals/decorators/host-listener.min.js";import m from"../../globals/mixins/host-listener.min.js";import{TAG_SIZE as c,TAG_TYPE as p}from"./defs.min.js";import h from"./tag.scss.min.js";import{carbonElement as u}from"../../globals/decorators/carbon-element.min.js";let g=class extends(m(r(o))){constructor(){super(...arguments),this._handleClick=t=>{if(t.composedPath().indexOf(this._buttonNode)>=0)if(this.disabled)t.stopPropagation();else if(this.open){const e={bubbles:!0,cancelable:!0,composed:!0,detail:{triggeredBy:t.target}};this.dispatchEvent(new CustomEvent(this.constructor.eventBeforeClose,e))&&(this.open=!1,this.dispatchEvent(new CustomEvent(this.constructor.eventClose,e)))}},this.title="Clear filter",this.disabled=!1,this.filter=!1,this.hasCustomIcon=!1,this.open=!0,this.size=c.MEDIUM,this.type=p.GRAY,this._hasEllipsisApplied=!1}_handleAILabelSlotChange({target:t}){const e=t.assignedNodes().filter((t=>void 0!==t.matches&&(t.matches(this.constructor.aiLabelItem)||t.matches(this.constructor.slugItem))));e.length>0&&(e[0].setAttribute("tag",`${this.type}`),e[0].setAttribute("size","sm"),e[0].setAttribute("kind","inline")),this.requestUpdate()}_handleIconSlotChange({target:t}){const e=t.assignedNodes();this.hasCustomIcon=Boolean(e.length>0),this.requestUpdate()}updated(){var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(`.${n}--tag__label`);if(!e||!0===this._hasEllipsisApplied)return;this._hasEllipsisApplied=e.scrollWidth>e.clientWidth;const o=this.getRootNode();if(o instanceof ShadowRoot){const t=o.host.tagName.toLowerCase();t!==`${n}-selectable-tag`&&t!==`${n}-operational-tag`||(this.setAttribute("role","button"),this.tabIndex=this.disabled?-1:0)}}render(){const{disabled:t,filter:o,_handleAILabelSlotChange:s,_handleIconSlotChange:i,size:l,title:r}=this;return e`
      ${l!==c.SMALL?e`<slot name="icon" @slotchange="${i}"></slot>`:""}
      <span class="${n}--tag__label">
        <slot></slot>
      </span>
      <slot name="decorator" @slotchange="${s}"></slot>
      <slot name="ai-label" @slotchange="${s}"></slot>
      <slot name="slug" @slotchange="${s}"></slot>
      ${o?e`
            <button class="${n}--tag__close-icon" ?disabled=${t}>
              ${a({"aria-label":r})}
            </button>
          `:""}
    `}static get slugItem(){return`${n}-slug`}static get aiLabelItem(){return`${n}-ai-label`}static get eventBeforeClose(){return`${n}-tag-beingclosed`}static get eventClose(){return`${n}-tag-closed`}};g.styles=h,t([l("button")],g.prototype,"_buttonNode",void 0),t([d("shadowRoot:click")],g.prototype,"_handleClick",void 0),t([s({type:String})],g.prototype,"title",void 0),t([s({type:Boolean,reflect:!0})],g.prototype,"disabled",void 0),t([s({type:Boolean,reflect:!0})],g.prototype,"filter",void 0),t([s({type:Boolean,attribute:"has-custom-icon",reflect:!0})],g.prototype,"hasCustomIcon",void 0),t([s({type:Boolean,reflect:!0})],g.prototype,"open",void 0),t([s({reflect:!0})],g.prototype,"size",void 0),t([s({reflect:!0})],g.prototype,"type",void 0),t([i()],g.prototype,"_hasEllipsisApplied",void 0),g=t([u(`${n}-tag`)],g);var b=g;export{c as TAG_SIZE,p as TAG_TYPE,b as default};
