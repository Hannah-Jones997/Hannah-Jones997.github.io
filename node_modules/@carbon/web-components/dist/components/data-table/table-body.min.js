/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as t}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as o}from"../../node_modules/lit-element/lit-element.min.js";import{property as s}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{query as r}from"../../node_modules/@lit/reactive-element/decorators/query.min.js";import{prefix as l}from"../../globals/settings.min.js";import n from"./data-table.scss.min.js";import{carbonElement as a}from"../../globals/decorators/carbon-element.min.js";let i=class extends o{constructor(){super(...arguments),this._handleSlotChange=()=>{this._updateZebra(),this.dispatchEvent(new CustomEvent(this.constructor.eventTableBodyContentChange,{bubbles:!0,cancelable:!1}))},this.useZebraStyles=!1}_updateZebra(){const{useZebraStyles:e,_slotNode:t}=this;t.assignedNodes().forEach((t=>{if(t.nodeType===Node.ELEMENT_NODE){const o=t.matches("*:nth-of-type(even)");t.even=e&&o,t.odd=e&&!o}}))}connectedCallback(){this.hasAttribute("role")||this.setAttribute("role","rowgroup"),super.connectedCallback()}updated(e){e.has("useZebraStyles")&&this._updateZebra()}render(){const{_handleSlotChange:e}=this;return t` <slot @slotchange="${e}"></slot> `}static get eventTableBodyContentChange(){return`${l}-table-body-content-change`}};i.styles=n,e([r("slot")],i.prototype,"_slotNode",void 0),e([s({type:Boolean,reflect:!0,attribute:"use-zebra-styles"})],i.prototype,"useZebraStyles",void 0),i=e([a(`${l}-table-body`)],i);
