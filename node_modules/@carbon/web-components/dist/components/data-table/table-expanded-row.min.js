/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as t}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as o}from"../../node_modules/lit-element/lit-element.min.js";import{property as i}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{prefix as l}from"../../globals/settings.min.js";import s from"./data-table.scss.min.js";import{carbonElement as r}from"../../globals/decorators/carbon-element.min.js";import n from"../../globals/decorators/host-listener.min.js";import m from"../../globals/mixins/host-listener.min.js";let a=class extends(m(o)){constructor(){super(...arguments),this.colSpan=1,this.expanded=!1,this.filtered=!1,this.highlighted=!1,this.selected=!1}_handleMouseOverOut(e){const{selectorRow:t}=this.constructor,{previousElementSibling:o}=this;(null==o?void 0:o.matches(t))&&(o.highlighted="mouseover"===e.type)}render(){const{colSpan:e}=this;return t`
      <td colspan="${e}">
        <div class="${l}--child-row-inner-container">
          <slot></slot>
        </div>
      </td>
    `}updated(){var e;(null===(e=this.previousElementSibling)||void 0===e?void 0:e.hasAttribute("ai-label"))?this.setAttribute("ai-label",""):this.removeAttribute("ai-label")}static get selectorRow(){return`${l}-table-row`}};a.styles=s,e([n("mouseover"),n("mouseout")],a.prototype,"_handleMouseOverOut",null),e([i({type:Number,attribute:"colspan"})],a.prototype,"colSpan",void 0),e([i({type:Boolean,reflect:!0})],a.prototype,"expanded",void 0),e([i({type:Boolean,reflect:!0})],a.prototype,"filtered",void 0),e([i({type:Boolean,reflect:!0})],a.prototype,"highlighted",void 0),e([i({type:Boolean,reflect:!0})],a.prototype,"selected",void 0),a=e([r(`${l}-table-expanded-row`)],a);
