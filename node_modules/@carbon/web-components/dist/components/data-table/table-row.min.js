/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as t}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as o}from"../../node_modules/lit-element/lit-element.min.js";import{property as l}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{prefix as n}from"../../globals/settings.min.js";import i from"../../packages/icons/lib/chevron--right/16.min.js";import{carbonElement as s}from"../../globals/decorators/carbon-element.min.js";import a from"../../globals/mixins/focus.min.js";import r from"./data-table.scss.min.js";import"../checkbox/checkbox.min.js";import"../checkbox/checkbox-group.min.js";import"../checkbox/checkbox-skeleton.min.js";import"../radio-button/radio-button.min.js";import"../radio-button/radio-button-group.min.js";import"../radio-button/radio-button-skeleton.min.js";import c from"../../globals/decorators/host-listener.min.js";import d from"../../globals/mixins/host-listener.min.js";let h=class extends(d(a(o))){constructor(){super(...arguments),this._hasAILabel=!1,this.batchExpansion=!1,this.disabled=!1,this.even=!1,this.expandable=!1,this.expanded=!1,this.filtered=!1,this.hideCheckbox=!1,this.highlighted=!1,this.odd=!1,this.overflowMenuOnHover=!1,this.radio=!1,this.selected=!1,this.selectionLabel="",this.selectionName="",this.selectionValue=""}_handleClickSelectionRadio(e){var t;const{detail:o}=e,l=o.checked,n={bubbles:!0,cancelable:!0,composed:!0,detail:{selected:l}},i=this.constructor;if(this.dispatchEvent(new CustomEvent(i.eventBeforeChangeSelection,n))){this.selected=l;const{selectorExpandedRow:e}=this.constructor;(null===(t=this.nextElementSibling)||void 0===t?void 0:t.matches(e))&&(this.nextElementSibling.selected=l)}}_handleClickSelectionCheckbox(e){var t;const{detail:o}=e,l=o.checked,n={bubbles:!0,cancelable:!0,composed:!0,detail:{selected:l}},i=this.constructor;if(this.dispatchEvent(new CustomEvent(i.eventBeforeChangeSelection,n))){this.selected=l;const{selectorExpandedRow:e}=this.constructor;(null===(t=this.nextElementSibling)||void 0===t?void 0:t.matches(e))&&(this.nextElementSibling.selected=l)}}_handleClickExpando(){this._handleUserInitiatedToggleExpando()}_handleMouseOverOut(e){const{selectorExpandedRow:t,selectorTableCellOverflowMenu:o}=this.constructor,{nextElementSibling:l}=this;if((null==l?void 0:l.matches(t))&&(l.highlighted="mouseover"===e.type),this.overflowMenuOnHover){const t=this.querySelector(o),l=null==t?void 0:t.parentElement;"mouseout"===e.type?l.overflowMenuOnHover=!0:l.overflowMenuOnHover=!1}}_handleUserInitiatedToggleExpando(e=!this.expanded){const t={bubbles:!0,cancelable:!0,composed:!0,detail:{expanded:e}};this.dispatchEvent(new CustomEvent(this.constructor.eventBeforeExpandoToggle,t))&&(this.expanded=e,this.dispatchEvent(new CustomEvent(this.constructor.eventExpandoToggle,t)))}_renderExpandButton(){const{_handleClickExpando:e}=this;return t`
      <div class="${n}--table-expand">
        <div>
          <slot name="ai-label" @slotchange="${this._handleSlotChange}"></slot>
          <slot name="slug" @slotchange="${this._handleSlotChange}"></slot>
          <button
            class="${n}--table-expand__button"
            @click="${e}">
            ${i({class:`${n}--table-expand__svg`})}
          </button>
        </div>
      </div>
    `}_handleSlotChange({target:e}){const t=e.assignedNodes().filter((e=>void 0!==e.matches&&(e.matches(this.constructor.aiLabelItem)||e.matches(this.constructor.slugItem))));t.length>0&&(this._hasAILabel=Boolean(t),t[0].setAttribute("size","mini")),this.requestUpdate()}_renderFirstCells(){const{disabled:e,hideCheckbox:o,radio:l,selected:i,selectionLabel:s,selectionName:a,selectionValue:r}=this;return a?t`
          <div class="${n}--table-column-checkbox">
            <div>
              <slot
                name="ai-label"
                @slotchange="${this._handleSlotChange}"></slot>
              <slot name="slug" @slotchange="${this._handleSlotChange}"></slot>
              ${l?t`<cds-radio-button data-table></cds-radio-button>`:t`<cds-checkbox
                    hide-label
                    ?hide-checkbox="${o}"
                    label-text="${s}"
                    name=${a}
                    data-table
                    ?disabled=${e}
                    ?checked=${i}
                    value=${r}></cds-checkbox> `}
            </div>
          </div>
        `:void 0}connectedCallback(){this.hasAttribute("role")||this.setAttribute("role","row"),super.connectedCallback()}updated(e){if(e.has("expanded")){const{selectorExpandedRow:e}=this.constructor,{expanded:t,nextElementSibling:o}=this;(null==o?void 0:o.matches(e))&&(o.expanded=t)}if(e.has("highlighted")){const{selectorExpandedRow:e}=this.constructor,{highlighted:t,nextElementSibling:o}=this;(null==o?void 0:o.matches(e))&&(o.highlighted=t)}this._hasAILabel?this.setAttribute("ai-label",""):this.removeAttribute("ai-label")}render(){var e;return this.selectionName&&(null===(e=this.closest(this.constructor.selectorTable))||void 0===e||e.setAttribute("is-selectable","")),t`
      ${this.expandable?this._renderExpandButton():""}
      ${this._renderFirstCells()}
      <slot></slot>
    `}static get eventRadioChange(){return`${n}-radio-button-changed`}static get eventCheckboxChange(){return`${n}-checkbox-changed`}static get eventBeforeChangeSelection(){return`${n}-table-row-change-selection`}static get selectorTable(){return`${n}-table`}static get selectorTableCellOverflowMenu(){return`${n}-table-cell ${n}-overflow-menu`}static get selectorExpandedRow(){return`${n}-table-expanded-row`}static get slugItem(){return`${n}-slug`}static get aiLabelItem(){return`${n}-ai-label`}static get eventBeforeExpandoToggle(){return`${n}-table-row-expando-beingtoggled`}static get eventExpandoToggle(){return`${n}-table-row-expando-toggled`}};h.styles=r,e([c("eventRadioChange")],h.prototype,"_handleClickSelectionRadio",null),e([c("eventCheckboxChange")],h.prototype,"_handleClickSelectionCheckbox",null),e([c("mouseover"),c("mouseout")],h.prototype,"_handleMouseOverOut",null),e([l({type:Boolean,reflect:!0,attribute:"batch-expansion"})],h.prototype,"batchExpansion",void 0),e([l({type:Boolean,reflect:!0})],h.prototype,"disabled",void 0),e([l({type:Boolean,reflect:!0})],h.prototype,"even",void 0),e([l({type:Boolean,reflect:!0})],h.prototype,"expandable",void 0),e([l({type:Boolean,reflect:!0})],h.prototype,"expanded",void 0),e([l({type:Boolean,reflect:!0})],h.prototype,"filtered",void 0),e([l({type:Boolean,reflect:!0,attribute:"hide-checkbox"})],h.prototype,"hideCheckbox",void 0),e([l({type:Boolean,reflect:!0})],h.prototype,"highlighted",void 0),e([l({type:Boolean,reflect:!0})],h.prototype,"odd",void 0),e([l({type:Boolean,reflect:!0,attribute:"overflow-menu-on-hover"})],h.prototype,"overflowMenuOnHover",void 0),e([l({type:Boolean,reflect:!0})],h.prototype,"radio",void 0),e([l({type:Boolean,reflect:!0})],h.prototype,"selected",void 0),e([l({attribute:"selection-label"})],h.prototype,"selectionLabel",void 0),e([l({attribute:"selection-name"})],h.prototype,"selectionName",void 0),e([l({attribute:"selection-value"})],h.prototype,"selectionValue",void 0),h=e([s(`${n}-table-row`)],h);var p=h;export{p as default};
