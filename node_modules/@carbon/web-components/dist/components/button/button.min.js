/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as t}from"../../node_modules/tslib/tslib.es6.min.js";import{classMap as o}from"../../node_modules/lit-html/directives/class-map.min.js";import{ifDefined as e}from"../../node_modules/lit-html/directives/if-defined.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as i}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as s}from"../../node_modules/lit-element/lit-element.min.js";import{property as n}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{prefix as a}from"../../globals/settings.min.js";import l from"../../globals/mixins/focus.min.js";import{BUTTON_KIND as r,BUTTON_TOOLTIP_ALIGNMENT as p,BUTTON_TOOLTIP_POSITION as d,BUTTON_TYPE as c,BUTTON_SIZE as h}from"./defs.min.js";import b from"./button.scss.min.js";import m from"../../globals/decorators/host-listener.min.js";import u from"../../globals/mixins/host-listener.min.js";import{carbonElement as $}from"../../globals/decorators/carbon-element.min.js";let g=class extends(u(l(s))){constructor(){super(...arguments),this._hasIcon=!1,this._handleOver=()=>{this.openTooltip=!0},this._handleHoverOut=async()=>{this.openTooltip=!1},this._handleFocus=async()=>{this.openTooltip=!0},this._handleFocusout=async()=>{this.openTooltip=!1},this.autofocus=!1,this.batchAction=!1,this.disabled=!1,this.hasMainContent=!1,this.isExpressive=!1,this.isSelected=!1,this.kind=r.PRIMARY,this.linkRole="button",this.openTooltip=!1,this.size="lg",this.tabIndex=0,this.tooltipAlignment=p.CENTER,this.tooltipPosition=d.TOP,this.type=c.BUTTON}_handleSlotChange({target:t}){const{name:o}=t,e=t.assignedNodes().some((t=>t.nodeType!==Node.TEXT_NODE||t.textContent.trim()));this["icon"===o?"_hasIcon":"hasMainContent"]=e,this.requestUpdate()}_handleDisabledClick(t){const{disabled:o}=this;o&&t.stopPropagation()}_checkBadgeWarning(){!this.querySelector(`${a}-badge-indicator`)||this.kind===r.GHOST&&this.size===h.LARGE||console.warn("The badge indicator must be used with kind='ghost' and size='lg'")}updated(t){var o;null===(o=super.updated)||void 0===o||o.call(this,t),this._checkBadgeWarning()}render(){var t,s,n;const{autofocus:l,buttonClassName:p,dangerDescription:c,disabled:h,download:b,href:m,hreflang:u,kind:$,isExpressive:g,isSelected:f,linkRole:v,openTooltip:y,ping:_,rel:T,size:x,tabIndex:j,target:O,tooltipAlignment:k,tooltipPosition:E,tooltipText:R,type:C,_hasIcon:B,hasMainContent:A,_handleSlotChange:N}=this;let D={[`${a}--btn`]:!0,[`${a}--btn--${$}`]:$,[`${a}--btn--danger--tertiary`]:$===r.DANGER_TERTIARY,[`${a}--btn--danger--ghost`]:$===r.DANGER_GHOST,[`${a}--btn--disabled`]:h,[`${a}--btn--icon-only`]:B&&!A,[`${a}--btn--${x}`]:x,[`${a}--layout--size-${x}`]:x,[`${a}-ce--btn--has-icon`]:B,[`${a}--btn--expressive`]:g,[`${a}--btn--selected`]:f&&"ghost"===$};if(p){const t={};null==p||p.split(" ").forEach((o=>{t[o]=!0})),D=Object.assign(Object.assign({},D),t)}const I=o(D),S=$.includes("danger");if(m)return h?i`
            <p id="button" part="button" class="${I}">
              <slot @slotchange="${N}"></slot>
              <slot name="icon" @slotchange="${N}"></slot>
            </p>
          `:i`
            <a
              id="button"
              part="button"
              role="${e(v)}"
              class="${I}"
              download="${e(b)}"
              href="${e(m)}"
              hreflang="${e(u)}"
              ping="${e(_)}"
              rel="${e(T)}"
              target="${e(O)}"
              type="${e(C)}"
              tabindex="${j}"
              aria-describedby="badge-indicator">
              <slot @slotchange="${N}"></slot>
              <slot name="icon" @slotchange="${N}"></slot>
            </a>
            ${null!==(t=i`<slot id="badge-indicator" name="badge-indicator"></slot>`)&&void 0!==t?t:!h}
          `;const w=!k||E!==d.TOP&&E!==d.BOTTOM?"":`-${k}`,M=o({[`${a}--popover-container`]:!0,[`${a}--popover--caret`]:!0,[`${a}--popover--high-contrast`]:!0,[`${a}--tooltip`]:!0,[`${a}--icon-tooltip`]:B,[`${a}--popover--open`]:y,[`${a}--popover--${E}${w}`]:R});return R&&!h?i`
          <span class="${M}">
            <button
              id="button"
              part="button"
              class="${I}"
              ?autofocus="${l}"
              ?disabled="${h}"
              tabindex="${j}"
              type="${e(C)}"
              aria-label="${e(R)}"
              aria-describedby="badge-indicator">
              <slot @slotchange="${N}"></slot>
              <slot name="icon" @slotchange="${N}"></slot>
            </button>
            <span class="${a}--popover">
              <span
                class="${a}--popover-content ${a}--tooltip-content">
                ${R}
              </span>
              <span class="${a}--popover-caret"></span>
            </span>
            ${null!==(s=i`<slot id="badge-indicator" name="badge-indicator"></slot>`)&&void 0!==s?s:!h}
          </span>
        `:i`
          <button
            id="button"
            part="button"
            class="${I}"
            ?autofocus="${l}"
            ?disabled="${h}"
            tabindex="${j}"
            type="${e(C)}"
            aria-describedby="badge-indicator">
            ${S?i`<span class="${a}--visually-hidden"
                  >${c}</span
                >`:""}
            <slot @slotchange="${N}"></slot>
            <slot name="icon" @slotchange="${N}"></slot>
          </button>
          ${null!==(n=i`<slot id="badge-indicator" name="badge-indicator"></slot>`)&&void 0!==n?n:!h}
        `}};g.shadowRootOptions=Object.assign(Object.assign({},s.shadowRootOptions),{delegatesFocus:!0}),g.styles=b,t([m("click",{capture:!0})],g.prototype,"_handleDisabledClick",null),t([m("mouseover")],g.prototype,"_handleOver",void 0),t([m("mouseout")],g.prototype,"_handleHoverOut",void 0),t([m("focus")],g.prototype,"_handleFocus",void 0),t([m("focusout")],g.prototype,"_handleFocusout",void 0),t([n({type:Boolean,reflect:!0})],g.prototype,"autofocus",void 0),t([n({type:Boolean,reflect:!0,attribute:"batch-action"})],g.prototype,"batchAction",void 0),t([n({reflect:!0,attribute:"button-class-name"})],g.prototype,"buttonClassName",void 0),t([n({reflect:!0,attribute:"danger-description"})],g.prototype,"dangerDescription",void 0),t([n({type:Boolean,reflect:!0})],g.prototype,"disabled",void 0),t([n({reflect:!0})],g.prototype,"download",void 0),t([n({reflect:!0,attribute:"has-main-content",type:Boolean})],g.prototype,"hasMainContent",void 0),t([n({reflect:!0})],g.prototype,"href",void 0),t([n({reflect:!0})],g.prototype,"hreflang",void 0),t([n({type:Boolean,reflect:!0})],g.prototype,"isExpressive",void 0),t([n({type:Boolean,reflect:!0})],g.prototype,"isSelected",void 0),t([n({reflect:!0})],g.prototype,"kind",void 0),t([n({attribute:"link-role"})],g.prototype,"linkRole",void 0),t([n({type:Boolean})],g.prototype,"openTooltip",void 0),t([n({reflect:!0})],g.prototype,"ping",void 0),t([n({reflect:!0})],g.prototype,"rel",void 0),t([n({reflect:!0})],g.prototype,"size",void 0),t([n({type:Number,attribute:"tab-index",reflect:!0})],g.prototype,"tabIndex",void 0),t([n({reflect:!0})],g.prototype,"target",void 0),t([n({reflect:!0,attribute:"tooltip-alignment"})],g.prototype,"tooltipAlignment",void 0),t([n({reflect:!0,attribute:"tooltip-position"})],g.prototype,"tooltipPosition",void 0),t([n({reflect:!0,attribute:"tooltip-text"})],g.prototype,"tooltipText",void 0),t([n({reflect:!0})],g.prototype,"type",void 0),g=t([$(`${a}-button`)],g);var f=g;export{r as BUTTON_KIND,h as BUTTON_SIZE,p as BUTTON_TOOLTIP_ALIGNMENT,d as BUTTON_TOOLTIP_POSITION,c as BUTTON_TYPE,f as default};
