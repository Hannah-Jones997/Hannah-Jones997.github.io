/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import{classMap as t}from"../../node_modules/lit-html/directives/class-map.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as o}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as i}from"../../node_modules/lit-element/lit-element.min.js";import{property as l}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{prefix as r}from"../../globals/settings.min.js";import a from"../../packages/icons/lib/warning--filled/16.min.js";import s from"../../packages/icons/lib/warning--alt--filled/16.min.js";import n from"./checkbox.scss.min.js";import{carbonElement as d}from"../../globals/decorators/carbon-element.min.js";import{CHECKBOX_ORIENTATION as c}from"./defs.min.js";let p=class extends i{constructor(){super(...arguments),this.orientation=c.VERTICAL,this.readonly=!1,this.warn=!1,this.warnText="",this._hasAILabel=!1}_handleSlotChange({target:e}){const t=e.assignedNodes().filter((e=>void 0!==e.matches&&(e.matches(this.constructor.aiLabelItem)||e.matches(this.constructor.slugItem))));this._hasAILabel=Boolean(t),t[0].setAttribute("size","mini"),this.requestUpdate()}updated(e){const{selectorCheckbox:t}=this.constructor,o=this.querySelectorAll(t);if(["disabled","readonly","orientation"].forEach((t=>{if(e.has(t)){const{[t]:e}=this;o.forEach((o=>{o[t]=e}))}})),e.has("invalid")){const{invalid:e}=this;o.forEach((t=>{e?t.setAttribute("invalid-group",""):t.removeAttribute("invalid-group")}))}}render(){const{ariaLabelledBy:e,disabled:i,helperText:l,invalid:n,invalidText:d,legendId:c,legendText:p,orientation:m,readonly:h,warn:b,warnText:g,_hasAILabel:u,_handleSlotChange:v}=this,$=!h&&!n&&b,y=!n&&!b,f=Math.random().toString(16).slice(2),x=l?`checkbox-group-helper-text-${f}`:void 0,_=l?o` <div id="${x}" class="${r}--form__helper-text">
          ${l}
        </div>`:null,k=t({[`${r}--checkbox-group`]:!0,[`${r}--checkbox-group--readonly`]:h,[`${r}--checkbox-group--invalid`]:!h&&n,[`${r}--checkbox-group--warning`]:$,[`${r}--checkbox-group--slug`]:u,[`${r}--checkbox-group--${m}`]:"horizontal"===m});return o`
      <fieldset
        class="${k}"
        ?data-invalid=${n}
        ?disabled=${i}
        aria-disabled=${h}
        ?aria-labelledby=${e||c}
        ?aria-describedby=${n||b||!_?void 0:x}
        orientation=${m}>
        <legend class="${r}--label" id=${c||e}>
          ${p}
          <slot name="ai-label" @slotchange="${v}"></slot>
          <slot name="decorator" @slotchange="${v}"></slot>
          <slot name="slug" @slotchange="${v}"></slot>
        </legend>
        <slot></slot>
        <div class="${r}--checkbox-group__validation-msg">
          ${!h&&n?o`
                ${a({class:`${r}--checkbox__invalid-icon`})}
                <div class="${r}--form-requirement">${d}</div>
              `:null}
          ${$?o`
                ${s({class:`${r}--checkbox__invalid-icon ${r}--checkbox__invalid-icon--warning`})}
                <div class="${r}--form-requirement">${g}</div>
              `:null}
        </div>
        ${y?_:null}
      </fieldset>
    `}static get selectorCheckbox(){return`${r}-checkbox`}static get slugItem(){return`${r}-slug`}static get aiLabelItem(){return`${r}-ai-label`}};p.shadowRootOptions=Object.assign(Object.assign({},i.shadowRootOptions),{delegatesFocus:!0}),p.styles=n,e([l({type:String,reflect:!0,attribute:"aria-labelledby"})],p.prototype,"ariaLabelledBy",void 0),e([l({type:Boolean})],p.prototype,"disabled",void 0),e([l({type:String,reflect:!0,attribute:"helper-text"})],p.prototype,"helperText",void 0),e([l({type:Boolean,attribute:"invalid"})],p.prototype,"invalid",void 0),e([l({type:String,reflect:!0,attribute:"invalid-text"})],p.prototype,"invalidText",void 0),e([l({type:String,reflect:!0,attribute:"legend-id"})],p.prototype,"legendId",void 0),e([l({type:String,reflect:!0,attribute:"legend-text"})],p.prototype,"legendText",void 0),e([l({type:String,reflect:!0,attribute:"orientation"})],p.prototype,"orientation",void 0),e([l({type:Boolean,reflect:!0})],p.prototype,"readonly",void 0),e([l({type:Boolean,reflect:!0})],p.prototype,"warn",void 0),e([l({type:String,reflect:!0,attribute:"warn-text"})],p.prototype,"warnText",void 0),p=e([d(`${r}-checkbox-group`)],p);export{c as CHECKBOX_ORIENTATION};
