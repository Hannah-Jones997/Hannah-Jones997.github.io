/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import{styleMap as t}from"../../node_modules/lit-html/directives/style-map.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as o}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as s}from"../../node_modules/lit-element/lit-element.min.js";import{property as i}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import n from"../../packages/icons/lib/chevron--down/16.min.js";import{prefix as l}from"../../globals/settings.min.js";import d from"../../globals/mixins/focus.min.js";import{CODE_SNIPPET_TYPE as r}from"./defs.min.js";import p from"./code-snippet.scss.min.js";import"../copy-button/copy-button.min.js";import"../copy/copy.min.js";import"../button/button.min.js";import{carbonElement as a}from"../../globals/decorators/carbon-element.min.js";let c=class extends(d(s)){constructor(){super(...arguments),this._expandedCode=!1,this._hObserveResize=null,this._rowHeightInPixels=16,this._hasRightOverflow=!0,this._hasLeftOverflow=!1,this._shouldShowMoreLessBtn=!1,this._resizeObserver=new ResizeObserver((()=>{var e;const t=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector(`.${l}--snippet-container`),o=null==t?void 0:t.querySelector("code"),{type:s,maxCollapsedNumberOfRows:i,maxExpandedNumberOfRows:n,minExpandedNumberOfRows:d,_rowHeightInPixels:p,_handleScroll:a}=this;if(o&&s===r.MULTI){const{height:e}=o.getBoundingClientRect();this._shouldShowMoreLessBtn=i>0&&(n<=0||n>i)&&e>i*p,this._expandedCode&&d>0&&e<=d*p&&(this._expandedCode=!1)}(o&&s===r.MULTI||t&&s===r.SINGLE)&&a(),this.requestUpdate()})),this.copyText="",this.disabled=!1,this.feedback="Copied!",this.feedbackTimeout=2e3,this.hideCopyButton=!1,this.maxCollapsedNumberOfRows=15,this.maxExpandedNumberOfRows=0,this.minCollapsedNumberOfRows=3,this.minExpandedNumberOfRows=16,this.showLessText="Show less",this.showMoreText="Show more",this.tooltipContent="Copy to clipboard",this.wrapText=!1,this.type=r.SINGLE}_handleCopyClick(){const{ownerDocument:e}=this,t=e.defaultView.getSelection();t.removeAllRanges();const o=e.createElement("code");o.className=`${l}--visually-hidden`;const s=e.createElement("pre"),i=Array.from(this.childNodes).filter((e=>e.nodeType===Node.TEXT_NODE));s.textContent=this.copyText||i[0].textContent,o.appendChild(s),e.body.appendChild(o);const n=e.createRange();n.selectNodeContents(o),t.addRange(n),e.execCommand("copy"),e.body.removeChild(o),t.removeAllRanges()}_getCodeRefDimensions(e){const{clientWidth:t,scrollLeft:o,scrollWidth:s}=e;return{horizontalOverflow:s>t,codeClientWidth:t,codeScrollWidth:s,codeScrollLeft:o}}_handleScroll(){var e;if(this){const t=null===(e=null==this?void 0:this.shadowRoot)||void 0===e?void 0:e.querySelector(`.${l}--snippet-container`),o=null==t?void 0:t.querySelector("pre");if(this.type===r.INLINE||this.type===r.SINGLE&&!t||this.type===r.MULTI&&!o)return;const{horizontalOverflow:s,codeClientWidth:i,codeScrollWidth:n,codeScrollLeft:d}=this.type===r.SINGLE?this._getCodeRefDimensions(t):this._getCodeRefDimensions(o);this._hasLeftOverflow=s&&!!d,this._hasRightOverflow=s&&d+i!==n,this.requestUpdate()}}_handleClickExpanded(){this._expandedCode=!this._expandedCode,this.requestUpdate()}connectedCallback(){var e,t;super.connectedCallback(),this._hObserveResize&&(this._hObserveResize=this._hObserveResize.release()),this._hObserveResize=(e=this._resizeObserver,(t=this)?(e.observe(t),{release:()=>(e.unobserve(t),null)}):null)}disconnectedCallback(){this._hObserveResize&&(this._hObserveResize=this._hObserveResize.release())}updated(){this._expandedCode?this.setAttribute("expanded-code",""):this.removeAttribute("expanded-code")}render(){const{disabled:e,feedback:s,feedbackTimeout:i,hideCopyButton:d,maxExpandedNumberOfRows:p,minExpandedNumberOfRows:a,maxCollapsedNumberOfRows:c,minCollapsedNumberOfRows:h,type:m,wrapText:u,tooltipContent:b,showMoreText:f,showLessText:v,_expandedCode:x,_handleCopyClick:y,_handleScroll:w,_hasRightOverflow:_,_hasLeftOverflow:$,_rowHeightInPixels:C,_shouldShowMoreLessBtn:O}=this;let R=`${l}--snippet`;m&&(R+=` ${l}--snippet--${m}`),"inline"!==m&&e&&(R+=` ${l}--snippet--disabled`),d&&(R+=` ${l}--snippet--no-copy`),u&&(R+=` ${l}--snippet--wraptext`),"multi"==m&&_&&(R+=` ${l}--snippet--has-right-overflow`);const g=`${l}--snippet-btn--expand`,N=e?`${l}--snippet--disabled`:"",L=x?v:f;if(m===r.INLINE)return o`
        <cds-copy ?disabled=${e} button-class-name="${R}" @click="${y}">
          <code slot="icon"><slot></slot></code>
          <span slot="tooltip-content">${b}</span>
        </cds-copy>
      `;const T={};return"multi"===m&&(x?(p>0&&(T["max-height"]=p*C+"px"),a>0&&(T["min-height"]=a*C+"px")):(c>0&&(T["max-height"]=c*C+"px"),h>0&&(T["min-height"]=h*C+"px"))),o`
      <div
        role="${m===r.SINGLE||m===r.MULTI?"textbox":null}"
        tabindex="${m!==r.SINGLE&&m!==r.MULTI||e?null:0}"
        class="${l}--snippet-container"
        aria-label="${"code-snippet"}"
        aria-readonly="${m===r.SINGLE||m===r.MULTI||null}"
        aria-multiline="${m===r.MULTI||null}"
        @scroll="${m===r.SINGLE&&w||null}"
        style=${t(T)}>
        <pre
          @scroll="${m===r.MULTI&&w||null}"><code><slot></slot></code></pre>
      </div>

      ${$?o`
            <div class="${l}--snippet__overflow-indicator--left"></div>
          `:""}
      ${_&&m!==r.MULTI?o`
            <div class="${l}--snippet__overflow-indicator--right"></div>
          `:""}
      ${d?"":o`
            <cds-copy-button
              ?disabled=${e}
              button-class-name=${N}
              feedback=${s}
              feedback-timeout=${i}
              @click="${y}">
              ${b}
            </cds-copy-button>
          `}
      ${O?o`
            <cds-button
              kind="ghost"
              size="sm"
              button-class-name=${g}
              ?disabled=${e}
              @click=${()=>this._handleClickExpanded()}>
              <span class="${l}--snippet-btn--text">
                ${L}
              </span>
              ${n({class:`${l}--icon-chevron--down ${l}--snippet__icon`,name:"cheveron--down",role:"img",slot:"icon"})}
            </cds-button>
          `:""}
    `}};c.shadowRootOptions=Object.assign(Object.assign({},s.shadowRootOptions),{delegatesFocus:!0}),c.styles=p,e([i({attribute:"copy-text"})],c.prototype,"copyText",void 0),e([i({type:Boolean,reflect:!0})],c.prototype,"disabled",void 0),e([i()],c.prototype,"feedback",void 0),e([i({type:Number,attribute:"feedback-timeout"})],c.prototype,"feedbackTimeout",void 0),e([i({type:Boolean,reflect:!0,attribute:"hide-copy-button"})],c.prototype,"hideCopyButton",void 0),e([i()],c.prototype,"maxCollapsedNumberOfRows",void 0),e([i()],c.prototype,"maxExpandedNumberOfRows",void 0),e([i()],c.prototype,"minCollapsedNumberOfRows",void 0),e([i()],c.prototype,"minExpandedNumberOfRows",void 0),e([i({attribute:"show-less-text"})],c.prototype,"showLessText",void 0),e([i({attribute:"show-more-text"})],c.prototype,"showMoreText",void 0),e([i({attribute:"tooltip-content"})],c.prototype,"tooltipContent",void 0),e([i({type:Boolean,reflect:!0,attribute:"wrap-text"})],c.prototype,"wrapText",void 0),e([i({reflect:!0})],c.prototype,"type",void 0),c=e([a(`${l}-code-snippet`)],c);export{r as CODE_SNIPPET_TYPE};
