/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as t}from"../../node_modules/tslib/tslib.es6.min.js";import{classMap as e}from"../../node_modules/lit-html/directives/class-map.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as o}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as s}from"../../node_modules/lit-element/lit-element.min.js";import{property as i}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{prefix as l}from"../../globals/settings.min.js";import{SKELETON_TEXT_TYPE as r}from"./defs.min.js";import n from"./skeleton-text.scss.min.js";import{carbonElement as p}from"../../globals/decorators/carbon-element.min.js";function m(t,e,o){return Math.floor([.973051493507435,.15334737213558558,.5671034553053769][o%3]*(e-t+1))+t}let a=class extends s{constructor(){super(...arguments),this.type=r.REGULAR,this.heading=!1,this.width="100%",this.paragraph=!1,this.lineCount=3}render(){const{optionalClasses:t,paragraph:s,lineCount:i,type:n,width:p,heading:a}=this;let d={[`${l}--skeleton__text`]:!0,[`${l}--skeleton__heading`]:a||n===r.HEADING};if(t){const e={};null==t||t.split(" ").forEach((t=>{e[t]=!0})),d=Object.assign(Object.assign({},d),e)}const c=e(d);if(s){const t=parseInt(this.width,10),e=this.width.includes("px"),s=this.width.includes("%"),l=[];for(let r=0;r<i;r++){const i=s&&`${m(0,75,r)}px`||e&&`${m(0,t,r)}px`,n=s&&`width: calc(${p} - ${i})`||e&&`width: ${i}`||"";l.push(o`<p class="${c}" style="${n}"></p>`)}return l}return o`<p class="${c}" style="width:${p}"></p>`}};a.styles=n,t([i({reflect:!0,attribute:"optional-classes"})],a.prototype,"optionalClasses",void 0),t([i({reflect:!0})],a.prototype,"type",void 0),t([i({type:Boolean,reflect:!0})],a.prototype,"heading",void 0),t([i({reflect:!0})],a.prototype,"width",void 0),t([i({type:Boolean,reflect:!0})],a.prototype,"paragraph",void 0),t([i({type:Number,reflect:!0})],a.prototype,"lineCount",void 0),a=t([p(`${l}-skeleton-text`)],a);export{r as SKELETON_TEXT_TYPE};
