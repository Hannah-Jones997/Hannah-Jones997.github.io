/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import{classMap as t}from"../../node_modules/lit-html/directives/class-map.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as o}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as s}from"../../node_modules/lit-element/lit-element.min.js";import{property as l}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import i from"../../packages/icons/lib/close/16.min.js";import a from"../../packages/icons/lib/search/16.min.js";import{prefix as n}from"../../globals/settings.min.js";import r from"../../globals/directives/if-non-empty.min.js";import p from"../../globals/mixins/focus.min.js";import m from"../../globals/mixins/form.min.js";import"../text-input/text-input.min.js";import c from"../../globals/decorators/host-listener.min.js";import d from"../../globals/mixins/host-listener.min.js";import u from"./search.scss.min.js";import{carbonElement as h}from"../../globals/decorators/carbon-element.min.js";import{INPUT_SIZE as b}from"../text-input/defs.min.js";let v=class extends(d(p(m(s)))){constructor(){super(...arguments),this.autoComplete="off",this.closeButtonLabelText="",this.disabled=!1,this.expandable=!1,this.expanded=!1,this.hasCustomIcon=!1,this.labelText="",this.name="",this.role="",this.placeholder="Search",this.size=b.MEDIUM,this.type="",this.value=""}_handleInput(e){const{target:t}=e,{value:o}=t;this.dispatchEvent(new CustomEvent(this.constructor.eventInput,{bubbles:!0,composed:!0,cancelable:!1,detail:{value:o}})),this.value=o}_handleClearInputButtonClick(){if(this.value){this.dispatchEvent(new CustomEvent(this.constructor.eventInput,{bubbles:!0,composed:!0,cancelable:!1,detail:{value:""}})),this.value="";this.shadowRoot.querySelector("input").focus()}}_handleExpand(){this.expandable&&!this.expanded&&this.setAttribute("expanded","")}_handleClose(){this.expandable&&this.expanded&&!this.value&&this.removeAttribute("expanded")}_handleSlotChange(){const e=this.querySelector("svg");null==e||e.setAttribute("part","search-icon"),null==e||e.setAttribute("class",`${n}--search-magnifier-icon`),null==e||e.setAttribute("role","img"),this.hasCustomIcon=!0}_handleFormdata(e){const{formData:t}=e,{disabled:o,name:s,value:l}=this;o||t.append(s,l)}render(){const{autoComplete:e,closeButtonLabelText:s,disabled:l,hasCustomIcon:p,labelText:m,name:c,placeholder:d,role:u,type:h,value:b="",_handleInput:v,_handleClearInputButtonClick:f,_handleSlotChange:y}=this,x=t({[`${n}--search-close`]:!0,[`${n}--search-close--hidden`]:!this.value});return o`
      <div class="${n}--search-magnifier">
        <slot name="icon" @slotchange=${y}>
          ${p?o``:o`${a({part:"search-icon",class:`${n}--search-magnifier-icon`,role:"img"})}`}
        </slot>
      </div>
      <label for="input" part="label-text" class="${n}--label">
        <slot>${m}</slot>
      </label>
      <input
        autocomplete="${e}"
        id="input"
        part="input"
        type="${r(h)}"
        class="${n}--search-input"
        ?disabled="${l}"
        name="${r(c)}"
        placeholder="${r(d)}"
        role="${u}"
        .value="${b}"
        @input="${v}" />
      <button
        part="close-button"
        class="${x}"
        @click="${f}"
        type="button"
        aria-label="${s}">
        ${i({part:"close-icon","aria-label":s,role:"img"})}
      </button>
    `}static get eventInput(){return`${n}-search-input`}};v.shadowRootOptions=Object.assign(Object.assign({},s.shadowRootOptions),{delegatesFocus:!0}),v.styles=u,e([c("focus")],v.prototype,"_handleExpand",null),e([c("focusout")],v.prototype,"_handleClose",null),e([l({attribute:"autocomplete"})],v.prototype,"autoComplete",void 0),e([l({attribute:"close-button-label-text"})],v.prototype,"closeButtonLabelText",void 0),e([l({type:Boolean,reflect:!0})],v.prototype,"disabled",void 0),e([l({type:Boolean,reflect:!0})],v.prototype,"expandable",void 0),e([l({type:Boolean,reflect:!0})],v.prototype,"expanded",void 0),e([l({type:Boolean})],v.prototype,"hasCustomIcon",void 0),e([l({attribute:"label-text"})],v.prototype,"labelText",void 0),e([l()],v.prototype,"name",void 0),e([l()],v.prototype,"role",void 0),e([l()],v.prototype,"placeholder",void 0),e([l({reflect:!0})],v.prototype,"size",void 0),e([l()],v.prototype,"type",void 0),e([l({type:String})],v.prototype,"value",void 0),v=e([h(`${n}-search`)],v);var f=v;export{f as default};
