/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as t}from"../../node_modules/tslib/tslib.es6.min.js";import{classMap as e}from"../../node_modules/lit-html/directives/class-map.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as o}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as l}from"../../node_modules/lit-element/lit-element.min.js";import{property as i}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{carbonElement as s}from"../../globals/decorators/carbon-element.min.js";import{prefix as n}from"../../globals/settings.min.js";import r from"../../globals/mixins/host-listener.min.js";import a from"../../globals/directives/if-non-empty.min.js";import d from"./file-uploader.scss.min.js";import{BUTTON_KIND as c,BUTTON_SIZE as u}from"../button/defs.min.js";export{FORM_ELEMENT_COLOR_SCHEME as TILE_COLOR_SCHEME}from"../../globals/shared-enums.min.js";let m=class extends(r(l)){constructor(){super(...arguments),this.buttonKind=c.PRIMARY,this.size=u.MEDIUM,this.accept="",this.disabled=!1,this.multiple=!1,this.name="",this.slot="drop-container"}_handleClick(t){var e,o,l;t.target.value=null;const{selectorInput:i}=this.constructor;null===(o=null===(e=null==this?void 0:this.shadowRoot)||void 0===e?void 0:e.querySelector(i))||void 0===o||o.setAttribute("value",""),(null===(l=null==this?void 0:this.shadowRoot)||void 0===l?void 0:l.querySelector(i)).click()}_handleKeyDown(t){var e,o,l;const{selectorInput:i}=this.constructor;"Enter"!==t.key&&"Space"!==t.key||(null===(o=null===(e=null==this?void 0:this.shadowRoot)||void 0===e?void 0:e.querySelector(i))||void 0===o||o.setAttribute("value",""),(null===(l=null==this?void 0:this.shadowRoot)||void 0===l?void 0:l.querySelector(i)).click())}_handleChange(t){var e;const o=this._getFiles(t),{eventChange:l,selectorInput:i}=this.constructor;this.dispatchEvent(new CustomEvent(l,{bubbles:!0,composed:!0,detail:{addedFiles:o}}));const s=null===(e=null==this?void 0:this.shadowRoot)||void 0===e?void 0:e.querySelector(i);s&&(s.value="")}_getFiles(t){var e;const{files:o}=null!==(e="drop"===t.type?t.dataTransfer:t.target)&&void 0!==e?e:{},{accept:l}=this;if(!l||!/^(change|drop)$/.test(t.type))return Array.from(null!=o?o:[]);const i=new Set(l.split(" "));return Array.prototype.filter.call(o,(({name:t,type:e=""})=>{var o;const l=/\.[^.]+$/,s=l.test(t),[n]=s?null!==(o=l.exec(t))&&void 0!==o?o:[]:[void 0];return i.has(e)||n&&i.has(n)}))}render(){const{accept:t,disabled:l,multiple:i,name:s,buttonKind:r,size:d,_handleChange:c}=this,u=e({[`${n}--file-browse-btn`]:!0,[`${n}--file-browse-btn--disabled`]:l}),m=e({[`${n}--btn`]:!0,[`${n}--btn--${r}`]:r,[`${n}--layout--size-${d}`]:d,[`${n}--btn--disabled`]:l,[`${n}--btn--${d}`]:d});return o`
      <button
        type="button"
        class="${m}"
        @click="${this._handleClick}"
        @keydown="${this._handleKeyDown}">
        <slot></slot>
      </button>
      <label class="${u}" for="file"> </label>
      <input
        id="file"
        type="file"
        class="${n}--file-input"
        tabindex="-1"
        accept="${a(t)}"
        ?disabled="${l}"
        ?multiple="${i}"
        name="${a(s)}"
        @change="${c}" />
    `}static get eventChange(){return`${n}-file-uploader-button-changed`}static get selectorInput(){return`.${n}--file-input`}};m.styles=d,t([i({reflect:!0,attribute:"button-kind"})],m.prototype,"buttonKind",void 0),t([i({reflect:!0})],m.prototype,"size",void 0),t([i()],m.prototype,"accept",void 0),t([i({type:Boolean,reflect:!0})],m.prototype,"disabled",void 0),t([i({type:Boolean,reflect:!0})],m.prototype,"multiple",void 0),t([i({reflect:!0})],m.prototype,"name",void 0),t([i({reflect:!0})],m.prototype,"slot",void 0),m=t([s(`${n}-file-uploader-button`)],m);
