/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import{classMap as t}from"../../node_modules/lit-html/directives/class-map.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as o}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as r}from"../../node_modules/lit-element/lit-element.min.js";import{property as i}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{prefix as l}from"../../globals/settings.min.js";import s from"../../globals/mixins/host-listener.min.js";import n from"../../globals/decorators/host-listener.min.js";import a from"../../globals/directives/if-non-empty.min.js";import d from"./file-uploader.scss.min.js";import{carbonElement as p}from"../../globals/decorators/carbon-element.min.js";export{FORM_ELEMENT_COLOR_SCHEME as TILE_COLOR_SCHEME}from"../../globals/shared-enums.min.js";const m={dragover:"copy",dragleave:"move"};let c=class extends(s(r)){constructor(){super(...arguments),this._active=!1,this.accept="",this.disabled=!1,this.multiple=!1,this.name="",this.slot="drop-container"}_handleChange(e){var t,o;const{eventChange:r,selectorInput:i}=this.constructor,{files:l}=null!==(t="drop"===e.type?e.dataTransfer:e.target)&&void 0!==t?t:{},s=this._getFiles(e,l);this.dispatchEvent(new CustomEvent(r,{bubbles:!0,composed:!0,detail:{addedFiles:s}}));const n=null===(o=null==this?void 0:this.shadowRoot)||void 0===o?void 0:o.querySelector(i);n&&(n.value="")}_handleDrag(e){if(e.preventDefault(),this.disabled)return;const{dataTransfer:t,type:o}=e,r=m[o];t&&r&&(t.dropEffect=r),this._active="dragover"===o,"drop"===o&&this._handleChange(e),this.requestUpdate()}_getFiles(e,t){const{accept:o}=this;if(!o||!/^(change|drop)$/.test(e.type))return Array.from(null!=t?t:[]);const r=new Set(o.split(" "));return Array.prototype.filter.call(t,(({name:e,type:t=""})=>{var o;const i=/\.[^.]+$/,l=i.test(e),[s]=l?null!==(o=i.exec(e))&&void 0!==o?o:[]:[void 0];return r.has(t)||s&&r.has(s)}))}render(){const{accept:e,disabled:r,multiple:i,name:s,_active:n,_handleChange:d}=this,p=t({[`${l}--file-browse-btn`]:!0,[`${l}--file-browse-btn--disabled`]:r}),m=t({[`${l}--file__drop-container`]:!0,[`${l}--file__drop-container--drag-over`]:n});return o`
      <label class="${p}" for="file" tabindex="0">
        <div class="${m}" role="button">
          <slot></slot>
          <input
            id="file"
            type="file"
            name="${a(s)}"
            class="${l}--file-input"
            tabindex="-1"
            accept="${a(e)}"
            ?disabled="${r}"
            ?multiple="${i}"
            @change="${d}" />
        </div>
      </label>
    `}static get eventChange(){return`${l}-file-uploader-drop-container-changed`}static get selectorInput(){return`.${l}--file-input`}};c.styles=d,e([n("dragover"),n("dragleave"),n("drop")],c.prototype,"_handleDrag",null),e([i()],c.prototype,"accept",void 0),e([i({type:Boolean,reflect:!0})],c.prototype,"disabled",void 0),e([i({type:Boolean,reflect:!0})],c.prototype,"multiple",void 0),e([i({reflect:!0})],c.prototype,"name",void 0),e([i({reflect:!0})],c.prototype,"slot",void 0),c=e([p(`${l}-file-uploader-drop-container`)],c);
