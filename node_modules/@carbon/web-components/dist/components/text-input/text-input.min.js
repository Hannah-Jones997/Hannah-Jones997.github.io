/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as t}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as e}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as i}from"../../node_modules/lit-element/lit-element.min.js";import{property as l}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{query as o}from"../../node_modules/@lit/reactive-element/decorators/query.min.js";import{carbonElement as s}from"../../globals/decorators/carbon-element.min.js";import{classMap as a}from"../../node_modules/lit-html/directives/class-map.min.js";import{prefix as r}from"../../globals/settings.min.js";import n from"../../packages/icons/lib/view/16.min.js";import d from"../../packages/icons/lib/view--off/16.min.js";import p from"../../packages/icons/lib/warning--filled/16.min.js";import u from"../../packages/icons/lib/warning--alt--filled/16.min.js";import h from"../../globals/directives/if-non-empty.min.js";import m from"../../globals/mixins/form.min.js";import v from"../../globals/mixins/validity.min.js";import{INPUT_SIZE as c,INPUT_TOOLTIP_ALIGNMENT as b,INPUT_TOOLTIP_DIRECTION as $,INPUT_TYPE as y}from"./defs.min.js";import g from"./text-input.scss.min.js";let w=class extends(v(m(i))){constructor(){super(...arguments),this._hasAILabel=!1,this._value="",this.autocomplete="",this.autofocus=!1,this.disabled=!1,this.enableCounter=!1,this.helperText="",this.invalid=!1,this.invalidText="",this.warn=!1,this.warnText="",this.hideLabel=!1,this.label="",this.name="",this.pattern="",this.placeholder="",this.readonly=!1,this.required=!1,this.requiredValidityMessage="Please fill out this field.",this.hidePasswordLabel="Hide password",this.showPasswordLabel="Show password",this.showPasswordVisibilityToggle=!1,this.size=c.MEDIUM,this.inline=!1,this.tooltipAlignment=b.CENTER,this.tooltipDirection=$.BOTTOM,this.type=y.TEXT,this.validityMessage=""}_handleSlotChange({target:t}){const e=t.assignedNodes().filter((t=>void 0!==t.matches&&(t.matches(this.constructor.aiLabelItem)||t.matches(this.constructor.slugItem))));this._hasAILabel=Boolean(e),e[0].setAttribute("size","mini"),this.requestUpdate()}_handleInput({target:t}){this.value=t.value}_handleFormdata(t){const{formData:e}=t,{disabled:i,name:l,value:o}=this;i||e.append(l,o)}get value(){return this._input?this._input.value:this._value}set value(t){const e=this._value;this._value=t,this.requestUpdate("value",e),this._input&&(this._input.value=t)}togglePasswordVisibility(){this.type=this.type===y.PASSWORD?y.TEXT:y.PASSWORD}render(){const{disabled:t,enableCounter:i,helperText:l,hideLabel:o,inline:s,invalid:m,invalidText:v,label:c,maxCount:b,readonly:$,required:g,size:w,type:f,warn:_,warnText:x,value:T,_handleInput:j,_hasAILabel:L,_handleSlotChange:A}=this,P=p({class:`${r}--text-input__invalid-icon`}),S=u({class:`${r}--text-input__invalid-icon ${r}--text-input__invalid-icon--warning`}),q={disabled:!$&&t,invalid:!$&&m,warn:!$&&!m&&_,"slot-name":"","slot-text":"",icon:null};q.invalid?(q.icon=P,q["slot-name"]="invalid-text",q["slot-text"]=v):q.warn&&(q.icon=S,q["slot-name"]="warn-text",q["slot-text"]=x);const B=a({[`${r}--label`]:!0,[`${r}--text-input__label-counter`]:!0,[`${r}--label--disabled`]:t}),D=a({[`${r}--form-item`]:!0,[`${r}--text-input-wrapper`]:!0,[`${r}--text-input-wrapper--inline`]:s,[`${r}--text-input-wrapper--readonly`]:$,[`${r}--text-input-wrapper--inline--invalid`]:s&&q.invalid}),I=a({[`${r}--text-input`]:!0,[`${r}--text-input--invalid`]:q.invalid,[`${r}--text-input--warning`]:q.warn,[`${r}--text-input--${w}`]:w,[`${r}--layout--size-${w}`]:w,[`${r}--password-input`]:f===y.PASSWORD,[`${r}--text-input__field-wrapper--decorator`]:L}),O=a({[`${r}--text-input__field-outer-wrapper`]:!0,[`${r}--text-input__field-outer-wrapper--inline`]:s}),R=a({[`${r}--text-input__field-wrapper`]:!0,[`${r}--text-input__field-wrapper--warning`]:q.warn}),C=a({[`${r}--label`]:!0,[`${r}--visually-hidden`]:o,[`${r}--label--disabled`]:q.disabled}),M=a({[`${r}--form__helper-text`]:!0,[`${r}--form__helper-text--disabled`]:q.disabled}),E=f!==y.PASSWORD,V=E?d({class:`${r}--icon-visibility-off`}):n({class:`${r}--icon-visibility-on`}),k=a({[`${r}--text-input--password__visibility__toggle`]:!0,[`${r}--btn`]:!0,[`${r}--btn--icon-only`]:!0,[`${r}--tooltip__trigger`]:!0,[`${r}--tooltip--a11y`]:!0,[`${r}--btn--disabled`]:q.disabled,[`${r}--tooltip--${this.tooltipDirection}`]:this.tooltipDirection,[`${r}--tooltip--align-${this.tooltipAlignment}`]:this.tooltipAlignment}),z=e`
      <span class="${r}--assistive-text">
        ${E?this.hidePasswordLabel:this.showPasswordLabel}
      </span>
    `,W=null==T?void 0:T.length,N=i&&b?e` <label class="${B}">
            <slot name="label-text">${W}/${b}</slot>
          </label>`:null,U=e`<div class="${r}--text-input__label-wrapper">
      <label class="${C}"> ${c} </label> ${N}
    </div>`,X=l?e`<div
          class="${M}"
          id="helper-text"
          ?hidden="${q.invalid||q.warn}">
          <slot name="helper-text"> ${l} </slot>
        </div>`:null;return e`
      <div class="${D}">
        ${s?e`<div class="${r}--text-input__label-helper-wrapper">
              ${U} ${X}
            </div>`:U}
        <div class="${O}">
          <div class="${R}" ?data-invalid="${m}">
            ${q.icon}
            <input
              autocomplete="${this.autocomplete}"
              ?autofocus="${this.autofocus}"
              class="${I}"
              ?data-invalid="${m}"
              ?disabled="${t}"
              aria-describedby="helper-text"
              id="input"
              name="${h(this.name)}"
              pattern="${h(this.pattern)}"
              placeholder="${h(this.placeholder)}"
              ?readonly="${$}"
              ?required="${g}"
              type="${h(f)}"
              .value="${this._value}"
              maxlength="${h(b)}"
              @input="${j}" />
            <slot name="ai-label" @slotchange="${A}"></slot>
            <slot name="slug" @slotchange="${A}"></slot>
            ${!this.showPasswordVisibilityToggle||f!==y.PASSWORD&&f!==y.TEXT?null:(()=>e`
      <button
        type="button"
        class="${k}"
        ?disabled="${q.disabled}"
        @click="${this.togglePasswordVisibility}">
        ${q.disabled?null:z}
        ${V}
      </button>
    `)()}
          </div>
          ${s?null:X}
          <div
            class="${r}--form-requirement"
            ?hidden="${!q.invalid&&!q.warn}">
            <slot name="${q["slot-name"]}">
              ${q["slot-text"]}
            </slot>
          </div>
        </div>
      </div>
    `}updated(){var t,e,i,l,o;this.toggleAttribute("ai-label",this._hasAILabel);const s=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector("slot[name='ai-label']");s?null==s||s.classList.toggle(`${r}--slug--revert`,null===(e=this.querySelector(`${r}-ai-label`))||void 0===e?void 0:e.hasAttribute("revert-active")):null===(l=null===(i=this.shadowRoot)||void 0===i?void 0:i.querySelector("slot[name='slug']"))||void 0===l||l.classList.toggle(`${r}--slug--revert`,null===(o=this.querySelector(`${r}-slug`))||void 0===o?void 0:o.hasAttribute("revert-active"))}static get slugItem(){return`${r}-slug`}static get aiLabelItem(){return`${r}-ai-label`}};w.shadowRootOptions=Object.assign(Object.assign({},i.shadowRootOptions),{delegatesFocus:!0}),w.styles=g,t([o("input")],w.prototype,"_input",void 0),t([l()],w.prototype,"autocomplete",void 0),t([l({type:Boolean})],w.prototype,"autofocus",void 0),t([l({type:Boolean,reflect:!0})],w.prototype,"disabled",void 0),t([l({type:Boolean,attribute:"enable-counter",reflect:!0})],w.prototype,"enableCounter",void 0),t([l({attribute:"helper-text"})],w.prototype,"helperText",void 0),t([l({type:Boolean,reflect:!0})],w.prototype,"invalid",void 0),t([l({attribute:"invalid-text"})],w.prototype,"invalidText",void 0),t([l({type:Number,attribute:"max-count",reflect:!0})],w.prototype,"maxCount",void 0),t([l({type:Boolean,reflect:!0})],w.prototype,"warn",void 0),t([l({attribute:"warn-text"})],w.prototype,"warnText",void 0),t([l({attribute:"hide-label",type:Boolean,reflect:!0})],w.prototype,"hideLabel",void 0),t([l({attribute:"label"})],w.prototype,"label",void 0),t([l()],w.prototype,"name",void 0),t([l()],w.prototype,"pattern",void 0),t([l({reflect:!0})],w.prototype,"placeholder",void 0),t([l({type:Boolean,reflect:!0})],w.prototype,"readonly",void 0),t([l({type:Boolean,reflect:!0})],w.prototype,"required",void 0),t([l({attribute:"required-validity-message"})],w.prototype,"requiredValidityMessage",void 0),t([l()],w.prototype,"hidePasswordLabel",void 0),t([l()],w.prototype,"showPasswordLabel",void 0),t([l({type:Boolean,attribute:"show-password-visibility-toggle",reflect:!0})],w.prototype,"showPasswordVisibilityToggle",void 0),t([l({reflect:!0})],w.prototype,"size",void 0),t([l({type:Boolean,reflect:!0})],w.prototype,"inline",void 0),t([l()],w.prototype,"tooltipAlignment",void 0),t([l()],w.prototype,"tooltipDirection",void 0),t([l({reflect:!0})],w.prototype,"type",void 0),t([l({attribute:"validity-message"})],w.prototype,"validityMessage",void 0),t([l({reflect:!0})],w.prototype,"value",null),w=t([s(`${r}-text-input`)],w);var f=w;export{c as INPUT_SIZE,b as INPUT_TOOLTIP_ALIGNMENT,$ as INPUT_TOOLTIP_DIRECTION,y as INPUT_TYPE,f as default};
