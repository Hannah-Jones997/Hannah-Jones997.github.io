/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as t}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as i}from"../../node_modules/lit-element/lit-element.min.js";import{property as l}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{query as a}from"../../node_modules/@lit/reactive-element/decorators/query.min.js";import{classMap as s}from"../../node_modules/lit-html/directives/class-map.min.js";import o from"../../packages/icons/lib/warning--filled/16.min.js";import r from"../../packages/icons/lib/warning--alt--filled/16.min.js";import{carbonElement as n}from"../../globals/decorators/carbon-element.min.js";import d from"../../globals/mixins/validity.min.js";import p from"../../globals/mixins/form.min.js";import{prefix as m}from"../../globals/settings.min.js";import c from"./time-picker.scss.min.js";import u from"../../globals/directives/if-non-empty.min.js";import{TIME_PICKER_SIZE as h}from"./defs.min.js";let v=class extends(d(p(i))){constructor(){super(...arguments),this._value="",this.disabled=!1,this.invalid=!1,this.invalidText="Invalid time format.",this.warning=!1,this.warningText="Warning message.",this.hideLabel=!1,this.name="",this.labelText="Select a time",this.placeholder="hh:mm",this.readOnly=!1,this.maxLength=5,this.pattern="(1[012]|[1-9]):[0-5][0-9](\\s)?",this.size=h.MEDIUM,this.type="text",this.validityMessage="",this.required=!1,this.requiredValidityMessage="Please fill out this field."}_handleInput({target:e}){this.value=e.value,this.dispatchEvent(new CustomEvent("change",{bubbles:!0,composed:!0,detail:{value:this.value}}))}_handleSlotChange(){this.requestUpdate()}_handleFormdata(e){const{formData:t}=e,{disabled:i,name:l,value:a}=this;i||t.append(l,a)}get value(){return this._input?this._input.value:this._value}set value(e){const t=this._value;this._value=e,this.requestUpdate("value",t),this._input&&(this._input.value=e)}render(){const{className:e,disabled:i,hideLabel:l,invalid:a,invalidText:n,warning:d,warningText:p,labelText:c,placeholder:h,readOnly:v,maxLength:y,pattern:b,size:g,type:f,value:$,_handleInput:_,_handleSlotChange:x}=this,j=s({[`${m}--label`]:!0,[`${m}--visually-hidden`]:l,[`${m}--label--disabled`]:i}),k=s(Object.assign({[`${m}--time-picker`]:!0,[`${m}--time-picker--invalid`]:a,[`${m}--time-picker--warning`]:d,[`${m}--time-picker--readonly`]:v,[`${m}--time-picker--${g}`]:g},e&&{[e]:!0})),w=s(Object.assign({[`${m}--time-picker__input-field`]:!0,[`${m}--text-input`]:!0,[`${m}--time-picker__input-field-error`]:a||d},e&&{[e]:!0})),q=c?t`<label class="${j}">${c}</label>`:null;return t`
      <div class="${m}--form-item ">
        ${q}
        <div class="${k}">
          <div class="${m}--time-picker__input">
            <input
              class="${w}"
              ?data-invalid="${a}"
              ?disabled="${i}"
              maxlength="${u(y)}"
              name="${u(this.name)}"
              pattern="${u(b)}"
              placeholder="${u(h)}"
              ?readonly="${v}"
              type="${u(f)}"
              .value="${$}"
              @input="${_}" />
            ${a||d?t`
                  <div class="${m}--time-picker__error__icon">
                    ${a?o({class:`${m}--checkbox__invalid-icon`}):r({class:`${m}--text-input__invalid-icon--warning`})}
                  </div>
                `:null}
          </div>
          <slot @slotchange="${x}"></slot>
        </div>
        ${a||d?t`
              <div class="${m}--form-requirement">
                ${a?n:p}
              </div>
            `:null}
      </div>
    `}updated(e){super.updated(e);const{selectorTimePickerSelect:t}=this.constructor,i=this.querySelectorAll(t);["disabled","readOnly","size"].forEach((t=>{if(e.has(t)){const{[t]:e}=this;i.forEach((i=>{i[t]=e}))}}))}static get selectorTimePickerSelect(){return`${m}-time-picker-select`}};v.shadowRootOptions=Object.assign(Object.assign({},i.shadowRootOptions),{delegatesFocus:!0}),v.styles=c,e([a("input")],v.prototype,"_input",void 0),e([l({type:Boolean,reflect:!0})],v.prototype,"disabled",void 0),e([l({type:Boolean,reflect:!0})],v.prototype,"invalid",void 0),e([l({attribute:"invalid-text"})],v.prototype,"invalidText",void 0),e([l({type:Boolean,reflect:!0})],v.prototype,"warning",void 0),e([l({attribute:"warning-text"})],v.prototype,"warningText",void 0),e([l({attribute:"hide-label",type:Boolean,reflect:!0})],v.prototype,"hideLabel",void 0),e([l()],v.prototype,"name",void 0),e([l({attribute:"label-text"})],v.prototype,"labelText",void 0),e([l({reflect:!0})],v.prototype,"placeholder",void 0),e([l({type:Boolean,reflect:!0})],v.prototype,"readOnly",void 0),e([l({type:Number,attribute:"max-length",reflect:!0})],v.prototype,"maxLength",void 0),e([l()],v.prototype,"pattern",void 0),e([l({reflect:!0})],v.prototype,"size",void 0),e([l({reflect:!0})],v.prototype,"type",void 0),e([l({attribute:"validity-message"})],v.prototype,"validityMessage",void 0),e([l({type:Boolean,reflect:!0})],v.prototype,"required",void 0),e([l({attribute:"required-validity-message"})],v.prototype,"requiredValidityMessage",void 0),e([l({reflect:!0})],v.prototype,"value",null),v=e([n(`${m}-time-picker`)],v);
