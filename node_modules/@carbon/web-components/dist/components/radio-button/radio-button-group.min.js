/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as t}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as e}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as o}from"../../node_modules/lit-element/lit-element.min.js";import{property as i}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{classMap as l}from"../../node_modules/lit-html/directives/class-map.min.js";import{prefix as a}from"../../globals/settings.min.js";import s from"../../globals/mixins/form.min.js";import n from"../../globals/mixins/host-listener.min.js";import r from"../../globals/decorators/host-listener.min.js";import{find as d,forEach as m}from"../../globals/internal/collection-helpers.min.js";import{RADIO_BUTTON_LABEL_POSITION as c,RADIO_BUTTON_ORIENTATION as u}from"./defs.min.js";import p from"../../packages/icons/lib/warning--filled/16.min.js";import h from"../../packages/icons/lib/warning--alt--filled/16.min.js";import v from"./radio-button.scss.min.js";import{carbonElement as b}from"../../globals/decorators/carbon-element.min.js";let g=class extends(s(n(o))){constructor(){super(...arguments),this._handleAfterChangeRadioButton=()=>{const{selectorRadioButton:t}=this.constructor,e=d(this.querySelectorAll(t),(t=>t.checked)),o=this.value;if(this.value=e&&e.value,o!==this.value){const{eventChange:t}=this.constructor;this.dispatchEvent(new CustomEvent(t,{bubbles:!0,composed:!0,detail:{value:this.value}}))}},this._hasAILabel=!1,this.disabled=!1,this.labelPosition=c.RIGHT,this.legendText="",this.warn=!1,this.warnText="",this.invalid=!1,this.invalidText="",this.orientation=u.HORIZONTAL,this.readOnly=!1}_handleFormdata(t){const{formData:e}=t,{disabled:o,name:i,value:l}=this;o||void 0===i||void 0===l||e.append(i,l)}_handleSlotChange({target:t}){const e=t.assignedNodes().filter((t=>void 0!==t.matches&&(t.matches(this.constructor.aiLabelItem)||t.matches(this.constructor.slugItem))));this._hasAILabel=Boolean(e),e[0].setAttribute("size","mini"),this.requestUpdate()}updated(t){const{selectorRadioButton:e}=this.constructor;if(["disabled","labelPosition","orientation","readOnly","name"].forEach((o=>{if(t.has(o)){const{[o]:t}=this;m(this.querySelectorAll(e),(e=>{e[o]=t}))}})),t.has("value")){const{value:t}=this;m(this.querySelectorAll(e),(e=>{e.checked=t===e.value}))}t.has("invalid")&&m(this.querySelectorAll(e),(t=>{t.invalid=this.invalid}))}render(){const{readOnly:t,invalid:o,invalidText:i,warn:s,warnText:n,disabled:r,orientation:d,legendText:m,helperText:c,_hasAILabel:u,_handleSlotChange:v}=this,b=!t&&!o&&s,g=!o&&!r&&!s,f=p({class:`${a}--radio-button__invalid-icon`}),$=h({class:`${a}--radio-button__invalid-icon ${a}--radio-button__invalid-icon--warning`}),y=c?e`<div class="${a}--form__helper-text">${c}</div>`:null,_=l({[`${a}--radio-button-group`]:!0,[`${a}--radio-button-group--readonly`]:t,[`${a}--radio-button-group--${d}`]:"vertical"===d,[`${a}--radio-button-group--slug`]:u});return e` <fieldset
        class="${_}"
        ?disabled="${r}"
        aria-readonly="${t}">
        ${m?e` <legend class="${a}--label">
              ${m}
              <slot name="ai-label" @slotchange="${v}"></slot>
              <slot name="slug" @slotchange="${v}"></slot>
            </legend>`:""}
        <slot></slot>
      </fieldset>
      <div class="${a}--radio-button__validation-msg">
        ${!t&&o?e`
              ${f}
              <div class="${a}--form-requirement">${i}</div>
            `:null}
        ${b?e`${$}
              <div class="${a}--form-requirement">${n}</div>`:null}
      </div>
      ${g?y:null}`}static get selectorRadioButton(){return`${a}-radio-button`}static get slugItem(){return`${a}-slug`}static get aiLabelItem(){return`${a}-ai-label`}static get eventChange(){return`${a}-radio-button-group-changed`}static get eventChangeRadioButton(){return`${a}-radio-button-changed`}};g.styles=v,t([r("eventChangeRadioButton")],g.prototype,"_handleAfterChangeRadioButton",void 0),t([i()],g.prototype,"defaultSelected",void 0),t([i({type:Boolean,reflect:!0})],g.prototype,"disabled",void 0),t([i({reflect:!0,attribute:"label-position"})],g.prototype,"labelPosition",void 0),t([i({reflect:!0,attribute:"legend-text"})],g.prototype,"legendText",void 0),t([i({attribute:"helper-text"})],g.prototype,"helperText",void 0),t([i({type:Boolean,reflect:!0})],g.prototype,"warn",void 0),t([i({attribute:"warn-text"})],g.prototype,"warnText",void 0),t([i({type:Boolean,reflect:!0})],g.prototype,"invalid",void 0),t([i({attribute:"invalid-text"})],g.prototype,"invalidText",void 0),t([i()],g.prototype,"name",void 0),t([i({reflect:!0})],g.prototype,"orientation",void 0),t([i({type:Boolean,reflect:!0})],g.prototype,"readOnly",void 0),t([i()],g.prototype,"value",void 0),g=t([b(`${a}-radio-button-group`)],g);export{u as RADIO_BUTTON_ORIENTATION};
