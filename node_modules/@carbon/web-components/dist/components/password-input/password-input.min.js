/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as t}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as i}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as e}from"../../node_modules/lit-element/lit-element.min.js";import{property as o}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{carbonElement as l}from"../../globals/decorators/carbon-element.min.js";import{classMap as s}from"../../node_modules/lit-html/directives/class-map.min.js";import{prefix as n}from"../../globals/settings.min.js";import a from"../../packages/icons/lib/view/16.min.js";import r from"../../packages/icons/lib/view--off/16.min.js";import p from"../../packages/icons/lib/warning--filled/16.min.js";import d from"../../packages/icons/lib/warning--alt--filled/16.min.js";import m from"../../globals/directives/if-non-empty.min.js";import"../tooltip/tooltip.min.js";import"../tooltip/tooltip-content.min.js";import"../tooltip/definition-tooltip.min.js";import $ from"./password-input.scss.min.js";import c from"../text-input/text-input.min.js";import{INPUT_TYPE as h,INPUT_TOOLTIP_ALIGNMENT as u,INPUT_TOOLTIP_DIRECTION as b}from"./defs.min.js";export{INPUT_SIZE}from"./defs.min.js";let g=class extends c{constructor(){super(...arguments),this.hidePasswordLabel="Hide password",this.showPasswordLabel="Show password",this.type=h.PASSWORD,this.tooltipAlignment=u.CENTER,this.tooltipDirection=b.BOTTOM}_handleInput({target:t}){this.value=t.value}handleTogglePasswordVisibility(){this.disabled||this.readonly||(this.type=this.type===h.PASSWORD?h.TEXT:h.PASSWORD)}render(){const{disabled:t,helperText:e,hideLabel:o,inline:l,invalid:$,invalidText:c,label:g,readonly:w,required:v,size:_,type:f,warn:x,warnText:y,_handleInput:j,_handleSlotChange:D}=this,T=p({class:`${n}--text-input__invalid-icon`}),S=d({class:`${n}--text-input__invalid-icon ${n}--text-input__invalid-icon--warning`}),P={disabled:!w&&t,invalid:!w&&$,warn:!w&&!$&&x,"slot-name":"","slot-text":"",icon:null};P.invalid?(P.icon=T,P["slot-name"]="invalid-text",P["slot-text"]=c):P.warn&&(P.icon=S,P["slot-name"]="warn-text",P["slot-text"]=y);const O=s({[`${n}--form-item`]:!0,[`${n}--text-input-wrapper`]:!0,[`${n}--password-input-wrapper`]:!0,[`${n}--text-input-wrapper--inline`]:l,[`${n}--text-input-wrapper--readonly`]:w,[`${n}--text-input-wrapper--inline--invalid`]:l&&P.invalid}),A=s({[`${n}--text-input`]:!0,[`${n}--text-input--invalid`]:P.invalid,[`${n}--text-input--warning`]:P.warn,[`${n}--text-input--${_}`]:_,[`${n}--layout--size-${_}`]:_,[`${n}--password-input`]:!0}),R=s({[`${n}--text-input__field-outer-wrapper`]:!0,[`${n}--text-input__field-outer-wrapper--inline`]:l}),E=s({[`${n}--text-input__field-wrapper`]:!0,[`${n}--text-input__field-wrapper--warning`]:P.warn}),L=s({[`${n}--label`]:!0,[`${n}--visually-hidden`]:o,[`${n}--label--disabled`]:P.disabled}),k=s({[`${n}--form__helper-text`]:!0,[`${n}--form__helper-text--disabled`]:P.disabled}),I=f!==h.PASSWORD,N=I?r({class:`${n}--icon-visibility-off`}):a({class:`${n}--icon-visibility-on`}),W=s({[`${n}--text-input--password__visibility__toggle`]:!0,[`${n}--btn`]:!0,[`${n}--tooltip__trigger`]:!0,[`${n}--tooltip--a11y`]:!0,[`${n}--toggle-password-tooltip`]:!0,[`${n}--btn--disabled`]:P.disabled||w,[`${n}--tooltip--${this.tooltipDirection}`]:this.tooltipDirection,[`${n}--tooltip--align-${this.tooltipAlignment}`]:this.tooltipAlignment}),q=s({[`${n}--text-input--password__visibility__toggle`]:!0,[`${n}--btn--icon-only`]:!0,[`${n}--tooltip__trigger`]:!0,[`${n}--tooltip--a11y`]:!0,[`${n}--toggle-password-tooltip`]:!0,[`${n}--btn--disabled`]:P.disabled||w}),C=i`<div class="${n}--text-input__label-wrapper">
      <label class="${L}"> ${g} </label>
    </div>`,M=e?i`<div
          class="${k}"
          id="helper-text"
          ?hidden="${P.invalid||P.warn}">
          <slot name="helper-text"> ${e} </slot>
        </div>`:null;let z="";return this.tooltipDirection!==b.TOP&&this.tooltipDirection!==b.BOTTOM||(this.tooltipAlignment===u.CENTER&&(z=this.tooltipDirection),this.tooltipAlignment===u.END&&(z=`${this.tooltipDirection}-right`),this.tooltipAlignment===u.START&&(z=`${this.tooltipDirection}-left`)),"right"!==this.tooltipDirection&&"left"!==this.tooltipDirection||(z=this.tooltipDirection),i`
      <div class="${O}">
        ${l?i`<div class="${n}--text-input__label-helper-wrapper">
              ${C} ${M}
            </div>`:C}
        <div class="${R}">
          <div class="${E}" ?data-invalid="${$}">
            ${P.icon}
            <input
              ?autofocus="${this.autofocus}"
              class="${A}"
              ?data-invalid="${$}"
              ?disabled="${t}"
              aria-describedby="helper-text"
              id="input"
              name="${m(this.name)}"
              pattern="${m(this.pattern)}"
              placeholder="${m(this.placeholder)}"
              ?readonly="${w}"
              ?required="${v}"
              type="${m(f)}"
              .value="${this._value}"
              @input="${j}" />
            <slot name="slug" @slotchange="${D}"></slot>
            <cds-tooltip
              align="${z}"
              class="${W}"
              ?disabled="${P.disabled||w}">
              <button
                ?disabled="${P.disabled||w}"
                type="button"
                role="button"
                class="${q}"
                aria-labelledby="content"
                @click="${this.handleTogglePasswordVisibility}">
                ${N}
              </button>
              <cds-tooltip-content
                id="content"
                ?hidden="${P.disabled||w}">
                ${I?this.hidePasswordLabel:this.showPasswordLabel}
              </cds-tooltip-content>
            </cds-tooltip>
          </div>
          ${l?null:M}
          <div
            class="${n}--form-requirement"
            ?hidden="${!P.invalid&&!P.warn}">
            <slot name="${P["slot-name"]}">
              ${P["slot-text"]}
            </slot>
          </div>
        </div>
      </div>
    `}static get slugItem(){return`${n}-slug`}};g.shadowRootOptions=Object.assign(Object.assign({},e.shadowRootOptions),{delegatesFocus:!0}),g.styles=$,t([o({type:String,attribute:"hide-password-label",reflect:!0})],g.prototype,"hidePasswordLabel",void 0),t([o({type:String,attribute:"show-password-label",reflect:!0})],g.prototype,"showPasswordLabel",void 0),t([o({reflect:!0})],g.prototype,"type",void 0),t([o({type:String,attribute:"tooltip-alignment",reflect:!0})],g.prototype,"tooltipAlignment",void 0),t([o({type:String,attribute:"tooltip-position",reflect:!0})],g.prototype,"tooltipDirection",void 0),g=t([l(`${n}-password-input`)],g);export{u as INPUT_TOOLTIP_ALIGNMENT,b as INPUT_TOOLTIP_DIRECTION,h as INPUT_TYPE};
