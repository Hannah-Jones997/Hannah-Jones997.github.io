/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as t}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as o}from"../../node_modules/lit-element/lit-element.min.js";import{property as i}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{prefix as s}from"../../globals/settings.min.js";import{carbonElement as l}from"../../globals/decorators/carbon-element.min.js";import n from"../../globals/mixins/focus.min.js";import{OVERFLOW_MENU_SIZE as r}from"./defs.min.js";import m from"./overflow-menu.scss.min.js";let d=class extends(n(o)){constructor(){super(...arguments),this.danger=!1,this.disabled=!1,this.divider=!1,this.href="",this.size=r.MEDIUM}_handleClick(e){this.dispatchEvent(new CustomEvent(this.constructor.itemClicked,{bubbles:!0,composed:!0,detail:{evt:e}}))}connectedCallback(){this.hasAttribute("role")||this.setAttribute("role","menuitem"),super.connectedCallback()}render(){const{_handleClick:e}=this;return this.href?t`
          <a
            class="${s}--overflow-menu-options__btn"
            ?disabled=${this.disabled}
            href="${this.href}"
            tabindex="-1"
            @click="${e}">
            <div class="${s}--overflow-menu-options__option-content">
              <slot></slot>
            </div>
          </a>
        `:t`
          <button
            class="${s}--overflow-menu-options__btn"
            ?disabled=${this.disabled}
            tabindex="-1"
            @click="${e}">
            <div class="${s}--overflow-menu-options__option-content">
              <slot></slot>
            </div>
          </button>
        `}static get itemClicked(){return`${s}-overflow-menu-item-clicked`}};d.shadowRootOptions=Object.assign(Object.assign({},o.shadowRootOptions),{delegatesFocus:!0}),d.styles=m,e([i({type:Boolean,reflect:!0})],d.prototype,"danger",void 0),e([i({type:Boolean,reflect:!0})],d.prototype,"disabled",void 0),e([i({type:Boolean,reflect:!0})],d.prototype,"divider",void 0),e([i()],d.prototype,"href",void 0),e([i({reflect:!0})],d.prototype,"size",void 0),d=e([l(`${s}-overflow-menu-item`)],d);
