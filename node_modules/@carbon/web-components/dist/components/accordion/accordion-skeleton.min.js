/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as t}from"../../node_modules/tslib/tslib.es6.min.js";import{classMap as e}from"../../node_modules/lit-html/directives/class-map.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as o}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as s}from"../../node_modules/lit-element/lit-element.min.js";import{property as i}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import{prefix as n}from"../../globals/settings.min.js";import"./accordion.min.js";import{forEach as l}from"../../globals/internal/collection-helpers.min.js";import r from"../../packages/icons/lib/chevron--right/16.min.js";import"./accordion-item-skeleton.min.js";import"../skeleton-text/skeleton-text.min.js";import c from"./accordion.scss.min.js";import{carbonElement as m}from"../../globals/decorators/carbon-element.min.js";import{ACCORDION_ALIGNMENT as a}from"./defs.min.js";let d=class extends s{constructor(){super(...arguments),this.alignment=a.END,this.count=4,this.isFlush=!1,this.open=!0}updated(t){t.has("alignment")&&l(this.shadowRoot.querySelectorAll(this.constructor.selectorAccordionItemSkeletons),(t=>{t.setAttribute("alignment",this.alignment)})),(t.has("isFlush")||t.has("alignment"))&&l(this.shadowRoot.querySelectorAll(this.constructor.selectorAccordionItemSkeletons),(t=>{this.isFlush&&"start"!==this.alignment?t.setAttribute("isFlush",""):t.removeAttribute("isFlush")}))}render(){const t=e({[`${n}--accordion__item`]:!0,[`${n}--accordion__item--active`]:!0,[`${n}--accordion--${this.alignment}`]:this.alignment,[`${n}--accordion--flush`]:this.isFlush&&"start"!==this.alignment}),s=this.open?this.count-1:this.count;return o`
      ${this.open?o`
            <li class="${t}">
              <span class="${n}--accordion__heading">
                ${r({part:"expando-icon",class:`${n}--accordion__arrow`})}
                <cds-skeleton-text
                  class="${n}--accordion__title"></cds-skeleton-text>
              </span>
              <div class="${n}--accordion__content">
                <cds-skeleton-text width="90%"></cds-skeleton-text>
                <cds-skeleton-text width="80%"></cds-skeleton-text>
                <cds-skeleton-text width="95%"></cds-skeleton-text>
              </div>
            </li>
          `:""}
      ${Array.from({length:s}).map(((t,e,s)=>o`<cds-accordion-item-skeleton
            key=${e}
            ?data-last-item=${e===s.length-1}></cds-accordion-item-skeleton>`))}
    `}static get selectorAccordionItemSkeletons(){return`${n}-accordion-item-skeleton`}};d.styles=c,t([i({reflect:!0})],d.prototype,"alignment",void 0),t([i({type:Number,attribute:"count"})],d.prototype,"count",void 0),t([i({type:Boolean,reflect:!0})],d.prototype,"isFlush",void 0),t([i({type:Boolean,reflect:!0})],d.prototype,"open",void 0),d=t([m(`${n}-accordion-skeleton`)],d);
