/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license
 * 
 * This bundle contains the following third-party dependencies:
 * 
 * Also refer to the following links for the license of other third-party dependencies:
 * 
 * https://www.npmjs.com/package/tslib
 * https://www.npmjs.com/package/lit
 * https://www.npmjs.com/package/@lit/context
 * https://www.npmjs.com/package/lodash-es
 * https://www.npmjs.com/package/@floating-ui/dom
 * https://www.npmjs.com/package/flatpickr
 * https://www.npmjs.com/package/lit-html
 * https://www.npmjs.com/package/lit-element
 * https://www.npmjs.com/package/@lit/reactive-element
 * https://www.npmjs.com/package/@floating-ui/core
 * https://www.npmjs.com/package/@floating-ui/utils
 */

import{__decorate as e}from"../../node_modules/tslib/tslib.es6.min.js";import{classMap as t}from"../../node_modules/lit-html/directives/class-map.min.js";import"../../node_modules/@lit/reactive-element/reactive-element.min.js";import{html as s}from"../../node_modules/lit-html/lit-html.min.js";import{LitElement as o}from"../../node_modules/lit-element/lit-element.min.js";import{property as i}from"../../node_modules/@lit/reactive-element/decorators/property.min.js";import n from"../../packages/icons/lib/chevron--right/16.min.js";import{prefix as r}from"../../globals/settings.min.js";import a from"../../globals/mixins/focus.min.js";import{ACCORDION_ITEM_BREAKPOINT as c}from"./defs.min.js";import l from"./accordion.scss.min.js";import{carbonElement as d}from"../../globals/decorators/carbon-element.min.js";let p=class extends(a(o)){constructor(){super(...arguments),this._hObserveResize=null,this._handleKeydownExpando=({key:e})=>{!this.open||"Esc"!==e&&"Escape"!==e||this._handleUserInitiatedToggle(!1)},this._resizeObserver=new ResizeObserver((e=>{const{width:t}=e[e.length-1].contentRect,{_sizesBreakpoints:s}=this.constructor;this._currentBreakpoint=Object.keys(s).sort(((e,t)=>s[t]-s[e])).find((e=>t>=s[e])),this.requestUpdate()})),this.disabled=!1,this.open=!1,this.title=""}_handleUserInitiatedToggle(e=!this.open){const t={bubbles:!0,cancelable:!0,composed:!0,detail:{open:e}};if(this.dispatchEvent(new CustomEvent(this.constructor.eventBeforeToggle,t))){const{selectorAccordionContent:s}=this.constructor;this.open?this.setAttribute("collapsing",""):this.setAttribute("expanding",""),this.shadowRoot.querySelector(s).addEventListener("animationend",(()=>{this.removeAttribute("expanding"),this.removeAttribute("collapsing")})),this.open=e,this.dispatchEvent(new CustomEvent(this.constructor.eventToggle,t))}}_handleClickExpando(){this._handleUserInitiatedToggle()}connectedCallback(){var e,t;this.hasAttribute("role")||this.setAttribute("role","listitem"),super.connectedCallback(),this._hObserveResize&&(this._hObserveResize=this._hObserveResize.release()),this._hObserveResize=(e=this._resizeObserver,(t=this)?(e.observe(t),{release:()=>(e.unobserve(t),null)}):null)}disconnectedCallback(){this._hObserveResize&&(this._hObserveResize=this._hObserveResize.release())}render(){const{disabled:e,title:o,open:i,_currentBreakpoint:a,_handleClickExpando:c,_handleKeydownExpando:l}=this,{_classesBreakpoints:d}=this.constructor,{[a]:p}=d,h=t({[p]:p,[`${r}--accordion__content`]:!0});return s`
      <button
        ?disabled="${e}"
        type="button"
        part="expando"
        class="${r}--accordion__heading"
        aria-controls="content"
        aria-expanded="${i}"
        @click="${c}"
        @keydown="${l}">
        ${n({part:"expando-icon",class:`${r}--accordion__arrow`})}
        <div part="title" class="${r}--accordion__title">
          <slot name="title">${o}</slot>
        </div>
      </button>
      <div class="${r}--accordion__wrapper" part="wrapper">
        <div id="content" part="content" class="${h}">
          <slot></slot>
        </div>
      </div>
    `}static get _classesBreakpoints(){return{[c.SMALL]:`${r}-ce--accordion__content--${c.SMALL}`,[c.MEDIUM]:`${r}-ce--accordion__content--${c.MEDIUM}`}}static get _sizesBreakpoints(){return{[c.SMALL]:480,[c.MEDIUM]:640}}static get eventBeforeToggle(){return`${r}-accordion-item-beingtoggled`}static get eventToggle(){return`${r}-accordion-item-toggled`}static get selectorAccordionContent(){return`.${r}--accordion__content`}};p.styles=l,e([i({type:Boolean,reflect:!0})],p.prototype,"disabled",void 0),e([i({type:Boolean,reflect:!0})],p.prototype,"open",void 0),e([i({attribute:"title"})],p.prototype,"title",void 0),p=e([d(`${r}-accordion-item`)],p);export{c as ACCORDION_ITEM_BREAKPOINT};
