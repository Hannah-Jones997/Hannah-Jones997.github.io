{"version":3,"file":"dropdown.js","sources":["../../../src/components/dropdown/dropdown.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { LitElement, html, TemplateResult } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport ChevronDown16 from '@carbon/icons/lib/chevron--down/16.js';\nimport WarningFilled16 from '@carbon/icons/lib/warning--filled/16.js';\nimport WarningAltFilled16 from '@carbon/icons/lib/warning--alt--filled/16.js';\nimport FocusMixin from '../../globals/mixins/focus';\nimport FormMixin from '../../globals/mixins/form';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport ValidityMixin from '../../globals/mixins/validity';\nimport HostListener from '../../globals/decorators/host-listener';\nimport {\n  find,\n  forEach,\n  indexOf,\n} from '../../globals/internal/collection-helpers';\nimport {\n  DROPDOWN_DIRECTION,\n  DROPDOWN_KEYBOARD_ACTION,\n  DROPDOWN_SIZE,\n  DROPDOWN_TYPE,\n  NAVIGATION_DIRECTION,\n} from './defs';\nimport CDSDropdownItem from './dropdown-item';\nimport styles from './dropdown.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport {\n  DROPDOWN_KEYBOARD_ACTION,\n  DROPDOWN_DIRECTION,\n  DROPDOWN_SIZE,\n  DROPDOWN_TYPE,\n  NAVIGATION_DIRECTION,\n};\n\n/**\n * Dropdown.\n *\n * @element cds-dropdown\n * @csspart label-text The label text.\n * @csspart helper-text The helper text.\n * @csspart trigger-button The trigger button.\n * @csspart menu-body The menu body.\n * @csspart validity-message The validity message.\n * @fires cds-dropdown-beingselected\n *   The custom event fired before a dropdown item is selected upon a user gesture.\n *   Cancellation of this event stops changing the user-initiated selection.\n * @fires cds-dropdown-beingtoggled\n *   The custom event fired before the open state of this dropdown is toggled upon a user gesture.\n *   Cancellation of this event stops the user-initiated toggling.\n * @fires cds-dropdown-selected - The custom event fired after a dropdown item is selected upon a user gesture.\n * @fires cds-dropdown-toggled - The custom event fired after the open state of this dropdown is toggled upon a user gesture.\n */\n@customElement(`${prefix}-dropdown`)\nclass CDSDropdown extends ValidityMixin(\n  HostListenerMixin(FormMixin(FocusMixin(LitElement)))\n) {\n  /**\n   * `true` if there is an AI Label.\n   */\n  protected _hasAILabel = false;\n\n  @state()\n  protected _activeDescendant?: string;\n\n  /**\n   * The content of the selected item.\n   */\n  protected _selectedItemContent: DocumentFragment | null = null;\n\n  /**\n   * `true` if the trigger button should be focusable.\n   * Derived class can set `false` to this if the trigger button contains another primary focusable element (e.g. `<input>`).\n   */\n  protected _shouldTriggerBeFocusable = true;\n\n  /**\n   * The list box `<div>` node.\n   */\n  @query(`.${prefix}--list-box`)\n  protected _listBoxNode!: HTMLDivElement;\n\n  /**\n   * The `<slot>` element for the helper text in the shadow DOM.\n   */\n  @query('slot[name=\"helper-text\"]')\n  protected _slotHelperTextNode!: HTMLSlotElement;\n\n  /**\n   * The `<slot>` element for the title text in the shadow DOM.\n   */\n  @query('slot[name=\"title-text\"]')\n  protected _slotTitleTextNode!: HTMLSlotElement;\n\n  /**\n   * @param itemToSelect A dropdown item. Absense of this argument means clearing selection.\n   * @returns `true` if the selection of this dropdown should change if the given item is selected upon user interaction.\n   */\n  protected _selectionShouldChange(itemToSelect?: CDSDropdownItem) {\n    return !itemToSelect || itemToSelect.value !== this.value;\n  }\n\n  /**\n   * A callback that runs after change in dropdown selection upon user interaction is confirmed.\n   *\n   * @param itemToSelect\n   *   A dropdown item.\n   *   Absense of this argument means clearing selection, which may be handled by a derived class.\n   */\n  protected _selectionDidChange(itemToSelect?: CDSDropdownItem) {\n    if (itemToSelect) {\n      this.value = itemToSelect.value;\n      this._activeDescendant = itemToSelect.id;\n      forEach(\n        this.querySelectorAll(\n          (this.constructor as typeof CDSDropdown).selectorItemSelected\n        ),\n        (item) => {\n          (item as CDSDropdownItem).selected = false;\n          item.setAttribute('aria-selected', 'false');\n        }\n      );\n      itemToSelect.selected = true;\n      itemToSelect.setAttribute('aria-selected', 'true');\n      this._handleUserInitiatedToggle(false);\n    }\n  }\n\n  /**\n   * Handles `click` event on the top-level element in the shadow DOM.\n   *\n   * @param event The event.\n   */\n  protected _handleClickInner(event: MouseEvent) {\n    if (this.readOnly) {\n      return;\n    }\n\n    if (this.shadowRoot!.contains(event.target as Node)) {\n      this._handleUserInitiatedToggle();\n    } else {\n      const item = (event.target as Element).closest(\n        (this.constructor as typeof CDSDropdown).selectorItem\n      ) as CDSDropdownItem;\n      if (this.contains(item)) {\n        this._handleUserInitiatedSelectItem(item);\n      }\n    }\n  }\n\n  /**\n   * Handler for the `keydown` event on the top-level element in the shadow DOM.\n   */\n  protected _handleKeydownInner(event: KeyboardEvent) {\n    const { key } = event;\n    const action = (this.constructor as typeof CDSDropdown).getAction(key);\n    if (!this.open) {\n      switch (action) {\n        case DROPDOWN_KEYBOARD_ACTION.NAVIGATING:\n          this._handleUserInitiatedToggle(true);\n          // If this menu gets open with an arrow key, reset the highlight\n          this._clearHighlight();\n          break;\n        default:\n          break;\n      }\n    } else {\n      switch (action) {\n        case DROPDOWN_KEYBOARD_ACTION.CLOSING:\n          this._handleUserInitiatedToggle(false);\n          break;\n        case DROPDOWN_KEYBOARD_ACTION.NAVIGATING:\n          this._navigate(NAVIGATION_DIRECTION[key]);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  /**\n   * Handler for the `keypress` event on the top-level element in the shadow DOM.\n   */\n  protected _handleKeypressInner(event: KeyboardEvent) {\n    const { key } = event;\n    const action = (this.constructor as typeof CDSDropdown).getAction(key);\n    if (!this.open) {\n      switch (action) {\n        case DROPDOWN_KEYBOARD_ACTION.TRIGGERING:\n          this._handleUserInitiatedToggle(true);\n          break;\n        default:\n          break;\n      }\n    } else {\n      switch (action) {\n        case DROPDOWN_KEYBOARD_ACTION.TRIGGERING:\n          {\n            const constructor = this.constructor as typeof CDSDropdown;\n            const highlightedItem = this.querySelector(\n              constructor.selectorItemHighlighted\n            ) as CDSDropdownItem;\n            if (highlightedItem) {\n              this._handleUserInitiatedSelectItem(highlightedItem);\n            } else {\n              this._handleUserInitiatedToggle(false);\n            }\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  /**\n   * Handles `blur` event handler on the document this element is in.\n   *\n   * @param event The event.\n   */\n  @HostListener('focusout')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  protected _handleFocusOut(event: FocusEvent) {\n    if (!this.contains(event.relatedTarget as Node)) {\n      this._handleUserInitiatedToggle(false);\n    }\n  }\n\n  /**\n   * Handles `slotchange` event for the `<slot>` for helper text.\n   */\n  protected _handleSlotchangeHelperText() {\n    this.requestUpdate();\n  }\n\n  /**\n   * Handles `slotchange` event for the `<slot>` for label text.\n   */\n  protected _handleSlotchangeLabelText() {\n    this.requestUpdate();\n  }\n\n  /**\n   * Handles `slotchange` event.\n   */\n  protected _handleAILabelSlotChange({ target }: Event) {\n    const hasContent = (target as HTMLSlotElement)\n      .assignedNodes()\n      .filter((elem) =>\n        (elem as HTMLElement).matches !== undefined\n          ? (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSDropdown).aiLabelItem\n            ) ||\n            // remove reference to slug in v12\n            (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSDropdown).slugItem\n            )\n          : false\n      );\n\n    this._hasAILabel = Boolean(hasContent);\n    (hasContent[0] as HTMLElement).setAttribute('size', 'mini');\n    this.requestUpdate();\n  }\n\n  /**\n   * Handles user-initiated selection of a dropdown item.\n   *\n   * @param [item] The dropdown item user wants to select. Absense of this argument means clearing selection.\n   */\n  protected _handleUserInitiatedSelectItem(item?: CDSDropdownItem) {\n    if (item?.hasAttribute('disabled')) {\n      return;\n    }\n\n    if (this._selectionShouldChange(item)) {\n      const init = {\n        bubbles: true,\n        composed: true,\n        detail: {\n          item,\n        },\n      };\n      const constructor = this.constructor as typeof CDSDropdown;\n      const beforeSelectEvent = new CustomEvent(constructor.eventBeforeSelect, {\n        ...init,\n        cancelable: true,\n      });\n      if (this.dispatchEvent(beforeSelectEvent)) {\n        this._selectionDidChange(item);\n        const afterSelectEvent = new CustomEvent(constructor.eventSelect, init);\n        this.dispatchEvent(afterSelectEvent);\n      }\n    }\n  }\n\n  /**\n   * Handles user-initiated toggling the open state.\n   *\n   * @param [force] If specified, forces the open state to the given one.\n   */\n  protected _handleUserInitiatedToggle(force = !this.open) {\n    const { eventBeforeToggle, eventToggle } = this\n      .constructor as typeof CDSDropdown;\n\n    const { disabled } = this;\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        open: force,\n      },\n    };\n    if (!disabled) {\n      if (this.dispatchEvent(new CustomEvent(eventBeforeToggle, init))) {\n        this.open = force;\n        if (!this.open) {\n          forEach(\n            this.querySelectorAll(\n              (this.constructor as typeof CDSDropdown).selectorItemHighlighted\n            ),\n            (item) => {\n              (item as CDSDropdownItem).highlighted = false;\n            }\n          );\n        }\n        this.requestUpdate();\n        this.dispatchEvent(new CustomEvent(eventToggle, init));\n      }\n    }\n  }\n\n  /**\n   * Clears the selection of dropdown items.\n   */\n  protected _clearHighlight() {\n    forEach(\n      this.querySelectorAll(\n        (this.constructor as typeof CDSDropdown).selectorItem\n      ),\n      (item) => {\n        (item as CDSDropdownItem).highlighted = false;\n      }\n    );\n  }\n\n  /**\n   * Navigate through dropdown items.\n   *\n   * @param direction `-1` to navigate backward, `1` to navigate forward.\n   */\n  protected _navigate(direction: number) {\n    const constructor = this.constructor as typeof CDSDropdown;\n    const items = this.querySelectorAll(constructor.selectorItem);\n    const highlightedItem = this.querySelector(\n      constructor.selectorItemHighlighted\n    );\n    const highlightedIndex = indexOf(items, highlightedItem!);\n    let nextIndex = highlightedIndex + direction;\n\n    if (items[nextIndex]?.hasAttribute('disabled')) {\n      nextIndex += direction;\n    }\n    if (nextIndex < 0) {\n      nextIndex = items.length - 1;\n    }\n    if (nextIndex >= items.length) {\n      nextIndex = 0;\n    }\n    forEach(items, (item, i) => {\n      (item as CDSDropdownItem).highlighted = i === nextIndex;\n    });\n\n    const nextItem = items[nextIndex];\n    // Using `{ block: 'nearest' }` to prevent scrolling unless scrolling is absolutely necessary.\n    // `scrollIntoViewOptions` seems to work in latest Safari despite of MDN/caniuse table.\n    // IE falls back to the old behavior.\n    nextItem.scrollIntoView({ block: 'nearest' });\n\n    const nextItemId = nextItem.id;\n    if (nextItemId) {\n      this._activeDescendant = nextItemId;\n    }\n  }\n\n  /* eslint-disable class-methods-use-this */\n  /**\n   * @returns The content preceding the trigger button.\n   */\n  protected _renderPrecedingLabel(): TemplateResult | void {\n    return undefined;\n  }\n  /* eslint-enable class-methods-use-this */\n\n  /**\n   * @returns The main content of the trigger button.\n   */\n  protected _renderLabel(): TemplateResult {\n    const { label, _selectedItemContent: selectedItemContent } = this;\n    return html`\n      <span id=\"trigger-label\" class=\"${prefix}--list-box__label\"\n        >${selectedItemContent || label}</span\n      >\n    `;\n  }\n\n  /**\n   * @returns The title label.\n   */\n  protected _renderTitleLabel(): TemplateResult {\n    const {\n      disabled,\n      hideLabel,\n      titleText,\n      _slotTitleTextNode: slotTitleTextNode,\n      _handleSlotchangeLabelText: handleSlotchangeLabelText,\n    } = this;\n\n    const labelClasses = classMap({\n      [`${prefix}--label`]: true,\n      [`${prefix}--label--disabled`]: disabled,\n      [`${prefix}--visually-hidden`]: hideLabel,\n    });\n\n    const hasTitleText =\n      titleText ||\n      (slotTitleTextNode && slotTitleTextNode.assignedNodes().length > 0);\n\n    return html`\n      <label\n        id=\"dropdown-label\"\n        part=\"title-text\"\n        class=\"${labelClasses}\"\n        for=\"trigger-button\"\n        ?hidden=\"${!hasTitleText}\">\n        <slot name=\"title-text\" @slotchange=\"${handleSlotchangeLabelText}\"\n          >${titleText}</slot\n        >\n      </label>\n    `;\n  }\n\n  /* eslint-disable class-methods-use-this */\n  /**\n   * @returns The content following the trigger button.\n   */\n  protected _renderFollowingLabel(): TemplateResult | void {\n    return undefined;\n  }\n  /* eslint-enable class-methods-use-this */\n\n  /**\n   * Handles event to include selected value on the parent form.\n   *\n   * @param event The event.\n   */\n  _handleFormdata(event: FormDataEvent) {\n    const { formData } = event;\n    const { disabled, name, value } = this;\n    if (!disabled) {\n      formData.append(name, value);\n    }\n  }\n\n  /**\n   * 'aria-label' of the ListBox component.\n   * Specify a label to be read by screen readers on the container node\n   */\n  @property({ type: String, reflect: true, attribute: 'aria-label' })\n  ariaLabel = '';\n\n  /**\n   * Specify the direction of the dropdown. Can be either top or bottom.\n   */\n  @property({ type: String, reflect: true })\n  direction = DROPDOWN_DIRECTION.BOTTOM;\n\n  /**\n   * `true` if this dropdown should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * The helper text.\n   */\n  @property({ attribute: 'helper-text' })\n  helperText = '';\n\n  /**\n   * Specify whether the title text should be hidden or not\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'hide-label' })\n  hideLabel = false;\n\n  /**\n   * `true` to show the UI of the invalid state.\n   */\n  @property({ type: Boolean, reflect: true })\n  invalid = false;\n\n  /**\n   * Message which is displayed if the value is invalid.\n   */\n  @property({ attribute: 'invalid-text' })\n  invalidText = '';\n\n  /**\n   * Provide the title text that will be read by a screen reader when visiting this control\n   */\n  @property({ attribute: 'title-text' })\n  titleText = '';\n\n  /**\n   * Name for the dropdown in the `FormData`\n   */\n  @property()\n  name = '';\n\n  /**\n   * `true` if this dropdown should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  open = false;\n\n  /**\n   * Whether or not the Dropdown is readonly\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'read-only' })\n  readOnly = false;\n\n  /**\n   * `true` if the value is required.\n   */\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  /**\n   * The special validity message for `required`.\n   */\n  @property({ attribute: 'required-validity-message' })\n  requiredValidityMessage = 'Please fill out this field.';\n\n  /**\n   * Dropdown size.\n   */\n  @property({ reflect: true })\n  size = DROPDOWN_SIZE.MEDIUM;\n\n  /**\n   * The `aria-label` attribute for the UI indicating the closed state.\n   */\n  @property({ attribute: 'toggle-label-closed' })\n  toggleLabelClosed = '';\n\n  /**\n   * The `aria-label` attribute for the UI indicating the open state.\n   */\n  @property({ attribute: 'toggle-label-open' })\n  toggleLabelOpen = '';\n\n  /**\n   * Generic label that will be used as the textual representation of what this field is for\n   */\n  @property({ attribute: 'label' })\n  label = '';\n\n  /**\n   * `true` if this dropdown should use the inline UI variant.\n   */\n  @property({ reflect: true })\n  type = DROPDOWN_TYPE.DEFAULT;\n\n  /**\n   * The validity message.\n   */\n  @property({ attribute: 'validity-message' })\n  validityMessage = '';\n\n  /**\n   * The value of the selected item.\n   */\n  @property({ reflect: true })\n  value = '';\n\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  @property({ type: Boolean, reflect: true })\n  warn = false;\n\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  @property({ attribute: 'warn-text' })\n  warnText = '';\n\n  shouldUpdate(changedProperties) {\n    const { selectorItem } = this.constructor as typeof CDSDropdown;\n    if (changedProperties.has('size')) {\n      forEach(this.querySelectorAll(selectorItem), (elem) => {\n        (elem as CDSDropdownItem).size = this.size;\n      });\n    }\n    if (changedProperties.has('disabled') && this.disabled) {\n      const { disabled } = this;\n      // Propagate `disabled` attribute to descendants until `:host-context()` gets supported in all major browsers\n      forEach(this.querySelectorAll(selectorItem), (elem) => {\n        if (disabled) {\n          (elem as CDSDropdownItem).disabled = disabled;\n        } else {\n          (elem as CDSDropdownItem).removeAttribute('disabled');\n        }\n      });\n    }\n    if (changedProperties.has('value')) {\n      // `<cds-multi-select>` updates selection beforehand\n      // because our rendering logic for `<cds-multi-select>` looks for selected items via `qSA()`\n      forEach(this.querySelectorAll(selectorItem), (elem) => {\n        (elem as CDSDropdownItem).selected =\n          (elem as CDSDropdownItem).value === this.value;\n      });\n      const item = find(\n        this.querySelectorAll(selectorItem),\n        (elem) => (elem as CDSDropdownItem).value === this.value\n      );\n      if (item) {\n        const range = this.ownerDocument!.createRange();\n        range.selectNodeContents(item);\n        this._selectedItemContent = range.cloneContents();\n      } else {\n        this._selectedItemContent = null;\n      }\n    }\n    return true;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updated(_changedProperties) {\n    this._hasAILabel\n      ? this.setAttribute('ai-label', '')\n      : this.removeAttribute('ai-label');\n\n    const label = this.shadowRoot?.querySelector(\"slot[name='ai-label']\");\n\n    if (label) {\n      label?.classList.toggle(\n        `${prefix}--slug--revert`,\n        this.querySelector(`${prefix}-ai-label`)?.hasAttribute('revert-active')\n      );\n    } else {\n      this.shadowRoot\n        ?.querySelector(\"slot[name='slug']\")\n        ?.classList.toggle(\n          `${prefix}--slug--revert`,\n          this.querySelector(`${prefix}-slug`)?.hasAttribute('revert-active')\n        );\n    }\n  }\n\n  /**\n   * The CSS class list for dropdown listbox\n   */\n  protected get _classes(): any {\n    const { disabled, size, type, invalid, open, warn } = this;\n    const inline = type === DROPDOWN_TYPE.INLINE;\n\n    const selectedItemsCount = this.querySelectorAll(\n      (this.constructor as typeof CDSDropdown).selectorItemSelected\n    ).length;\n\n    return classMap({\n      [`${prefix}--dropdown`]: true,\n      [`${prefix}--list-box`]: true,\n      [`${prefix}--list-box--disabled`]: disabled,\n      [`${prefix}--list-box--inline`]: inline,\n      [`${prefix}--list-box--expanded`]: open,\n      [`${prefix}--list-box--${size}`]: size,\n      [`${prefix}--dropdown--invalid`]: invalid,\n      [`${prefix}--dropdown--warn`]: warn,\n      [`${prefix}--dropdown--inline`]: inline,\n      [`${prefix}--dropdown--selected`]: selectedItemsCount > 0,\n      [`${prefix}--list-box__wrapper--decorator`]: this._hasAILabel,\n    });\n  }\n\n  render() {\n    const {\n      ariaLabel,\n      _classes: classes,\n      disabled,\n      helperText,\n      invalid,\n      invalidText,\n      open,\n      toggleLabelClosed,\n      toggleLabelOpen,\n      type,\n      warn,\n      warnText,\n      _activeDescendant: activeDescendant,\n      _shouldTriggerBeFocusable: shouldTriggerBeFocusable,\n      _handleClickInner: handleClickInner,\n      _handleKeydownInner: handleKeydownInner,\n      _handleKeypressInner: handleKeypressInner,\n      _handleSlotchangeHelperText: handleSlotchangeHelperText,\n      _handleAILabelSlotChange: handleAILabelSlotChange,\n      _slotHelperTextNode: slotHelperTextNode,\n    } = this;\n    const inline = type === DROPDOWN_TYPE.INLINE;\n\n    let activeDescendantFallback: string | undefined;\n    if (open && !activeDescendant) {\n      const constructor = this.constructor as typeof CDSDropdown;\n      const items = this.querySelectorAll(constructor.selectorItem);\n      activeDescendantFallback = items[0]?.id;\n    }\n\n    const helperClasses = classMap({\n      [`${prefix}--form__helper-text`]: true,\n      [`${prefix}--form__helper-text--disabled`]: disabled,\n    });\n    const iconContainerClasses = classMap({\n      [`${prefix}--list-box__menu-icon`]: true,\n      [`${prefix}--list-box__menu-icon--open`]: open,\n    });\n    const toggleLabel =\n      (open ? toggleLabelOpen : toggleLabelClosed) || undefined;\n    const hasHelperText =\n      helperText ||\n      invalidText ||\n      warnText ||\n      (slotHelperTextNode && slotHelperTextNode.assignedNodes().length > 0);\n    const validityIcon = !invalid\n      ? undefined\n      : WarningFilled16({\n          class: `${prefix}--list-box__invalid-icon`,\n          'aria-label': toggleLabel,\n        });\n    const warningIcon =\n      !warn || (invalid && warn)\n        ? undefined\n        : WarningAltFilled16({\n            class: `${prefix}--list-box__invalid-icon ${prefix}--list-box__invalid-icon--warning`,\n            'aria-label': toggleLabel,\n          });\n    const helperMessage = invalid ? invalidText : warn ? warnText : helperText;\n    const menuBody = html`\n      <div\n        aria-labelledby=\"${ifDefined(ariaLabel ? undefined : 'dropdown-label')}\"\n        aria-label=\"${ifDefined(ariaLabel ? ariaLabel : undefined)}\"\n        id=\"menu-body\"\n        part=\"menu-body\"\n        class=\"${prefix}--list-box__menu\"\n        role=\"listbox\"\n        tabindex=\"-1\"\n        ?hidden=${!open}>\n        <slot></slot>\n      </div>\n    `;\n    return html`\n      ${this._renderTitleLabel()}\n      <div\n        class=\"${classes}\"\n        ?data-invalid=${invalid}\n        @click=${handleClickInner}\n        @keydown=${handleKeydownInner}\n        @keypress=${handleKeypressInner}>\n        <div\n          id=\"${ifDefined(\n            !shouldTriggerBeFocusable ? undefined : 'trigger-button'\n          )}\"\n          class=\"${prefix}--list-box__field\"\n          part=\"trigger-button\"\n          tabindex=\"${ifDefined(!shouldTriggerBeFocusable ? undefined : '0')}\"\n          role=\"${ifDefined(\n            !shouldTriggerBeFocusable ? undefined : 'combobox'\n          )}\"\n          aria-labelledby=\"${ifDefined(\n            !shouldTriggerBeFocusable ? undefined : 'dropdown-label'\n          )}\"\n          aria-expanded=\"${ifDefined(\n            !shouldTriggerBeFocusable ? undefined : String(open)\n          )}\"\n          aria-haspopup=\"${ifDefined(\n            !shouldTriggerBeFocusable ? undefined : 'listbox'\n          )}\"\n          aria-controls=\"${ifDefined(\n            !shouldTriggerBeFocusable ? undefined : 'menu-body'\n          )}\"\n          aria-activedescendant=\"${ifDefined(\n            !shouldTriggerBeFocusable\n              ? undefined\n              : open\n                ? (activeDescendant ?? activeDescendantFallback)\n                : ''\n          )}\">\n          ${this._renderPrecedingLabel()}${this._renderLabel()}${validityIcon}${warningIcon}${this._renderFollowingLabel()}\n          <div id=\"trigger-caret\" class=\"${iconContainerClasses}\">\n            ${ChevronDown16({ 'aria-label': toggleLabel })}\n          </div>\n        </div>\n        <slot name=\"ai-label\" @slotchange=${handleAILabelSlotChange}></slot>\n        <slot name=\"slug\" @slotchange=${handleAILabelSlotChange}></slot>\n        ${menuBody}\n      </div>\n      <div\n        part=\"helper-text\"\n        class=\"${helperClasses}\"\n        ?hidden=\"${(inline && !warn && !invalid) || !hasHelperText}\">\n        <slot name=\"helper-text\" @slotchange=\"${handleSlotchangeHelperText}\"\n          >${helperMessage}</slot\n        >\n      </div>\n    `;\n  }\n\n  /**\n   * Symbols of keys that triggers opening/closing menu and selecting/deselecting menu item.\n   */\n  static TRIGGER_KEYS = new Set([' ', 'Enter']);\n\n  /**\n   * A selector that will return highlighted items.\n   */\n  static get selectorItemHighlighted() {\n    return `${prefix}-dropdown-item[highlighted]`;\n  }\n\n  /**\n   * A selector that will return dropdown items.\n   */\n  static get selectorItem() {\n    return `${prefix}-dropdown-item`;\n  }\n\n  /**\n   * A selector that will return selected items.\n   */\n  static get selectorItemSelected() {\n    return `${prefix}-dropdown-item[selected]`;\n  }\n\n  /**\n   * The name of the custom event fired before a dropdown item is selected upon a user gesture.\n   * Cancellation of this event stops changing the user-initiated selection.\n   */\n  static get eventBeforeSelect() {\n    return `${prefix}-dropdown-beingselected`;\n  }\n\n  /**\n   * The name of the custom event fired after a a dropdown item is selected upon a user gesture.\n   */\n  static get eventSelect() {\n    return `${prefix}-dropdown-selected`;\n  }\n\n  /**\n   * The name of the custom event fired before this dropdown item is being toggled upon a user gesture.\n   * Cancellation of this event stops the user-initiated action of toggling this dropdown item.\n   */\n  static get eventBeforeToggle() {\n    return `${prefix}-dropdown-beingtoggled`;\n  }\n\n  /**\n   * The name of the custom event fired after this dropdown item is toggled upon a user gesture.\n   */\n  static get eventToggle() {\n    return `${prefix}-dropdown-toggled`;\n  }\n\n  /**\n   * A selector that will return the slug item.\n   *\n   * remove in v12\n   */\n  static get slugItem() {\n    return `${prefix}-slug`;\n  }\n\n  /**\n   * A selector that will return the AI Label item.\n   */\n  static get aiLabelItem() {\n    return `${prefix}-ai-label`;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  static styles = styles;\n\n  /**\n   * @returns A action for dropdown for the given key symbol.\n   */\n  static getAction(key: string) {\n    if (key === 'Escape') {\n      return DROPDOWN_KEYBOARD_ACTION.CLOSING;\n    }\n    if (key in NAVIGATION_DIRECTION) {\n      return DROPDOWN_KEYBOARD_ACTION.NAVIGATING;\n    }\n    if (this.TRIGGER_KEYS.has(key)) {\n      return DROPDOWN_KEYBOARD_ACTION.TRIGGERING;\n    }\n    return DROPDOWN_KEYBOARD_ACTION.NONE;\n  }\n}\n\nexport default CDSDropdown;\n"],"names":["customElement"],"mappings":"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"}