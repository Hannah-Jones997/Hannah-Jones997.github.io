{"version":3,"file":"table-header-cell.js","sources":["../../../src/components/data-table/table-header-cell.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport ArrowsVertical32 from '@carbon/icons/lib/arrows--vertical/32.js';\nimport ArrowDown32 from '@carbon/icons/lib/arrow--down/32.js';\nimport { prefix } from '../../globals/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport {\n  TABLE_SORT_CYCLE,\n  TABLE_SORT_CYCLES,\n  TABLE_SORT_DIRECTION,\n} from './defs';\nimport styles from './data-table.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { TABLE_SORT_CYCLE, TABLE_SORT_CYCLES, TABLE_SORT_DIRECTION };\n\n/**\n * Data table header cell.\n *\n * @element cds-table-header-cell\n * @fires cds-table-header-cell-sort\n *   The custom event fired before a new sort direction is set upon a user gesture.\n *   Cancellation of this event stops the user-initiated change in sort direction.\n */\n@customElement(`${prefix}-table-header-cell`)\nclass CDSTableHeaderCell extends FocusMixin(LitElement) {\n  /**\n   * Handles `click` event on the sort button.\n   *\n   */\n  private _handleClickSortButton(event) {\n    if (\n      !(event.target as HTMLElement).matches(\n        (this.constructor as typeof CDSTableHeaderCell).aiLabelItem\n      ) &&\n      !(event.target as HTMLElement).matches(\n        (this.constructor as typeof CDSTableHeaderCell).slugItem\n      )\n    ) {\n      const nextSortDirection = this._getNextSort();\n      const init = {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: {\n          oldSortDirection: this.sortDirection,\n          sortDirection: nextSortDirection,\n        },\n      };\n      const constructor = this.constructor as typeof CDSTableHeaderCell;\n      if (\n        this.dispatchEvent(new CustomEvent(constructor.eventBeforeSort, init))\n      ) {\n        this.sortActive = true;\n        this.sortDirection = nextSortDirection;\n      }\n    }\n  }\n\n  /**\n   * Handles `slotchange` event.\n   *\n   */\n  private _handleSlotChange() {\n    this.requestUpdate();\n  }\n\n  /**\n   * Handles `slotchange` event.\n   */\n  protected _handleAILabelSlotChange({ target }: Event) {\n    const hasContent = (target as HTMLSlotElement)\n      .assignedNodes()\n      .filter((elem) =>\n        (elem as HTMLElement).matches !== undefined\n          ? (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSTableHeaderCell).aiLabelItem\n            ) ||\n            (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSTableHeaderCell).slugItem\n            )\n          : false\n      );\n    if (hasContent.length > 0) {\n      this._hasAILabel = Boolean(hasContent);\n      (hasContent[0] as HTMLElement).setAttribute('size', 'mini');\n    }\n\n    this.requestUpdate();\n  }\n\n  /**\n   * @returns The next sort direction.\n   */\n  private _getNextSort() {\n    const {\n      sortCycle = TABLE_SORT_CYCLE.TRI_STATES_FROM_ASCENDING,\n      sortDirection,\n    } = this;\n    if (!sortDirection) {\n      throw new TypeError(\n        'Table sort direction is not defined. ' +\n          'Likely that `_getNextSort()` is called with non-sorted table column, which should not happen in regular condition.'\n      );\n    }\n    const directions = (this.constructor as typeof CDSTableHeaderCell)\n      .TABLE_SORT_CYCLES[sortCycle];\n    const index = directions.indexOf(sortDirection as TABLE_SORT_DIRECTION);\n    if (index < 0) {\n      if (sortDirection === TABLE_SORT_DIRECTION.NONE) {\n        // If the current sort direction is `none` in bi-state sort cycle, returns the first one in the cycle\n        return directions[0];\n      }\n      throw new RangeError(\n        `The given sort state (${sortDirection}) is not found in the given table sort cycle: ${sortCycle}`\n      );\n    }\n    return directions[(index + 1) % directions.length];\n  }\n\n  /**\n   * `true` if there is an AI Label.\n   */\n  protected _hasAILabel = false;\n\n  /**\n   * `true` if the table has expandable rows\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'expandable' })\n  isExpandable = false;\n\n  /**\n   * `true` if this table has selectable rows\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'is-selectable' })\n  isSelectable = false;\n  /**\n   * `true` if this table header column should be sortable\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'is-sortable' })\n  isSortable = false;\n\n  /**\n   * `true` if this table header cell is of a primary sorting column.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'sort-active' })\n  sortActive = false;\n\n  /**\n   * The table sort cycle in use.\n   */\n  @property({ reflect: true, attribute: 'sort-cycle' })\n  sortCycle?: TABLE_SORT_CYCLE;\n\n  /**\n   * The table sort direction.\n   * If present, this table header cell will have a sorting UI. Choose between `ascending` or `descending`.\n   */\n  @property({ reflect: true, attribute: 'sort-direction' })\n  sortDirection?: TABLE_SORT_DIRECTION;\n\n  /**\n   * TODO: Uncomment when Carbon fully implements sticky header\n   * Specify whether the header should be sticky.\n   * Still experimental: may not work with every combination of table props\n   */\n  // @property({ type: Boolean, reflect: true, attribute: 'sticky-header' })\n  // stickyHeader = false;\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'columnheader');\n    }\n\n    super.connectedCallback();\n  }\n\n  updated(changedProperties) {\n    if (\n      this.isSortable &&\n      !changedProperties.has('sortDirection') &&\n      !this.sortDirection\n    ) {\n      this.sortDirection = TABLE_SORT_DIRECTION.NONE;\n    }\n    if (this._hasAILabel) {\n      this.setAttribute('ai-label', '');\n    } else {\n      this.removeAttribute('ai-label');\n    }\n  }\n\n  render() {\n    const { sortDirection } = this;\n    const labelClasses = classMap({\n      [`${prefix}--table-header-label`]: true,\n      [`${prefix}--table-header-label--slug`]: this._hasAILabel,\n    });\n    if (sortDirection) {\n      const sortIcon =\n        sortDirection === TABLE_SORT_DIRECTION.NONE\n          ? ArrowsVertical32({\n              part: 'sort-icon',\n              class: `${prefix}--table-sort__icon-unsorted`,\n            })\n          : ArrowDown32({\n              part: 'sort-icon',\n              class: `${prefix}--table-sort__icon`,\n            });\n      return html`\n        <button\n          part=\"sort-button\"\n          class=\"${prefix}--table-sort\"\n          title=\"${this.innerText}\"\n          @click=${this._handleClickSortButton}>\n          <span class=\"${prefix}--table-sort__flex\">\n            <span part=\"label-text\" class=\"${prefix}--table-header-label\"\n              ><slot @slotchange=${this._handleSlotChange}></slot\n            ></span>\n            ${sortIcon}\n            <slot\n              name=\"ai-label\"\n              @slotchange=\"${this._handleAILabelSlotChange}\"></slot>\n            <slot\n              name=\"slug\"\n              @slotchange=\"${this._handleAILabelSlotChange}\"></slot>\n          </span>\n        </button>\n      `;\n    }\n    return html`<span part=\"label-text\" class=\"${labelClasses}\">\n      <slot></slot\n      ><slot\n        name=\"ai-label\"\n        @slotchange=\"${this._handleAILabelSlotChange}\"></slot>\n      <slot name=\"slug\" @slotchange=\"${this._handleAILabelSlotChange}\"></slot\n    ></span> `;\n  }\n\n  /**\n   * A selector that will return the slug item.\n   *\n   * remove in v12\n   */\n  static get slugItem() {\n    return `${prefix}-slug`;\n  }\n  /**\n   * A selector that will return the AI Label item.\n   */\n  static get aiLabelItem() {\n    return `${prefix}-ai-label`;\n  }\n\n  /**\n   * The name of the custom event fired before a new sort direction is set upon a user gesture.\n   * Cancellation of this event stops the user-initiated change in sort direction.\n   */\n  static get eventBeforeSort() {\n    return `${prefix}-table-header-cell-sort`;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n  static styles = styles;\n\n  /**\n   * Mapping of table sort cycles to table sort states.\n   */\n  static TABLE_SORT_CYCLES = TABLE_SORT_CYCLES;\n}\n\nexport default CDSTableHeaderCell;\n"],"names":["customElement"],"mappings":"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"}