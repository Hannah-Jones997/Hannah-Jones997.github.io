{"version":3,"file":"table-row.js","sources":["../../../src/components/data-table/table-row.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport ChevronRight16 from '@carbon/icons/lib/chevron--right/16.js';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\nimport FocusMixin from '../../globals/mixins/focus';\nimport styles from './data-table.scss?lit';\nimport '../checkbox';\nimport '../radio-button';\n\nimport HostListener from '../../globals/decorators/host-listener';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport CDSTableExpandedRow from './table-expanded-row';\nimport CDSTableCell from './table-cell';\n\n/**\n * Data table row.\n *\n * @element cds-table-row\n * @csspart selection-container The container of the checkbox.\n * @csspart selection The checkbox.\n * @fires cds-table-row-change-selection\n *   The custom event fired before this row is selected/unselected upon a user gesture.\n *   Cancellation of this event stops the user-initiated change in selection.\n * @fires cds-radio-button-changed\n *   The name of the custom event fired after this radio button changes its checked state.\n * @fires cds-checkbox-changed\n *   The name of the custom event fired after this checkbox changes its checked state.\n * @fires cds-table-row-expando-beingtoggled\n *   The name of the custom event fired before the expanded state of this row is being toggled upon a user gesture.\n *   Cancellation of this event stops the user-initiated action of toggling the expanded state.\n * @fires cds-table-row-expando-toggled\n *   The name of the custom event fired after the expanded state of this row is toggled upon a user gesture.\n */\n@customElement(`${prefix}-table-row`)\nclass CDSTableRow extends HostListenerMixin(FocusMixin(LitElement)) {\n  /**\n   * `true` if there is an AI Label.\n   */\n  protected _hasAILabel = false;\n\n  /**\n   * Handles `click` event on the radio button.\n   *\n   * @param event The event.\n   */\n  @HostListener('eventRadioChange')\n  // @ts-ignore\n  private _handleClickSelectionRadio(event: CustomEvent) {\n    const { detail } = event;\n    const selected = detail.checked;\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        selected,\n      },\n    };\n    const constructor = this.constructor as typeof CDSTableRow;\n    if (\n      this.dispatchEvent(\n        new CustomEvent(constructor.eventBeforeChangeSelection, init)\n      )\n    ) {\n      this.selected = selected;\n      const { selectorExpandedRow } = this.constructor as typeof CDSTableRow;\n\n      if (this.nextElementSibling?.matches(selectorExpandedRow)) {\n        (this.nextElementSibling as CDSTableExpandedRow).selected = selected;\n      }\n    }\n  }\n\n  /**\n   * Handles `click` event on the check box.\n   *\n   * @param event The event.\n   */\n  @HostListener('eventCheckboxChange')\n  // @ts-ignore\n  private _handleClickSelectionCheckbox(event: CustomEvent) {\n    const { detail } = event;\n    const selected = detail.checked;\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        selected,\n      },\n    };\n    const constructor = this.constructor as typeof CDSTableRow;\n    if (\n      this.dispatchEvent(\n        new CustomEvent(constructor.eventBeforeChangeSelection, init)\n      )\n    ) {\n      this.selected = selected;\n      const { selectorExpandedRow } = this.constructor as typeof CDSTableRow;\n\n      if (this.nextElementSibling?.matches(selectorExpandedRow)) {\n        (this.nextElementSibling as CDSTableExpandedRow).selected = selected;\n      }\n    }\n  }\n\n  /**\n   * Handles `click` event on the expando button.\n   */\n  private _handleClickExpando() {\n    this._handleUserInitiatedToggleExpando();\n  }\n\n  /**\n   * Handles `mouseover`/`mouseout` event handler on this element.\n   *\n   * @param event The event.\n   */\n  @HostListener('mouseover')\n  @HostListener('mouseout')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleMouseOverOut(event: MouseEvent) {\n    const { selectorExpandedRow, selectorTableCellOverflowMenu } = this\n      .constructor as typeof CDSTableRow;\n    const { nextElementSibling } = this;\n    if (nextElementSibling?.matches(selectorExpandedRow)) {\n      (nextElementSibling as CDSTableExpandedRow).highlighted =\n        event.type === 'mouseover';\n    }\n    if (this.overflowMenuOnHover) {\n      const overflowMenu = this.querySelector(selectorTableCellOverflowMenu);\n      const parentCell = overflowMenu?.parentElement;\n\n      if (event.type === 'mouseout') {\n        (parentCell as CDSTableCell).overflowMenuOnHover = true;\n      } else {\n        (parentCell as CDSTableCell).overflowMenuOnHover = false;\n      }\n    }\n  }\n\n  /**\n   * Handles user-initiated toggle request of the expando button in this table row.\n   *\n   * @param expanded The new expanded state.\n   */\n  _handleUserInitiatedToggleExpando(expanded = !this.expanded) {\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        expanded,\n      },\n    };\n    if (\n      this.dispatchEvent(\n        new CustomEvent(\n          (this.constructor as typeof CDSTableRow).eventBeforeExpandoToggle,\n          init\n        )\n      )\n    ) {\n      this.expanded = expanded;\n      this.dispatchEvent(\n        new CustomEvent(\n          (this.constructor as typeof CDSTableRow).eventExpandoToggle,\n          init\n        )\n      );\n    }\n  }\n\n  protected _renderExpandButton() {\n    const { _handleClickExpando: handleClickExpando } = this;\n    return html`\n      <div class=\"${prefix}--table-expand\">\n        <div>\n          <slot name=\"ai-label\" @slotchange=\"${this._handleSlotChange}\"></slot>\n          <slot name=\"slug\" @slotchange=\"${this._handleSlotChange}\"></slot>\n          <button\n            class=\"${prefix}--table-expand__button\"\n            @click=\"${handleClickExpando}\">\n            ${ChevronRight16({ class: `${prefix}--table-expand__svg` })}\n          </button>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Handles `slotchange` event.\n   */\n  protected _handleSlotChange({ target }: Event) {\n    const hasContent = (target as HTMLSlotElement)\n      .assignedNodes()\n      .filter((elem) =>\n        (elem as HTMLElement).matches !== undefined\n          ? (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSTableRow).aiLabelItem\n            ) ||\n            (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSTableRow).slugItem\n            )\n          : false\n      );\n    if (hasContent.length > 0) {\n      this._hasAILabel = Boolean(hasContent);\n      (hasContent[0] as HTMLElement).setAttribute('size', 'mini');\n    }\n    this.requestUpdate();\n  }\n\n  /**\n   * @returns The first set of table cells.\n   */\n  protected _renderFirstCells() {\n    const {\n      disabled,\n      hideCheckbox,\n      radio,\n      selected,\n      selectionLabel,\n      selectionName,\n      selectionValue,\n    } = this;\n    return !selectionName\n      ? undefined\n      : html`\n          <div class=\"${prefix}--table-column-checkbox\">\n            <div>\n              <slot\n                name=\"ai-label\"\n                @slotchange=\"${this._handleSlotChange}\"></slot>\n              <slot name=\"slug\" @slotchange=\"${this._handleSlotChange}\"></slot>\n              ${radio\n                ? html`<cds-radio-button data-table></cds-radio-button>`\n                : html`<cds-checkbox\n                    hide-label\n                    ?hide-checkbox=\"${hideCheckbox}\"\n                    label-text=\"${selectionLabel}\"\n                    name=${selectionName}\n                    data-table\n                    ?disabled=${disabled}\n                    ?checked=${selected}\n                    value=${selectionValue}></cds-checkbox> `}\n            </div>\n          </div>\n        `;\n  }\n\n  /**\n   * `true` if this table should support batch expansion\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'batch-expansion' })\n  batchExpansion = false;\n\n  /**\n   * `true` if this table row should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * `true` if this table row is placed at an even position in parent `<cds-table-body>`.\n   * `<cds-table-body>` sets this property, _only_ in zebra stripe mode.\n   *\n   * @private\n   */\n  @property({ type: Boolean, reflect: true })\n  even = false;\n\n  /**\n   * `true` if this table row can be expanded to show content underneath\n   *\n   * @private\n   */\n  @property({ type: Boolean, reflect: true })\n  expandable = false;\n\n  /**\n   * `true` when the table row expanded is showing\n   *\n   * @private\n   */\n  @property({ type: Boolean, reflect: true })\n  expanded = false;\n\n  /**\n   * `true` if this table row should be filtered out.\n   */\n  @property({ type: Boolean, reflect: true })\n  filtered = false;\n\n  /**\n   * Specify whether the checkbox should be present in the DOM,\n   * but invisible and uninteractable.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'hide-checkbox' })\n  hideCheckbox = false;\n\n  /**\n   * `true` if the table row should be highlighted.\n   */\n  @property({ type: Boolean, reflect: true })\n  highlighted = false;\n\n  /**\n   * `true` if this table row is placed at an odd position in parent `<cds-table-body>`.\n   * `<cds-table-body>` sets this property, _only_ in zebra stripe mode.\n   *\n   * @private\n   */\n  @property({ type: Boolean, reflect: true })\n  odd = false;\n\n  /**\n   * Specify whether the overflow menu (if it exists) should be shown always, or only on hover\n   */\n  @property({\n    type: Boolean,\n    reflect: true,\n    attribute: 'overflow-menu-on-hover',\n  })\n  overflowMenuOnHover = false;\n\n  /**\n   * Specify whether the control should be a radio button or inline checkbox\n   *\n   * @private\n   */\n  @property({ type: Boolean, reflect: true })\n  radio = false;\n\n  /**\n   * `true` if this table row should be selected.\n   */\n  @property({ type: Boolean, reflect: true })\n  selected = false;\n\n  /**\n   * The `aria-label` attribute for the `<label>` for selection.\n   */\n  @property({ attribute: 'selection-label' })\n  selectionLabel = '';\n\n  /**\n   * The `name` attribute for the `<input>` for selection.\n   * If present, this table row will be a selectable one.\n   */\n  @property({ attribute: 'selection-name' })\n  selectionName = '';\n\n  /**\n   * The `value` attribute for the `<input>` for selection.\n   */\n  @property({ attribute: 'selection-value' })\n  selectionValue = '';\n\n  /**\n   * TODO: Uncomment when Carbon fully implements sticky header\n   * Specify whether the header should be sticky.\n   * Still experimental: may not work with every combination of table props\n   */\n  // @property({ type: Boolean, reflect: true, attribute: 'sticky-header' })\n  // stickyHeader = false;\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'row');\n    }\n    super.connectedCallback();\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('expanded')) {\n      const { selectorExpandedRow } = this.constructor as typeof CDSTableRow;\n      const { expanded, nextElementSibling } = this;\n      if (nextElementSibling?.matches(selectorExpandedRow)) {\n        (nextElementSibling as CDSTableExpandedRow).expanded = expanded;\n      }\n    }\n\n    if (changedProperties.has('highlighted')) {\n      const { selectorExpandedRow } = this.constructor as typeof CDSTableRow;\n      const { highlighted, nextElementSibling } = this;\n      if (nextElementSibling?.matches(selectorExpandedRow)) {\n        (nextElementSibling as CDSTableExpandedRow).highlighted = highlighted;\n      }\n    }\n\n    if (this._hasAILabel) {\n      this.setAttribute('ai-label', '');\n    } else {\n      this.removeAttribute('ai-label');\n    }\n  }\n\n  render() {\n    if (this.selectionName) {\n      this.closest(\n        (this.constructor as typeof CDSTableRow).selectorTable\n      )?.setAttribute('is-selectable', '');\n    }\n    return html`\n      ${this.expandable ? this._renderExpandButton() : ''}\n      ${this._renderFirstCells()}\n      <slot></slot>\n    `;\n  }\n\n  /**\n   * The name of the custom event fired after this radio button changes its checked state.\n   */\n  static get eventRadioChange() {\n    return `${prefix}-radio-button-changed`;\n  }\n\n  /**\n   * The name of the custom event fired after this radio button changes its checked state.\n   */\n  static get eventCheckboxChange() {\n    return `${prefix}-checkbox-changed`;\n  }\n\n  /**\n   * The name of the custom event fired before this row is selected/unselected upon a user gesture.\n   * Cancellation of this event stops the user-initiated change in selection.\n   */\n  static get eventBeforeChangeSelection() {\n    return `${prefix}-table-row-change-selection`;\n  }\n\n  /**\n   * A selector that will return the parent table\n   */\n  static get selectorTable() {\n    return `${prefix}-table`;\n  }\n\n  /**\n   * The CSS selector to find the overflow menu on the table cell\n   */\n  static get selectorTableCellOverflowMenu() {\n    return `${prefix}-table-cell ${prefix}-overflow-menu`;\n  }\n\n  /**\n   * A selector that will return the corresponding expanded row.\n   */\n  static get selectorExpandedRow() {\n    return `${prefix}-table-expanded-row`;\n  }\n\n  /**\n   * A selector that will return the slug item.\n   *\n   * remove in v12\n   */\n  static get slugItem() {\n    return `${prefix}-slug`;\n  }\n\n  /**\n   * A selector that will return the AI Label item.\n   */\n  static get aiLabelItem() {\n    return `${prefix}-ai-label`;\n  }\n\n  /**\n   * The name of the custom event fired before the expanded state this row is being toggled upon a user gesture.\n   * Cancellation of this event stops the user-initiated action of toggling the expanded state.\n   */\n  static get eventBeforeExpandoToggle() {\n    return `${prefix}-table-row-expando-beingtoggled`;\n  }\n\n  /**\n   * The name of the custom event fired after the expanded state this row is toggled upon a user gesture.\n   */\n  static get eventExpandoToggle() {\n    return `${prefix}-table-row-expando-toggled`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSTableRow;\n"],"names":["customElement"],"mappings":"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"}