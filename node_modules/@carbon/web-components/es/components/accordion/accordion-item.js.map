{"version":3,"file":"accordion-item.js","sources":["../../../src/components/accordion/accordion-item.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport ChevronRight16 from '@carbon/icons/lib/chevron--right/16.js';\nimport { prefix } from '../../globals/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport Handle from '../../globals/internal/handle';\nimport { ACCORDION_ITEM_BREAKPOINT } from './defs';\nimport styles from './accordion.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { ACCORDION_ITEM_BREAKPOINT };\n\n/**\n * Observes resize of the given element with the given resize observer.\n *\n * @param observer The resize observer.\n * @param elem The element to observe the resize.\n */\nconst observeResize = (observer: ResizeObserver, elem: Element) => {\n  if (!elem) {\n    return null;\n  }\n  observer.observe(elem);\n  return {\n    release() {\n      observer.unobserve(elem);\n      return null;\n    },\n  } as Handle;\n};\n\n/**\n * Accordion item.\n *\n * @element cds-accordion-item\n * @fires cds-accordion-item-beingtoggled\n *   The custom event fired before this accordion item is being toggled upon a user gesture.\n *   Cancellation of this event stops the user-initiated action of toggling this accordion item.\n * @fires cds-accordion-item-toggled - The custom event fired after this accordion item is toggled upon a user gesture.\n * @csspart title The title.\n * @csspart content The content.\n */\n@customElement(`${prefix}-accordion-item`)\nclass CDSAccordionItem extends FocusMixin(LitElement) {\n  /**\n   * The current breakpoint.\n   */\n  private _currentBreakpoint?: ACCORDION_ITEM_BREAKPOINT;\n\n  /**\n   * The handle for observing resize of the parent element of this element.\n   */\n  private _hObserveResize: Handle | null = null;\n\n  /**\n   * Handles user-initiated toggle request of this accordion item.\n   *\n   * @param open The new open state.\n   */\n  private _handleUserInitiatedToggle(open = !this.open) {\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        open,\n      },\n    };\n    if (\n      this.dispatchEvent(\n        new CustomEvent(\n          (this.constructor as typeof CDSAccordionItem).eventBeforeToggle,\n          init\n        )\n      )\n    ) {\n      const { selectorAccordionContent } = this\n        .constructor as typeof CDSAccordionItem;\n\n      !this.open\n        ? this.setAttribute('expanding', '')\n        : this.setAttribute('collapsing', '');\n      this.shadowRoot!.querySelector(\n        selectorAccordionContent\n      )!.addEventListener('animationend', () => {\n        this.removeAttribute('expanding');\n        this.removeAttribute('collapsing');\n      });\n\n      this.open = open;\n      this.dispatchEvent(\n        new CustomEvent(\n          (this.constructor as typeof CDSAccordionItem).eventToggle,\n          init\n        )\n      );\n    }\n  }\n\n  /**\n   * Handler for the `click` event on the expando button.\n   */\n  private _handleClickExpando() {\n    this._handleUserInitiatedToggle();\n  }\n\n  /**\n   * Handler for the `keydown` event on the expando button.\n   */\n  private _handleKeydownExpando = ({ key }: KeyboardEvent) => {\n    if (this.open && (key === 'Esc' || key === 'Escape')) {\n      this._handleUserInitiatedToggle(false);\n    }\n  };\n\n  /**\n   * The `ResizeObserver` instance for observing element resizes for re-positioning floating menu position.\n   */\n  // TODO: Wait for `.d.ts` update to support `ResizeObserver`\n  // @ts-ignore\n  private _resizeObserver = new ResizeObserver(\n    (records: ResizeObserverEntry[]) => {\n      const { width } = records[records.length - 1].contentRect;\n      const { _sizesBreakpoints: sizesBreakpoints } = this\n        .constructor as typeof CDSAccordionItem;\n      this._currentBreakpoint = Object.keys(sizesBreakpoints)\n        .sort((lhs, rhs) => sizesBreakpoints[rhs] - sizesBreakpoints[lhs])\n        .find(\n          (size) => width >= sizesBreakpoints[size]\n        ) as ACCORDION_ITEM_BREAKPOINT;\n      this.requestUpdate();\n    }\n  );\n\n  /**\n   * `true` if the accordion item should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * `true` if the accordion item should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  open = false;\n\n  /**\n   * The title text.\n   */\n  @property({ attribute: 'title' })\n  title = '';\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'listitem');\n    }\n    super.connectedCallback();\n    if (this._hObserveResize) {\n      this._hObserveResize = this._hObserveResize.release();\n    }\n    this._hObserveResize = observeResize(this._resizeObserver, this);\n  }\n\n  disconnectedCallback() {\n    if (this._hObserveResize) {\n      this._hObserveResize = this._hObserveResize.release();\n    }\n  }\n\n  render() {\n    const {\n      disabled,\n      title,\n      open,\n      _currentBreakpoint: currentBreakpoint,\n      _handleClickExpando: handleClickExpando,\n      _handleKeydownExpando: handleKeydownExpando,\n    } = this;\n    const { _classesBreakpoints: classesBreakpoints } = this\n      .constructor as typeof CDSAccordionItem;\n    const { [currentBreakpoint!]: classBreakpoint } = classesBreakpoints;\n    const contentClasses = classMap({\n      [classBreakpoint]: classBreakpoint,\n      [`${prefix}--accordion__content`]: true,\n    });\n    return html`\n      <button\n        ?disabled=\"${disabled}\"\n        type=\"button\"\n        part=\"expando\"\n        class=\"${prefix}--accordion__heading\"\n        aria-controls=\"content\"\n        aria-expanded=\"${open}\"\n        @click=\"${handleClickExpando}\"\n        @keydown=\"${handleKeydownExpando}\">\n        ${ChevronRight16({\n          part: 'expando-icon',\n          class: `${prefix}--accordion__arrow`,\n        })}\n        <div part=\"title\" class=\"${prefix}--accordion__title\">\n          <slot name=\"title\">${title}</slot>\n        </div>\n      </button>\n      <div class=\"${prefix}--accordion__wrapper\" part=\"wrapper\">\n        <div id=\"content\" part=\"content\" class=\"${contentClasses}\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * The CSS classes for breakpoints.\n   *\n   * @private\n   */\n  static get _classesBreakpoints() {\n    return {\n      [ACCORDION_ITEM_BREAKPOINT.SMALL]: `${prefix}-ce--accordion__content--${ACCORDION_ITEM_BREAKPOINT.SMALL}`,\n      [ACCORDION_ITEM_BREAKPOINT.MEDIUM]: `${prefix}-ce--accordion__content--${ACCORDION_ITEM_BREAKPOINT.MEDIUM}`,\n    };\n  }\n\n  /**\n   * The breakpoints.\n   *\n   * @private\n   */\n  static get _sizesBreakpoints() {\n    return {\n      [ACCORDION_ITEM_BREAKPOINT.SMALL]: 480,\n      [ACCORDION_ITEM_BREAKPOINT.MEDIUM]: 640,\n    };\n  }\n\n  /**\n   * The name of the custom event fired before this accordion item is being toggled upon a user gesture.\n   * Cancellation of this event stops the user-initiated action of toggling this accordion item.\n   */\n  static get eventBeforeToggle() {\n    return `${prefix}-accordion-item-beingtoggled`;\n  }\n\n  /**\n   * The name of the custom event fired after this accordion item is toggled upon a user gesture.\n   */\n  static get eventToggle() {\n    return `${prefix}-accordion-item-toggled`;\n  }\n\n  static get selectorAccordionContent() {\n    return `.${prefix}--accordion__content`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSAccordionItem;\n"],"names":["customElement"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;;AAKG;AAeH;;;;;AAKG;AACH,MAAM,aAAa,GAAG,CAAC,QAAwB,EAAE,IAAa,KAAI;IAChE,IAAI,CAAC,IAAI,EAAE;AACT,QAAA,OAAO,IAAI;;AAEb,IAAA,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;IACtB,OAAO;QACL,OAAO,GAAA;AACL,YAAA,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC;AACxB,YAAA,OAAO,IAAI;SACZ;KACQ;AACb,CAAC;AAED;;;;;;;;;;AAUG;AAEH,IAAM,gBAAgB,GAAtB,MAAM,gBAAiB,SAAQ,UAAU,CAAC,UAAU,CAAC,CAAA;AAArD,IAAA,WAAA,GAAA;;AAME;;AAEG;QACK,IAAe,CAAA,eAAA,GAAkB,IAAI;AAsD7C;;AAEG;AACK,QAAA,IAAA,CAAA,qBAAqB,GAAG,CAAC,EAAE,GAAG,EAAiB,KAAI;AACzD,YAAA,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,QAAQ,CAAC,EAAE;AACpD,gBAAA,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;;AAE1C,SAAC;AAED;;AAEG;;;AAGK,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,cAAc,CAC1C,CAAC,OAA8B,KAAI;AACjC,YAAA,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW;AACzD,YAAA,MAAM,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,GAAG;AAC7C,iBAAA,WAAsC;YACzC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB;AACnD,iBAAA,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,gBAAgB,CAAC,GAAG,CAAC,GAAG,gBAAgB,CAAC,GAAG,CAAC;AAChE,iBAAA,IAAI,CACH,CAAC,IAAI,KAAK,KAAK,IAAI,gBAAgB,CAAC,IAAI,CAAC,CACb;YAChC,IAAI,CAAC,aAAa,EAAE;AACtB,SAAC,CACF;AAED;;AAEG;QAEH,IAAQ,CAAA,QAAA,GAAG,KAAK;AAEhB;;AAEG;QAEH,IAAI,CAAA,IAAA,GAAG,KAAK;AAEZ;;AAEG;QAEH,IAAK,CAAA,KAAA,GAAG,EAAE;;AAhGV;;;;AAIG;AACK,IAAA,0BAA0B,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,EAAA;AAClD,QAAA,MAAM,IAAI,GAAG;AACX,YAAA,OAAO,EAAE,IAAI;AACb,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,MAAM,EAAE;gBACN,IAAI;AACL,aAAA;SACF;AACD,QAAA,IACE,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CACZ,IAAI,CAAC,WAAuC,CAAC,iBAAiB,EAC/D,IAAI,CACL,CACF,EACD;AACA,YAAA,MAAM,EAAE,wBAAwB,EAAE,GAAG;AAClC,iBAAA,WAAsC;YAEzC,CAAC,IAAI,CAAC;kBACF,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE;kBACjC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,EAAE,CAAC;AACvC,YAAA,IAAI,CAAC,UAAW,CAAC,aAAa,CAC5B,wBAAwB,CACxB,CAAC,gBAAgB,CAAC,cAAc,EAAE,MAAK;AACvC,gBAAA,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC;AACjC,gBAAA,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC;AACpC,aAAC,CAAC;AAEF,YAAA,IAAI,CAAC,IAAI,GAAG,IAAI;AAChB,YAAA,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CACZ,IAAI,CAAC,WAAuC,CAAC,WAAW,EACzD,IAAI,CACL,CACF;;;AAIL;;AAEG;IACK,mBAAmB,GAAA;QACzB,IAAI,CAAC,0BAA0B,EAAE;;IAiDnC,iBAAiB,GAAA;QACf,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;AAC9B,YAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC;;QAEvC,KAAK,CAAC,iBAAiB,EAAE;AACzB,QAAA,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;;QAEvD,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC;;IAGlE,oBAAoB,GAAA;AAClB,QAAA,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;;;IAIzD,MAAM,GAAA;QACJ,MAAM,EACJ,QAAQ,EACR,KAAK,EACL,IAAI,EACJ,kBAAkB,EAAE,iBAAiB,EACrC,mBAAmB,EAAE,kBAAkB,EACvC,qBAAqB,EAAE,oBAAoB,GAC5C,GAAG,IAAI;AACR,QAAA,MAAM,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,GAAG;AACjD,aAAA,WAAsC;QACzC,MAAM,EAAE,CAAC,iBAAkB,GAAG,eAAe,EAAE,GAAG,kBAAkB;QACpE,MAAM,cAAc,GAAG,QAAQ,CAAC;YAC9B,CAAC,eAAe,GAAG,eAAe;AAClC,YAAA,CAAC,CAAG,EAAA,MAAM,CAAsB,oBAAA,CAAA,GAAG,IAAI;AACxC,SAAA,CAAC;AACF,QAAA,OAAO,IAAI,CAAA;;qBAEM,QAAQ,CAAA;;;iBAGZ,MAAM,CAAA;;yBAEE,IAAI,CAAA;kBACX,kBAAkB,CAAA;oBAChB,oBAAoB,CAAA;AAC9B,QAAA,EAAA,cAAc,CAAC;AACf,YAAA,IAAI,EAAE,cAAc;YACpB,KAAK,EAAE,CAAG,EAAA,MAAM,CAAoB,kBAAA,CAAA;SACrC,CAAC;mCACyB,MAAM,CAAA;+BACV,KAAK,CAAA;;;oBAGhB,MAAM,CAAA;kDACwB,cAAc,CAAA;;;;KAI3D;;AAGH;;;;AAIG;AACH,IAAA,WAAW,mBAAmB,GAAA;QAC5B,OAAO;YACL,CAAC,yBAAyB,CAAC,KAAK,GAAG,CAAG,EAAA,MAAM,CAA4B,yBAAA,EAAA,yBAAyB,CAAC,KAAK,CAAE,CAAA;YACzG,CAAC,yBAAyB,CAAC,MAAM,GAAG,CAAG,EAAA,MAAM,CAA4B,yBAAA,EAAA,yBAAyB,CAAC,MAAM,CAAE,CAAA;SAC5G;;AAGH;;;;AAIG;AACH,IAAA,WAAW,iBAAiB,GAAA;QAC1B,OAAO;AACL,YAAA,CAAC,yBAAyB,CAAC,KAAK,GAAG,GAAG;AACtC,YAAA,CAAC,yBAAyB,CAAC,MAAM,GAAG,GAAG;SACxC;;AAGH;;;AAGG;AACH,IAAA,WAAW,iBAAiB,GAAA;QAC1B,OAAO,CAAA,EAAG,MAAM,CAAA,4BAAA,CAA8B;;AAGhD;;AAEG;AACH,IAAA,WAAW,WAAW,GAAA;QACpB,OAAO,CAAA,EAAG,MAAM,CAAA,uBAAA,CAAyB;;AAG3C,IAAA,WAAW,wBAAwB,GAAA;QACjC,OAAO,CAAA,CAAA,EAAI,MAAM,CAAA,oBAAA,CAAsB;;;AAGlC,gBAAM,CAAA,MAAA,GAAG,MAAH;AApHb,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AACzB,CAAA,EAAA,gBAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA;AAMjB,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AAC7B,CAAA,EAAA,gBAAA,CAAA,SAAA,EAAA,MAAA,EAAA,MAAA,CAAA;AAMb,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE;AACrB,CAAA,EAAA,gBAAA,CAAA,SAAA,EAAA,OAAA,EAAA,MAAA,CAAA;AA3GP,gBAAgB,GAAA,UAAA,CAAA;AADrB,IAAAA,aAAa,CAAC,CAAA,EAAG,MAAM,CAAA,eAAA,CAAiB;AACnC,CAAA,EAAA,gBAAgB,CAoNrB;AAED,yBAAe,gBAAgB;;;;"}