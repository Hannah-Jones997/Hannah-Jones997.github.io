{"version":3,"file":"progress-indicator.js","sources":["../../../src/components/progress-indicator/progress-indicator.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport CDSProgressStep from './progress-step';\nimport styles from './progress-indicator.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Progress indicator.\n *\n * @element cds-progress-indicator\n */\n@customElement(`${prefix}-progress-indicator`)\nexport default class CDSProgressIndicator extends LitElement {\n  /**\n   * Determines whether or not the progress indicator should be rendered\n   * vertically.\n   */\n  @property({ type: Boolean, reflect: true })\n  vertical = false;\n\n  /**\n   * Specify whether the progress steps should be split equally in size in the\n   * div\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'space-equally' })\n  spaceEqually = false;\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'list');\n    }\n    super.connectedCallback();\n  }\n\n  updated(changedProperties) {\n    const spacingValue = this.vertical ? false : this.spaceEqually;\n    if (changedProperties.has('vertical')) {\n      // Propagate `vertical` attribute to descendants until\n      // `:host-context()` gets supported in all major browsers\n      forEach(\n        this.querySelectorAll(\n          (this.constructor as typeof CDSProgressIndicator).selectorStep\n        ),\n        (item) => {\n          (item as CDSProgressStep).vertical = this.vertical;\n          (item as CDSProgressStep).spaceEqually = spacingValue;\n        }\n      );\n    }\n    if (changedProperties.has('spaceEqually')) {\n      // Propagate `spaceEqually` attribute to descendants until\n      // `:host-context()` gets supported in all major browsers\n      forEach(\n        this.querySelectorAll(\n          (this.constructor as typeof CDSProgressIndicator).selectorStep\n        ),\n        (item) => {\n          (item as CDSProgressStep).spaceEqually = spacingValue;\n        }\n      );\n    }\n  }\n\n  render() {\n    return html`<slot></slot>`;\n  }\n\n  /**\n   * A selector that will return progress steps.\n   */\n  static get selectorStep() {\n    return `${prefix}-progress-step`;\n  }\n\n  static styles = styles;\n}\n"],"names":["customElement"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;AAKG;AAUH;;;;AAIG;AAEY,IAAM,oBAAoB,GAA1B,MAAM,oBAAqB,SAAQ,UAAU,CAAA;AAA7C,IAAA,WAAA,GAAA;;AACb;;;AAGG;QAEH,IAAQ,CAAA,QAAA,GAAG,KAAK;AAEhB;;;AAGG;QAEH,IAAY,CAAA,YAAA,GAAG,KAAK;;IAEpB,iBAAiB,GAAA;QACf,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;AAC9B,YAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC;;QAEnC,KAAK,CAAC,iBAAiB,EAAE;;AAG3B,IAAA,OAAO,CAAC,iBAAiB,EAAA;AACvB,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY;AAC9D,QAAA,IAAI,iBAAiB,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;;;AAGrC,YAAA,OAAO,CACL,IAAI,CAAC,gBAAgB,CAClB,IAAI,CAAC,WAA2C,CAAC,YAAY,CAC/D,EACD,CAAC,IAAI,KAAI;AACN,gBAAA,IAAwB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;AACjD,gBAAA,IAAwB,CAAC,YAAY,GAAG,YAAY;AACvD,aAAC,CACF;;AAEH,QAAA,IAAI,iBAAiB,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE;;;AAGzC,YAAA,OAAO,CACL,IAAI,CAAC,gBAAgB,CAClB,IAAI,CAAC,WAA2C,CAAC,YAAY,CAC/D,EACD,CAAC,IAAI,KAAI;AACN,gBAAA,IAAwB,CAAC,YAAY,GAAG,YAAY;AACvD,aAAC,CACF;;;IAIL,MAAM,GAAA;QACJ,OAAO,IAAI,CAAA,CAAA,aAAA,CAAe;;AAG5B;;AAEG;AACH,IAAA,WAAW,YAAY,GAAA;QACrB,OAAO,CAAA,EAAG,MAAM,CAAA,cAAA,CAAgB;;;AAG3B,oBAAM,CAAA,MAAA,GAAG,MAAH;AAxDb,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AACzB,CAAA,EAAA,oBAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA;AAOjB,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,EAAE;AACjD,CAAA,EAAA,oBAAA,CAAA,SAAA,EAAA,cAAA,EAAA,MAAA,CAAA;AAbF,oBAAoB,GAAA,UAAA,CAAA;AADxC,IAAAA,aAAa,CAAC,CAAA,EAAG,MAAM,CAAA,mBAAA,CAAqB;AACxB,CAAA,EAAA,oBAAoB,CA+DxC;6BA/DoB,oBAAoB;;;;"}