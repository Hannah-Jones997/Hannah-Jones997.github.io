{"version":3,"file":"tree-view.js","sources":["../../../src/components/tree-view/tree-view.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2025, 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport { TREE_SIZE } from './defs';\nimport HostListener from '../../globals/decorators/host-listener';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport styles from './tree-view.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\nimport CDSTreeNode from './tree-node';\n\nexport { TREE_SIZE };\n/**\n * Tree view.\n *\n * @element cds-tree-view\n */\n@customElement(`${prefix}-tree-view`)\nclass CDSTreeView extends HostListenerMixin(LitElement) {\n  /**\n   * Specify whether or not the label should be hidden\n   */\n  @property({ type: Boolean, attribute: 'hide-label' })\n  hideLabel = false;\n\n  /**\n   * Provide the label text that will be read by a screen reader\n   */\n  @property()\n  label!: string;\n\n  /**\n   * Specify the size of the tree from a list of available sizes.\n   */\n  @property({ reflect: true })\n  size = TREE_SIZE.SMALL;\n\n  @HostListener('click')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _click = ({ target }) => {\n    if ((target as CDSTreeNode).disabled) return;\n\n    const nodes = this.querySelectorAll(CDSTreeView.selectorTreeNode);\n    nodes.forEach((node) => {\n      const isTarget = node === target;\n      const isLink = (node as CDSTreeNode).hasAttribute('href');\n      const element = isLink ? node.shadowRoot?.querySelector('a') : node;\n      (node as CDSTreeNode).selected = isTarget;\n      (node as CDSTreeNode).active = isTarget;\n      if (!isTarget) {\n        isLink\n          ? (element as CDSTreeNode).setAttribute('tabindex', '-1')\n          : (element as CDSTreeNode).removeAttribute('tabindex');\n      } else (element as CDSTreeNode).setAttribute('tabindex', '0');\n    });\n  };\n\n  @HostListener('keydown')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleKeyDown = (event: KeyboardEvent) => {\n    const { key } = event;\n    const nodes = Array.from(\n      this.querySelectorAll(CDSTreeView.selectorTreeNode)\n    ).filter(\n      (node) => node.checkVisibility() && !node.hasAttribute('disabled')\n    );\n\n    const allNodes = Array.from(\n      this.querySelectorAll(CDSTreeView.selectorTreeNode)\n    ).filter((node) => !node.hasAttribute('disabled'));\n\n    const withLinks = (nodes[0] as CDSTreeNode).href;\n\n    const currentIndex = nodes.findIndex((node) =>\n      withLinks\n        ? node.shadowRoot?.querySelector('a')!.getAttribute('tabindex') === '0'\n        : node.getAttribute('tabindex') === '0'\n    );\n\n    let nextIndex = currentIndex;\n\n    switch (key) {\n      case 'ArrowDown':\n        nextIndex = Math.min(currentIndex + 1, nodes.length - 1);\n        break;\n      case 'ArrowUp':\n        nextIndex = Math.max(currentIndex - 1, 0);\n        break;\n      case 'Home':\n        nextIndex = 0;\n        break;\n      case 'End':\n        nextIndex = nodes.length - 1;\n        break;\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        allNodes.forEach((node) => {\n          (node as CDSTreeNode).selected = false;\n          (node as CDSTreeNode).active = false;\n        });\n        (nodes[currentIndex] as CDSTreeNode).selected = true;\n        (nodes[currentIndex] as CDSTreeNode).active = true;\n        break;\n      case 'ArrowRight':\n        if ((nodes[currentIndex] as CDSTreeNode).hasAttribute('parent')) {\n          (nodes[currentIndex] as CDSTreeNode).isExpanded = true;\n          nodes[currentIndex].setAttribute('aria-expanded', 'true');\n        }\n        break;\n      case 'ArrowLeft':\n        if (!nodes[currentIndex].hasAttribute('parent')) {\n          const temp = nodes.findIndex(\n            (node) => node === nodes[currentIndex].parentElement\n          );\n          nextIndex = temp === -1 ? currentIndex : temp;\n        } else {\n          (nodes[currentIndex] as CDSTreeNode).isExpanded = false;\n          nodes[currentIndex].setAttribute('aria-expanded', 'false');\n        }\n        break;\n    }\n\n    if (nextIndex !== currentIndex) {\n      nodes.forEach((node) => {\n        if (!withLinks) {\n          node.removeAttribute('tabindex');\n        } else {\n          node.shadowRoot?.querySelector('a')!.setAttribute('tabindex', '-1');\n        }\n      });\n      const element = withLinks\n        ? (nodes[nextIndex] as CDSTreeNode).shadowRoot!.querySelector('a')\n        : nodes[nextIndex];\n      (element as CDSTreeNode).setAttribute('tabindex', '0');\n      (element as CDSTreeNode).focus();\n      event.preventDefault();\n    }\n  };\n\n  private async _setInitialFocus() {\n    await this.updateComplete;\n\n    const nodes = this.querySelectorAll(CDSTreeView.selectorTreeNode);\n    if (nodes.length > 0) {\n      const selectedNode =\n        Array.from(nodes).find((node) => (node as CDSTreeNode).selected) ||\n        nodes[0];\n      const element = (selectedNode as CDSTreeNode).href\n        ? (selectedNode as CDSTreeNode).shadowRoot!.querySelector('a')\n        : selectedNode;\n      (element as CDSTreeNode).setAttribute('tabindex', '0');\n    }\n  }\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'tree');\n    }\n\n    if (!this.hasAttribute('aria-label')) {\n      this.setAttribute('aria-label', this.label);\n    }\n  }\n\n  updated(changedProperties) {\n    this._setInitialFocus();\n\n    if (changedProperties.has('size')) {\n      const items = this.querySelectorAll(CDSTreeView.selectorTreeNode);\n      items.forEach((item) => {\n        (item as CDSTreeNode).setAttribute('size', this.size);\n      });\n    }\n  }\n\n  render() {\n    const { hideLabel, label, size } = this;\n    const labelId = 'tree-view__label';\n    const treeClasses = classMap({\n      [`${prefix}--tree`]: true,\n      [`${prefix}--tree--${size}`]: size,\n    });\n    return html`\n      ${\n        !hideLabel\n          ? html`<label id=${labelId} class=${`${prefix}--label`}\n              >${label}\n            </label>`\n          : null\n      }\n      <ul\n        aria-label=${hideLabel ? label : undefined}\n        aria-labelledby=${!hideLabel ? labelId : undefined}\n        class=${treeClasses}\n        role=\"tree\">\n        <slot><slot>\n      </ul>\n    `;\n  }\n\n  static get selectorTreeNode() {\n    return `${prefix}-tree-node`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSTreeView;\n"],"names":["customElement"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;;;;AAOG;;AAcH;;;;AAIG;AAEH,IAAM,WAAW,mBAAjB,MAAM,WAAY,SAAQ,iBAAiB,CAAC,UAAU,CAAC,CAAA;AAAvD,IAAA,WAAA,GAAA;;AACE;;AAEG;QAEH,IAAS,CAAA,SAAA,GAAG,KAAK;AAQjB;;AAEG;AAEH,QAAA,IAAA,CAAA,IAAI,GAAG,SAAS,CAAC,KAAK;AAId,QAAA,IAAA,CAAA,MAAM,GAAG,CAAC,EAAE,MAAM,EAAE,KAAI;YAC9B,IAAK,MAAsB,CAAC,QAAQ;gBAAE;YAEtC,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAW,CAAC,gBAAgB,CAAC;AACjE,YAAA,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;;AACrB,gBAAA,MAAM,QAAQ,GAAG,IAAI,KAAK,MAAM;gBAChC,MAAM,MAAM,GAAI,IAAoB,CAAC,YAAY,CAAC,MAAM,CAAC;AACzD,gBAAA,MAAM,OAAO,GAAG,MAAM,GAAG,MAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAA,aAAa,CAAC,GAAG,CAAC,GAAG,IAAI;AAClE,gBAAA,IAAoB,CAAC,QAAQ,GAAG,QAAQ;AACxC,gBAAA,IAAoB,CAAC,MAAM,GAAG,QAAQ;gBACvC,IAAI,CAAC,QAAQ,EAAE;oBACb;0BACK,OAAuB,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI;AACxD,0BAAG,OAAuB,CAAC,eAAe,CAAC,UAAU,CAAC;;;AAClD,oBAAA,OAAuB,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC;AAC/D,aAAC,CAAC;AACJ,SAAC;AAIO,QAAA,IAAA,CAAA,cAAc,GAAG,CAAC,KAAoB,KAAI;AAChD,YAAA,MAAM,EAAE,GAAG,EAAE,GAAG,KAAK;AACrB,YAAA,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CACtB,IAAI,CAAC,gBAAgB,CAAC,aAAW,CAAC,gBAAgB,CAAC,CACpD,CAAC,MAAM,CACN,CAAC,IAAI,KAAK,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CACnE;AAED,YAAA,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CACzB,IAAI,CAAC,gBAAgB,CAAC,aAAW,CAAC,gBAAgB,CAAC,CACpD,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;YAElD,MAAM,SAAS,GAAI,KAAK,CAAC,CAAC,CAAiB,CAAC,IAAI;YAEhD,MAAM,YAAY,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,KAAI;;AAC5C,gBAAA,OAAA;AACE,sBAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAA,aAAa,CAAC,GAAG,EAAG,YAAY,CAAC,UAAU,CAAC,MAAK;sBAClE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,GAAG;AAAA,aAAA,CAC1C;YAED,IAAI,SAAS,GAAG,YAAY;YAE5B,QAAQ,GAAG;AACT,gBAAA,KAAK,WAAW;AACd,oBAAA,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;oBACxD;AACF,gBAAA,KAAK,SAAS;oBACZ,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,EAAE,CAAC,CAAC;oBACzC;AACF,gBAAA,KAAK,MAAM;oBACT,SAAS,GAAG,CAAC;oBACb;AACF,gBAAA,KAAK,KAAK;AACR,oBAAA,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;oBAC5B;AACF,gBAAA,KAAK,OAAO;AACZ,gBAAA,KAAK,GAAG;oBACN,KAAK,CAAC,cAAc,EAAE;AACtB,oBAAA,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;AACvB,wBAAA,IAAoB,CAAC,QAAQ,GAAG,KAAK;AACrC,wBAAA,IAAoB,CAAC,MAAM,GAAG,KAAK;AACtC,qBAAC,CAAC;AACD,oBAAA,KAAK,CAAC,YAAY,CAAiB,CAAC,QAAQ,GAAG,IAAI;AACnD,oBAAA,KAAK,CAAC,YAAY,CAAiB,CAAC,MAAM,GAAG,IAAI;oBAClD;AACF,gBAAA,KAAK,YAAY;oBACf,IAAK,KAAK,CAAC,YAAY,CAAiB,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE;AAC9D,wBAAA,KAAK,CAAC,YAAY,CAAiB,CAAC,UAAU,GAAG,IAAI;wBACtD,KAAK,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC;;oBAE3D;AACF,gBAAA,KAAK,WAAW;oBACd,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE;wBAC/C,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAC1B,CAAC,IAAI,KAAK,IAAI,KAAK,KAAK,CAAC,YAAY,CAAC,CAAC,aAAa,CACrD;AACD,wBAAA,SAAS,GAAG,IAAI,KAAK,EAAE,GAAG,YAAY,GAAG,IAAI;;yBACxC;AACJ,wBAAA,KAAK,CAAC,YAAY,CAAiB,CAAC,UAAU,GAAG,KAAK;wBACvD,KAAK,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC;;oBAE5D;;AAGJ,YAAA,IAAI,SAAS,KAAK,YAAY,EAAE;AAC9B,gBAAA,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;;oBACrB,IAAI,CAAC,SAAS,EAAE;AACd,wBAAA,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;;yBAC3B;AACL,wBAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAE,aAAa,CAAC,GAAG,CAAG,CAAA,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;;AAEvE,iBAAC,CAAC;gBACF,MAAM,OAAO,GAAG;sBACX,KAAK,CAAC,SAAS,CAAiB,CAAC,UAAW,CAAC,aAAa,CAAC,GAAG;AACjE,sBAAE,KAAK,CAAC,SAAS,CAAC;AACnB,gBAAA,OAAuB,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC;gBACrD,OAAuB,CAAC,KAAK,EAAE;gBAChC,KAAK,CAAC,cAAc,EAAE;;AAE1B,SAAC;;AAEO,IAAA,MAAM,gBAAgB,GAAA;QAC5B,MAAM,IAAI,CAAC,cAAc;QAEzB,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAW,CAAC,gBAAgB,CAAC;AACjE,QAAA,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AACpB,YAAA,MAAM,YAAY,GAChB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAM,IAAoB,CAAC,QAAQ,CAAC;gBAChE,KAAK,CAAC,CAAC,CAAC;AACV,YAAA,MAAM,OAAO,GAAI,YAA4B,CAAC;kBACzC,YAA4B,CAAC,UAAW,CAAC,aAAa,CAAC,GAAG;kBAC3D,YAAY;AACf,YAAA,OAAuB,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC;;;IAG1D,iBAAiB,GAAA;QACf,KAAK,CAAC,iBAAiB,EAAE;QAEzB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;AAC9B,YAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC;;QAGnC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;YACpC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC;;;AAI/C,IAAA,OAAO,CAAC,iBAAiB,EAAA;QACvB,IAAI,CAAC,gBAAgB,EAAE;AAEvB,QAAA,IAAI,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YACjC,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAW,CAAC,gBAAgB,CAAC;AACjE,YAAA,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;gBACpB,IAAoB,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;AACvD,aAAC,CAAC;;;IAIN,MAAM,GAAA;QACJ,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI;QACvC,MAAM,OAAO,GAAG,kBAAkB;QAClC,MAAM,WAAW,GAAG,QAAQ,CAAC;AAC3B,YAAA,CAAC,CAAG,EAAA,MAAM,CAAQ,MAAA,CAAA,GAAG,IAAI;AACzB,YAAA,CAAC,GAAG,MAAM,CAAA,QAAA,EAAW,IAAI,CAAE,CAAA,GAAG,IAAI;AACnC,SAAA,CAAC;AACF,QAAA,OAAO,IAAI,CAAA;AAEP,MAAA,EAAA,CAAC;cACG,IAAI,CAAA,CAAA,UAAA,EAAa,OAAO,CAAU,OAAA,EAAA,CAAA,EAAG,MAAM,CAAS,OAAA,CAAA;iBAC/C,KAAK;AACD,oBAAA;AACX,cAAE,IACN;;AAEe,mBAAA,EAAA,SAAS,GAAG,KAAK,GAAG,SAAS;0BACxB,CAAC,SAAS,GAAG,OAAO,GAAG,SAAS;gBAC1C,WAAW;;;;KAItB;;AAGH,IAAA,WAAW,gBAAgB,GAAA;QACzB,OAAO,CAAA,EAAG,MAAM,CAAA,UAAA,CAAY;;;AAGvB,WAAM,CAAA,MAAA,GAAG,MAAH;AAvLb,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE;AAClC,CAAA,EAAA,WAAA,CAAA,SAAA,EAAA,WAAA,EAAA,MAAA,CAAA;AAMlB,UAAA,CAAA;AADC,IAAA,QAAQ;AACM,CAAA,EAAA,WAAA,CAAA,SAAA,EAAA,OAAA,EAAA,MAAA,CAAA;AAMf,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE;AACJ,CAAA,EAAA,WAAA,CAAA,SAAA,EAAA,MAAA,EAAA,MAAA,CAAA;AAIf,UAAA,CAAA;IAFP,YAAY,CAAC,OAAO;;AAkBnB,CAAA,EAAA,WAAA,CAAA,SAAA,EAAA,QAAA,EAAA,MAAA,CAAA;AAIM,UAAA,CAAA;IAFP,YAAY,CAAC,SAAS;;AAiFrB,CAAA,EAAA,WAAA,CAAA,SAAA,EAAA,gBAAA,EAAA,MAAA,CAAA;AAxHE,WAAW,GAAA,aAAA,GAAA,UAAA,CAAA;AADhB,IAAAA,aAAa,CAAC,CAAA,EAAG,MAAM,CAAA,UAAA,CAAY;AAC9B,CAAA,EAAA,WAAW,CA6LhB;AAED,oBAAe,WAAW;;;;"}