{"version":3,"file":"radio-button-group.js","sources":["../../../src/components/radio-button/radio-button-group.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { prefix } from '../../globals/settings';\nimport FormMixin from '../../globals/mixins/form';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport HostListener from '../../globals/decorators/host-listener';\nimport { find, forEach } from '../../globals/internal/collection-helpers';\nimport { RADIO_BUTTON_LABEL_POSITION, RADIO_BUTTON_ORIENTATION } from './defs';\nimport WarningFilled16 from '@carbon/icons/lib/warning--filled/16.js';\nimport WarningAltFilled16 from '@carbon/icons/lib/warning--alt--filled/16.js';\nimport CDSRadioButton from './radio-button';\nimport styles from './radio-button.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { RADIO_BUTTON_ORIENTATION };\n\n/**\n * Radio button group.\n *\n * @element cds-radio-button-group\n * @fires cds-radio-button-group-changed - The custom event fired after this radio button group changes its selected item.\n * @fires cds-radio-button-changed\n *   The name of the custom event fired after a radio button changes its checked state.\n */\n@customElement(`${prefix}-radio-button-group`)\nclass CDSRadioButtonGroup extends FormMixin(HostListenerMixin(LitElement)) {\n  /**\n   * Handles user-initiated change in selected radio button.\n   */\n  @HostListener('eventChangeRadioButton')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleAfterChangeRadioButton = () => {\n    const { selectorRadioButton } = this\n      .constructor as typeof CDSRadioButtonGroup;\n    const selected = find(\n      this.querySelectorAll(selectorRadioButton),\n      (elem) => (elem as CDSRadioButton).checked\n    );\n    const oldValue = this.value;\n    this.value = selected && selected.value;\n    if (oldValue !== this.value) {\n      const { eventChange } = this.constructor as typeof CDSRadioButtonGroup;\n      this.dispatchEvent(\n        new CustomEvent(eventChange, {\n          bubbles: true,\n          composed: true,\n          detail: {\n            value: this.value,\n          },\n        })\n      );\n    }\n  };\n\n  _handleFormdata(event: FormDataEvent) {\n    const { formData } = event;\n    const { disabled, name, value } = this;\n    if (\n      !disabled &&\n      typeof name !== 'undefined' &&\n      typeof value !== 'undefined'\n    ) {\n      formData.append(name, value);\n    }\n  }\n\n  /**\n   * Handles `slotchange` event.\n   */\n  protected _handleSlotChange({ target }: Event) {\n    const hasContent = (target as HTMLSlotElement)\n      .assignedNodes()\n      .filter((elem) =>\n        (elem as HTMLElement).matches !== undefined\n          ? (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSRadioButtonGroup).aiLabelItem\n            ) ||\n            // remove reference to slug in v12\n            (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSRadioButtonGroup).slugItem\n            )\n          : false\n      );\n\n    this._hasAILabel = Boolean(hasContent);\n    (hasContent[0] as HTMLElement).setAttribute('size', 'mini');\n    this.requestUpdate();\n  }\n\n  /**\n   * `true` if there is an AI Label.\n   */\n  protected _hasAILabel = false;\n\n  /**\n   * The `value` attribute for the `<input>` for selection.\n   */\n  @property()\n  defaultSelected!: string;\n\n  /**\n   * `true` if the radio button group should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * The label position.\n   */\n  @property({ reflect: true, attribute: 'label-position' })\n  labelPosition = RADIO_BUTTON_LABEL_POSITION.RIGHT;\n\n  /**\n   * The label position.\n   */\n  @property({ reflect: true, attribute: 'legend-text' })\n  legendText = '';\n\n  /**\n   * The helper text.\n   */\n  @property({ attribute: 'helper-text' })\n  helperText;\n\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  @property({ type: Boolean, reflect: true })\n  warn = false;\n\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  @property({ attribute: 'warn-text' })\n  warnText = '';\n\n  /**\n   * Specify if the currently value is invalid.\n   */\n  @property({ type: Boolean, reflect: true })\n  invalid = false;\n\n  /**\n   * Message which is displayed if the value is invalid.\n   */\n  @property({ attribute: 'invalid-text' })\n  invalidText = '';\n\n  /**\n   * The `name` attribute for the `<input>` for selection.\n   */\n  @property()\n  name!: string;\n\n  /**\n   * The orientation to lay out radio buttons.\n   */\n  @property({ reflect: true })\n  orientation = RADIO_BUTTON_ORIENTATION.HORIZONTAL;\n\n  /**\n   * Controls the readonly state of the radio button group.\n   */\n  @property({ type: Boolean, reflect: true })\n  readOnly = false;\n\n  /**\n   * The `value` attribute for the `<input>` for selection.\n   */\n  @property()\n  value!: string;\n\n  updated(changedProperties) {\n    const { selectorRadioButton } = this\n      .constructor as typeof CDSRadioButtonGroup;\n    ['disabled', 'labelPosition', 'orientation', 'readOnly', 'name'].forEach(\n      (name) => {\n        if (changedProperties.has(name)) {\n          const { [name as keyof CDSRadioButtonGroup]: value } = this;\n          // Propagate the property to descendants until `:host-context()` gets supported in all major browsers\n          forEach(this.querySelectorAll(selectorRadioButton), (elem) => {\n            (elem as CDSRadioButton)[name] = value;\n          });\n        }\n      }\n    );\n    if (changedProperties.has('value')) {\n      const { value } = this;\n      forEach(this.querySelectorAll(selectorRadioButton), (elem) => {\n        (elem as CDSRadioButton).checked =\n          value === (elem as CDSRadioButton).value;\n      });\n    }\n    if (changedProperties.has('invalid')) {\n      forEach(this.querySelectorAll(selectorRadioButton), (elem) => {\n        (elem as CDSRadioButton).invalid = this.invalid;\n      });\n    }\n  }\n\n  render() {\n    const {\n      readOnly,\n      invalid,\n      invalidText,\n      warn,\n      warnText,\n      disabled,\n      orientation,\n      legendText,\n      helperText,\n      _hasAILabel: hasAILabel,\n      _handleSlotChange: handleSlotChange,\n    } = this;\n\n    const showWarning = !readOnly && !invalid && warn;\n    const showHelper = !invalid && !disabled && !warn;\n\n    const invalidIcon = WarningFilled16({\n      class: `${prefix}--radio-button__invalid-icon`,\n    });\n\n    const warnIcon = WarningAltFilled16({\n      class: `${prefix}--radio-button__invalid-icon ${prefix}--radio-button__invalid-icon--warning`,\n    });\n\n    const helper = helperText\n      ? html`<div class=\"${prefix}--form__helper-text\">${helperText}</div>`\n      : null;\n\n    const fieldsetClasses = classMap({\n      [`${prefix}--radio-button-group`]: true,\n      [`${prefix}--radio-button-group--readonly`]: readOnly,\n      [`${prefix}--radio-button-group--${orientation}`]:\n        orientation === 'vertical',\n      [`${prefix}--radio-button-group--slug`]: hasAILabel,\n    });\n\n    return html` <fieldset\n        class=\"${fieldsetClasses}\"\n        ?disabled=\"${disabled}\"\n        aria-readonly=\"${readOnly}\">\n        ${legendText\n          ? html` <legend class=\"${prefix}--label\">\n              ${legendText}\n              <slot name=\"ai-label\" @slotchange=\"${handleSlotChange}\"></slot>\n              <slot name=\"slug\" @slotchange=\"${handleSlotChange}\"></slot>\n            </legend>`\n          : ``}\n        <slot></slot>\n      </fieldset>\n      <div class=\"${prefix}--radio-button__validation-msg\">\n        ${!readOnly && invalid\n          ? html`\n              ${invalidIcon}\n              <div class=\"${prefix}--form-requirement\">${invalidText}</div>\n            `\n          : null}\n        ${showWarning\n          ? html`${warnIcon}\n              <div class=\"${prefix}--form-requirement\">${warnText}</div>`\n          : null}\n      </div>\n      ${showHelper ? helper : null}`;\n  }\n\n  /**\n   * A selector that will return the radio buttons.\n   */\n  static get selectorRadioButton() {\n    return `${prefix}-radio-button`;\n  }\n\n  /**\n   * A selector that will return the slug item.\n   *\n   * remove in v12\n   */\n  static get slugItem() {\n    return `${prefix}-slug`;\n  }\n\n  /**\n   * A selector that will return the AI Label item.\n   */\n  static get aiLabelItem() {\n    return `${prefix}-ai-label`;\n  }\n\n  /**\n   * The name of the custom event fired after this radio button group changes its selected item.\n   */\n  static get eventChange() {\n    return `${prefix}-radio-button-group-changed`;\n  }\n\n  /**\n   * The name of the custom event fired after a radio button changes its checked state.\n   */\n  static get eventChangeRadioButton() {\n    return `${prefix}-radio-button-changed`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSRadioButtonGroup;\n"],"names":["customElement"],"mappings":"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"}