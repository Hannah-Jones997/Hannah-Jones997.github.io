{"version":3,"file":"operational-tag.js","sources":["../../../src/components/tag/operational-tag.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport HostListener from '../../globals/decorators/host-listener';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport { TAG_SIZE, TAG_TYPE } from './defs';\nimport './tag';\nimport '../tooltip/index';\nimport styles from './tag.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { TAG_SIZE, TAG_TYPE };\n\n/**\n * Operational tag.\n *\n * @element cds-operational-tag\n *\n * @fires cds-operational-tag-beforeselected - The custom event fired as the element is being selected\n * @fires cds-operational-tag-selected - The custom event fired after the element has been selected\n */\n@customElement(`${prefix}-operational-tag`)\nclass CDSOperationalTag extends HostListenerMixin(FocusMixin(LitElement)) {\n  /**\n   * Custom events to be triggered\n   *\n   * @param event Event object\n   */\n  protected triggerEvents = (event) => {\n    if (this.disabled) {\n      event.stopPropagation();\n    } else {\n      const init = {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: {\n          triggeredBy: event.target,\n        },\n      };\n      if (\n        this.dispatchEvent(\n          new CustomEvent(\n            (this.constructor as typeof CDSOperationalTag).eventBeforeSelected,\n            init\n          )\n        )\n      ) {\n        this.selected = !this.selected;\n        this.dispatchEvent(\n          new CustomEvent(\n            (this.constructor as typeof CDSOperationalTag).eventSelected,\n            init\n          )\n        );\n      }\n    }\n  };\n\n  /**\n   * Handles `click` event on this element.\n   *\n   * @param event The event.\n   */\n  @HostListener('shadowRoot:click')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleClick = (event: MouseEvent) => {\n    this.triggerEvents(event);\n  };\n\n  @HostListener('shadowRoot:keydown')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      this.triggerEvents(event);\n    }\n  };\n\n  /**\n   * `true` if the tag should be disabled\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * Specify the state of the selectable tag.\n   */\n  @property({ type: Boolean, reflect: true })\n  selected = false;\n\n  /**\n   * The size of the tag.\n   */\n  @property({ type: String, reflect: true })\n  size = TAG_SIZE.MEDIUM;\n\n  /**\n   * Provide text to be rendered inside of a the tag.\n   */\n  @property({ type: String, reflect: true })\n  text = '';\n\n  /**\n   * The type of the tag.\n   */\n  @property({ reflect: true })\n  type = TAG_TYPE.GRAY;\n\n  /**\n   * true if the tag text has ellipsis applied\n   */\n  @state()\n  _hasEllipsisApplied = false;\n\n  async updated() {\n    await this.updateComplete;\n\n    const textContainer = this.shadowRoot\n      ?.querySelector(`${prefix}-tag`)\n      ?.shadowRoot?.querySelector(`.${prefix}--tag__label`);\n    if (!textContainer) return;\n\n    const hasEllipsis = textContainer.scrollWidth > textContainer.clientWidth;\n\n    this._hasEllipsisApplied = hasEllipsis;\n  }\n\n  render() {\n    const {\n      disabled,\n      selected,\n      size,\n      text,\n      type,\n      _hasEllipsisApplied: hasEllipsisApplied,\n    } = this;\n\n    return html` ${hasEllipsisApplied\n      ? html` <cds-tooltip\n          align=\"bottom\"\n          keyboard-only\n          closeOnActivation\n          leave-delay-ms=${0}>\n          <cds-tag\n            ?aria-pressed=\"${selected}\"\n            size=\"${size}\"\n            ?disabled=\"${disabled}\"\n            type=\"${type}\">\n            <slot name=\"icon\" slot=\"icon\"></slot>\n            ${text}\n            <slot name=\"decorator\" slot=\"decorator\"></slot>\n            <slot name=\"ai-label\" slot=\"ai-label\"></slot>\n            <slot name=\"slug\" slot=\"slug\"></slot>\n          </cds-tag>\n          <cds-tooltip-content id=\"content\"> ${text} </cds-tooltip-content>\n        </cds-tooltip>`\n      : html`\n          <cds-tag\n            ?aria-pressed=\"${selected}\"\n            size=\"${size}\"\n            ?disabled=\"${disabled}\"\n            type=\"${type}\">\n            <slot name=\"icon\" slot=\"icon\"></slot>\n            ${text}\n            <slot name=\"decorator\" slot=\"decorator\"></slot>\n            <slot name=\"ai-label\" slot=\"ai-label\"></slot>\n            <slot name=\"slug\" slot=\"slug\"></slot>\n          </cds-tag>\n        `}`;\n  }\n\n  /**\n   * The name of the custom event before this tag is selected.\n   */\n  static get eventBeforeSelected() {\n    return `${prefix}-operational-tag-beingselected`;\n  }\n\n  /**\n   * The name of the custom event fired after this tag is selected.\n   */\n  static get eventSelected() {\n    return `${prefix}-operational-tag-selected`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSOperationalTag;\n"],"names":["customElement"],"mappings":"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"}