{"version":3,"file":"radio-tile.js","sources":["../../../src/components/tile/radio-tile.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, svg } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { prefix } from '../../globals/settings';\nimport SelectableTile from './selectable-tile';\nimport CheckmarkFilled16 from '@carbon/icons/lib/checkmark--filled/16.js';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Radio tile.\n *\n * @element cds-radio-tile\n * @fires cds-radio-tile-selected\n *   The name of the custom event fired after this radio tile changes its selected state.\n */\n@customElement(`${prefix}-radio-tile`)\nclass CDSRadioTile extends SelectableTile {\n  /**\n   * Handles `change` event on the `<input>` in the shadow DOM.\n   */\n  protected _handleChange() {\n    this.selected = true;\n    const { selected, name } = this;\n    const { eventRadioChange } = this.constructor as typeof CDSRadioTile;\n    this.dispatchEvent(\n      new CustomEvent(eventRadioChange, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          selected,\n          name,\n        },\n      })\n    );\n  }\n\n  protected _handleKeydown = (event: KeyboardEvent) => {\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n    }\n  };\n\n  render() {\n    const {\n      colorScheme,\n      checkmarkLabel,\n      disabled,\n      hasRoundedCorners,\n      name,\n      selected,\n      value,\n      _handleChange: handleChange,\n      _handleKeydown: handleKeydown,\n      _hasAILabel: hasAILabel,\n    } = this;\n    const classes = classMap({\n      [`${prefix}--tile`]: true,\n      [`${prefix}--tile--selectable`]: true,\n      [`${prefix}--tile--radio`]: true,\n      [`${prefix}--tile--disabled`]: disabled,\n      [`${prefix}--tile--is-selected`]: selected,\n      [`${prefix}--tile--${colorScheme}`]: colorScheme,\n      [`${prefix}--tile--slug-rounded`]: hasAILabel && hasRoundedCorners,\n    });\n\n    return html`\n      <input\n        type=\"radio\"\n        id=\"input\"\n        class=\"${prefix}--tile-input\"\n        ?disabled=\"${disabled}\"\n        tabindex=\"${selected ? 0 : -1}\"\n        name=\"${ifDefined(name)}\"\n        value=\"${ifDefined(value)}\"\n        .checked=${selected}\n        @change=${!disabled ? handleChange : undefined}\n        @keydown=\"${!disabled ? handleKeydown : undefined}\" />\n      <label part=\"label\" for=\"input\" class=\"${classes}\">\n        ${CheckmarkFilled16({\n          children: !checkmarkLabel\n            ? undefined\n            : svg`<title>${checkmarkLabel}</title>`,\n          class: `${prefix}--tile__checkmark`,\n        })}\n        <div class=\"${prefix}--tile-content\"><slot></slot></div>\n      </label>\n      <slot name=\"decorator\"></slot>\n      <slot name=\"ai-label\" @slotchange=\"${this._handleSlotChange}\"></slot>\n    `;\n  }\n\n  /**\n   * The name of the custom event fired after this selectable tile changes its selected state.\n   */\n  static get eventRadioChange() {\n    return `${prefix}-radio-tile-selected`;\n  }\n}\n\nexport default CDSRadioTile;\n"],"names":["customElement"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;AAKG;AAUH;;;;;;AAMG;AAEH,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,cAAc,CAAA;AAAzC,IAAA,WAAA,GAAA;;AAoBY,QAAA,IAAA,CAAA,cAAc,GAAG,CAAC,KAAoB,KAAI;AAClD,YAAA,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE;gBAC9C,KAAK,CAAC,cAAc,EAAE;;AAE1B,SAAC;;AAvBD;;AAEG;IACO,aAAa,GAAA;AACrB,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI;AACpB,QAAA,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI;AAC/B,QAAA,MAAM,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,WAAkC;AACpE,QAAA,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,gBAAgB,EAAE;AAChC,YAAA,OAAO,EAAE,IAAI;AACb,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,MAAM,EAAE;gBACN,QAAQ;gBACR,IAAI;AACL,aAAA;AACF,SAAA,CAAC,CACH;;IASH,MAAM,GAAA;AACJ,QAAA,MAAM,EACJ,WAAW,EACX,cAAc,EACd,QAAQ,EACR,iBAAiB,EACjB,IAAI,EACJ,QAAQ,EACR,KAAK,EACL,aAAa,EAAE,YAAY,EAC3B,cAAc,EAAE,aAAa,EAC7B,WAAW,EAAE,UAAU,GACxB,GAAG,IAAI;QACR,MAAM,OAAO,GAAG,QAAQ,CAAC;AACvB,YAAA,CAAC,CAAG,EAAA,MAAM,CAAQ,MAAA,CAAA,GAAG,IAAI;AACzB,YAAA,CAAC,CAAG,EAAA,MAAM,CAAoB,kBAAA,CAAA,GAAG,IAAI;AACrC,YAAA,CAAC,CAAG,EAAA,MAAM,CAAe,aAAA,CAAA,GAAG,IAAI;AAChC,YAAA,CAAC,CAAG,EAAA,MAAM,CAAkB,gBAAA,CAAA,GAAG,QAAQ;AACvC,YAAA,CAAC,CAAG,EAAA,MAAM,CAAqB,mBAAA,CAAA,GAAG,QAAQ;AAC1C,YAAA,CAAC,GAAG,MAAM,CAAA,QAAA,EAAW,WAAW,CAAE,CAAA,GAAG,WAAW;AAChD,YAAA,CAAC,GAAG,MAAM,CAAA,oBAAA,CAAsB,GAAG,UAAU,IAAI,iBAAiB;AACnE,SAAA,CAAC;AAEF,QAAA,OAAO,IAAI,CAAA;;;;iBAIE,MAAM,CAAA;qBACF,QAAQ,CAAA;oBACT,QAAQ,GAAG,CAAC,GAAG,EAAE,CAAA;gBACrB,SAAS,CAAC,IAAI,CAAC,CAAA;iBACd,SAAS,CAAC,KAAK,CAAC,CAAA;mBACd,QAAQ;kBACT,CAAC,QAAQ,GAAG,YAAY,GAAG,SAAS;oBAClC,CAAC,QAAQ,GAAG,aAAa,GAAG,SAAS,CAAA;+CACV,OAAO,CAAA;AAC5C,QAAA,EAAA,iBAAiB,CAAC;YAClB,QAAQ,EAAE,CAAC;AACT,kBAAE;AACF,kBAAE,GAAG,CAAA,CAAA,OAAA,EAAU,cAAc,CAAU,QAAA,CAAA;YACzC,KAAK,EAAE,CAAG,EAAA,MAAM,CAAmB,iBAAA,CAAA;SACpC,CAAC;sBACY,MAAM,CAAA;;;AAGe,yCAAA,EAAA,IAAI,CAAC,iBAAiB,CAAA;KAC5D;;AAGH;;AAEG;AACH,IAAA,WAAW,gBAAgB,GAAA;QACzB,OAAO,CAAA,EAAG,MAAM,CAAA,oBAAA,CAAsB;;CAEzC;AAjFK,YAAY,GAAA,UAAA,CAAA;AADjB,IAAAA,aAAa,CAAC,CAAA,EAAG,MAAM,CAAA,WAAA,CAAa;AAC/B,CAAA,EAAA,YAAY,CAiFjB;AAED,qBAAe,YAAY;;;;"}