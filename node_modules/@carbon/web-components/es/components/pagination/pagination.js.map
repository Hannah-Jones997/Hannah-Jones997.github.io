{"version":3,"file":"pagination.js","sources":["../../../src/components/pagination/pagination.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport CaretLeft16 from '@carbon/icons/lib/caret--left/16.js';\nimport CaretRight16 from '@carbon/icons/lib/caret--right/16.js';\nimport { prefix } from '../../globals/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport HostListener from '../../globals/decorators/host-listener';\nimport styles from './pagination.scss?lit';\nimport { PAGINATION_SIZE } from './defs';\nimport CDSSelect from '../select/select';\nimport '../button/index';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Pagination UI.\n *\n * @element cds-pagination\n * @slot page-sizes-select - Where to put in the `<page-sizes-select>`.\n * @fires cds-pagination-changed-current - The custom event fired after the current page is changed from `<cds-pages-select>`.\n * @fires cds-page-sizes-select-changed - The custom event fired after the number of rows per page is changed from `<cds-page-sizes-select>`.\n */\n@customElement(`${prefix}-pagination`)\nclass CDSPagination extends FocusMixin(HostListenerMixin(LitElement)) {\n  @query(`${prefix}-select`)\n  private _pageSizeSelect!: HTMLElement;\n\n  private _handleSlotChange({ target }: Event) {\n    const content = (target as HTMLSlotElement)\n      .assignedNodes()\n      .filter(\n        (node) => node.nodeType !== Node.TEXT_NODE || node!.textContent!.trim()\n      );\n\n    content.forEach((item) => {\n      this._pageSizeSelect.appendChild(item);\n    });\n  }\n\n  /**\n   * @returns Page status text.\n   */\n  private _renderStatusText() {\n    const {\n      start,\n      pageSize,\n      totalItems,\n      pagesUnknown,\n      formatStatusWithDeterminateTotal,\n      formatStatusWithIndeterminateTotal,\n    } = this;\n    // * Regular: `1-10 of 100 items`\n    // * Indeterminate total: `Item 1-10` (`Item 11-` at the last page)\n    const end = Math.min(\n      start + pageSize,\n      totalItems == null ? Infinity : totalItems\n    );\n    const format =\n      totalItems == null || pagesUnknown\n        ? formatStatusWithIndeterminateTotal\n        : formatStatusWithDeterminateTotal;\n\n    // `start`/`end` properties starts with zero, whereas we want to show number starting with 1\n    return format({ start: start + 1, end, count: totalItems });\n  }\n\n  /**\n   * Handles user-initiated change in the row number the current page starts with.\n   *\n   * @param start The new current row number, index that starts with zero.\n   */\n  private _handleUserInitiatedChangeStart(start: number) {\n    this.start = start;\n    this.dispatchEvent(\n      new CustomEvent(\n        (this.constructor as typeof CDSPagination).eventChangeCurrent,\n        {\n          bubbles: true,\n          composed: true,\n          detail: {\n            page: this.page,\n            pageSize: this.pageSize,\n          },\n        }\n      )\n    );\n  }\n\n  /**\n   * Handles user-initiated change in the size of the page.\n   */\n  private _handleUserInitiatedPageSizeChange() {\n    this.dispatchEvent(\n      new CustomEvent(\n        (this.constructor as typeof CDSPagination).eventPageSizeChanged,\n        {\n          bubbles: true,\n          composed: true,\n          detail: {\n            page: this.page,\n            pageSize: this.pageSize,\n          },\n        }\n      )\n    );\n  }\n\n  /**\n   * Handles `click` event on the previous button.\n   */\n  private _handleClickPrevButton() {\n    const { start: oldStart, pageSize } = this;\n    this.page--;\n    const newStart = Math.max(oldStart - pageSize, 0);\n    if (newStart !== oldStart) {\n      this._handleUserInitiatedChangeStart(newStart);\n    }\n    // reset focus to forward button if it reaches the beginning\n    if (this.page === 1) {\n      const { selectorForwardButton } = this\n        .constructor as typeof CDSPagination;\n      (\n        this.shadowRoot?.querySelector(\n          `[button-class-name*=${selectorForwardButton}]`\n        ) as HTMLElement\n      ).focus();\n    }\n  }\n\n  /**\n   * Handles `click` event on the next button.\n   */\n  private _handleClickNextButton() {\n    const { start: oldStart, pageSize, totalItems } = this;\n    this.page++;\n    const newStart = oldStart + pageSize;\n    if (newStart < (totalItems == null ? Infinity : totalItems)) {\n      this._handleUserInitiatedChangeStart(newStart);\n    }\n    // reset focus to previous button if it reaches the end\n    if (this.page === this.totalPages) {\n      const { selectorPreviousButton } = this\n        .constructor as typeof CDSPagination;\n      (\n        this.shadowRoot?.querySelector(\n          `[button-class-name*=${selectorPreviousButton}]`\n        ) as HTMLElement\n      ).focus();\n    }\n  }\n\n  /**\n   * Handles user-initiated change in number of rows per page.\n   *\n   * @param event The event.\n   */\n  @HostListener(`${prefix}-select-selected`)\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleChangeSelector(event) {\n    const { value } = event.detail;\n    const { totalItems, pageSize } = this;\n\n    if (event.composedPath()[0] === this._pageSizeSelect) {\n      this.pageSize = parseInt(value);\n      // Default pageSize to effectively be 1 when we have a value of 0 to avoid\n      // division by 0.\n      this.totalPages =\n        pageSize > 0 ? Math.ceil(totalItems / pageSize) : totalItems;\n      this.page = 1;\n      this.start = 0;\n      this._handleUserInitiatedPageSizeChange();\n    } else {\n      this.page = value;\n      this._handleUserInitiatedChangeStart((value - 1) * pageSize);\n    }\n  }\n\n  /**\n   * The assistive text for the button to go to previous page.\n   */\n  @property({ attribute: 'backward-text' })\n  backwardText = 'Previous page';\n\n  /**\n   * The current page\n   */\n  @property({ type: Number, reflect: true })\n  page = 1;\n\n  /**\n   * The formatter for the assistive text for screen readers to announce.\n   * Should be changed upon the locale the UI is rendered with.\n   */\n  @property({ attribute: false })\n  formatLabelText = ({ count }) =>\n    `Page number, of ${count} page${count <= 1 ? '' : 's'}`;\n\n  /**\n   * The formatter, used with determinate the total pages. Should be changed upon the locale the UI is rendered with.\n   */\n  @property({ attribute: false })\n  formatStatusWithDeterminateTotal = ({ start, end, count }) =>\n    `${start}–${end} of ${count} item${count <= 1 ? '' : 's'}`;\n\n  /**\n   * The formatter, used with indeterminate the total pages. Should be changed upon the locale the UI is rendered with.\n   */\n  @property({ attribute: false })\n  formatStatusWithIndeterminateTotal = ({ start, end, count }) =>\n    end == null\n      ? `Item ${start}–`\n      : `${start}–${end} item${count <= 1 ? '' : 's'}`;\n\n  /**\n   * The formatter for the text next to the select box. Should be changed upon the locale the UI is rendered with.\n   */\n  @property({ attribute: false })\n  formatSupplementalText = ({ count }) =>\n    this.pagesUnknown || !this.totalItems\n      ? `page`\n      : `of ${count} page${count <= 1 ? '' : 's'}`;\n  /**\n   * `true` to explicitly state that user is at the last page.\n   */\n  @property({ type: Boolean, attribute: 'is-last-page' })\n  isLastPage!: boolean;\n\n  /**\n   * The translatable text indicating the number of items per page.\n   */\n  @property({ attribute: 'items-per-page-text' })\n  itemsPerPageText = 'Items per page:';\n\n  /**\n   * `true` if the pagination UI should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * The assistive text for the button to go to next page.\n   */\n  @property({ attribute: 'forward-text' })\n  forwardText = 'Next page';\n\n  /**\n   * true if the select box to change the page should be disabled.\n   */\n  @property({ type: Boolean, attribute: 'page-input-disabled' })\n  pageInputDisabled = false;\n\n  /**\n   * Number of items per page.\n   */\n  @property({ type: Number, attribute: 'page-size', reflect: true })\n  pageSize = 10;\n\n  /**\n   * true if the select box to change the items per page should be disabled.\n   */\n  @property({ type: Boolean, attribute: 'page-size-input-disabled' })\n  pageSizeInputDisabled;\n\n  /**\n   * The label text for the UI to select page size.\n   */\n  @property({ attribute: 'page-size-label-text' })\n  pageSizeLabelText!: string;\n\n  /**\n   * true if the total number of items is unknown.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'pages-unknown' })\n  pagesUnknown = false;\n\n  /**\n   * Specify the size of the Pagination.\n   */\n  @property({ reflect: true })\n  size = PAGINATION_SIZE.MEDIUM;\n\n  /**\n   * The row number where current page start with, index that starts with zero.\n   */\n  @property({ type: Number })\n  start = 0;\n\n  /**\n   * The number of total items.\n   */\n  @property({ type: Number, attribute: 'total-items' })\n  totalItems!: number;\n\n  /**\n   * The number of total pages.\n   */\n  @property({ type: Number })\n  totalPages = 1;\n\n  updated(changedProperties) {\n    const { page, pageSize, totalItems } = this;\n    const { selectorPageSizesSelect, selectorPagesSelect } = this\n      .constructor as typeof CDSPagination;\n\n    if (changedProperties.has('pageSize')) {\n      (this.shadowRoot!.querySelector(selectorPageSizesSelect) as any).value =\n        pageSize;\n    }\n    if (changedProperties.has('pageSize') || changedProperties.has('start')) {\n      // Default pageSize to effectively be 1 when we have a value of 0 to avoid\n      // division by 0.\n      this.totalPages =\n        pageSize > 0 ? Math.ceil(totalItems / pageSize) : totalItems;\n      (this.shadowRoot!.querySelector(selectorPagesSelect) as CDSSelect).value =\n        this.page.toString();\n    }\n\n    if (changedProperties.has('page')) {\n      this._handleUserInitiatedChangeStart((page - 1) * pageSize);\n    }\n  }\n\n  render() {\n    const {\n      page,\n      disabled,\n      forwardText,\n      backwardText,\n      itemsPerPageText,\n      pageInputDisabled,\n      pageSize,\n      pageSizeInputDisabled,\n      pagesUnknown,\n      size,\n      start,\n      totalItems,\n      totalPages,\n      _handleClickPrevButton: handleClickPrevButton,\n      _handleClickNextButton: handleClickNextButton,\n      _handleSlotChange: handleSlotChange,\n      formatLabelText,\n      formatSupplementalText,\n    } = this;\n\n    const { isLastPage = start + pageSize >= totalItems } = this;\n    const prevButtonDisabled = disabled || start === 0;\n    const nextButtonDisabled = disabled || isLastPage;\n\n    const prevButtonClassMap = {\n      [`${prefix}--btn`]: true,\n      [`${prefix}--btn--icon-only`]: true,\n      [`${prefix}--pagination__button`]: true,\n      [`${prefix}--pagination__button--backward`]: true,\n      [`${prefix}--pagination__button--no-index`]: prevButtonDisabled,\n      [`${prefix}--btn--${size}`]: true,\n      [`${prefix}--btn--ghost`]: true,\n    };\n    const nextButtonClassMap = {\n      [`${prefix}--btn`]: true,\n      [`${prefix}--btn--icon-only`]: true,\n      [`${prefix}--pagination__button`]: true,\n      [`${prefix}--pagination__button--forward`]: true,\n      [`${prefix}--pagination__button--no-index`]: nextButtonDisabled,\n      [`${prefix}--btn--${size}`]: true,\n      [`${prefix}--btn--ghost`]: true,\n    };\n\n    const prevButtonClasses = Object.entries(prevButtonClassMap)\n      .filter(([, value]) => value === true)\n      .map(([key]) => key)\n      .join(' ');\n    const nextButtonClasses = Object.entries(nextButtonClassMap)\n      .filter(([, value]) => value === true)\n      .map(([key]) => key)\n      .join(' ');\n\n    return html`\n      <div class=\"${prefix}--pagination__left\">\n        <label for=\"select\" class=\"${prefix}--pagination__text\"\n          ><slot name=\"label-text\">${itemsPerPageText}</slot></label\n        >\n        <cds-select\n          ?disabled=${disabled || pageSizeInputDisabled}\n          id=\"page-size-select\"\n          left-select\n          pagination\n          size=\"${size}\"\n          inline\n          value=\"${pageSize}\">\n          <slot @slotchange=${handleSlotChange}></slot>\n        </cds-select>\n        <span\n          class=\"${prefix}--pagination__text ${prefix}--pagination__items-count\"\n          >${this._renderStatusText()}</span\n        >\n      </div>\n      <div class=\"${prefix}--pagination__right\">\n        <label for=\"select\" class=\"${prefix}--label ${prefix}--visually-hidden\">\n          ${formatLabelText({ count: totalPages })}\n        </label>\n        ${pagesUnknown || !totalItems\n          ? html`\n              <span\n                class=\"${prefix}--pagination__text ${prefix}--pagination__page-text\"\n                >${formatSupplementalText({ count: totalPages })}</span\n              >\n\n              <cds-select\n                ?disabled=${disabled || pageInputDisabled}\n                id=\"pages-select\"\n                pagination\n                size=\"${size}\"\n                inline\n                value=\"${page}\">\n                ${Array.from(new Array(totalPages)).map(\n                  (_item, index) => html`\n                    <cds-select-item value=\"${index + 1}\">\n                      ${index + 1}\n                    </cds-select-item>\n                  `\n                )}\n              </cds-select>\n            `\n          : html`\n              <cds-select\n                ?disabled=${disabled || pageInputDisabled}\n                id=\"pages-select\"\n                pagination\n                size=\"${size}\"\n                inline\n                value=\"${page}\">\n                ${Array.from(new Array(totalPages)).map(\n                  (_item, index) => html`\n                    <cds-select-item value=\"${index + 1}\">\n                      ${index + 1}\n                    </cds-select-item>\n                  `\n                )}\n              </cds-select>\n              <span class=\"${prefix}--pagination__text\"\n                >${formatSupplementalText({ count: totalPages })}</span\n              >\n            `}\n\n        <div class=\"${prefix}--pagination__control-buttons\">\n          <cds-button\n            pagination\n            size=\"${size}\"\n            ?disabled=\"${prevButtonDisabled}\"\n            button-class-name=\"${prevButtonClasses}\"\n            tooltip-text=\"${backwardText}\"\n            @click=\"${handleClickPrevButton}\">\n            ${CaretLeft16({ slot: 'icon' })}\n          </cds-button>\n          <cds-button\n            tooltip-position=\"top-right\"\n            pagination\n            size=\"${size}\"\n            ?disabled=\"${nextButtonDisabled}\"\n            button-class-name=\"${nextButtonClasses}\"\n            tooltip-text=\"${forwardText}\"\n            @click=\"${handleClickNextButton}\">\n            ${CaretRight16({ slot: 'icon' })}\n          </cds-button>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * A selector that will return the select box for the current page.\n   */\n  static get selectorPagesSelect() {\n    return `${prefix}-select#pages-select`;\n  }\n\n  /**\n   * A selector that will return the select box for page sizes.\n   */\n  static get selectorPageSizesSelect() {\n    return `${prefix}-select`;\n  }\n\n  /**\n   * A selector that will return the previous button.\n   */\n  static get selectorPreviousButton() {\n    return `${prefix}--pagination__button--backward`;\n  }\n\n  /**\n   * A selector that will return the forward button.\n   */\n  static get selectorForwardButton() {\n    return `${prefix}--pagination__button--forward`;\n  }\n\n  /**\n   * The name of the custom event fired after the current row number is changed.\n   */\n  static get eventChangeCurrent() {\n    return `${prefix}-pagination-changed-current`;\n  }\n\n  /**\n   * The name of the custom event fired after the number of rows per page is changed from `<cds-page-sizes-select>`.\n   */\n  static get eventPageSizeChanged() {\n    return `${prefix}-page-sizes-select-changed`;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n  static styles = styles;\n}\n\nexport default CDSPagination;\n"],"names":["customElement"],"mappings":"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"}