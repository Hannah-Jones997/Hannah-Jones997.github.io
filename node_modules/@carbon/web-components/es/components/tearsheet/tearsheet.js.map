{"version":3,"file":"tearsheet.js","sources":["../../../src/components/tearsheet/tearsheet.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2023, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport {\n  property,\n  query,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport HostListener from '../../globals/decorators/host-listener';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport { selectorTabbable } from '../../globals/settings';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\nimport '../button/index';\nimport '../layer/index';\nimport '../button/button-set-base';\nimport '../modal/index';\nimport {\n  TEARSHEET_INFLUENCER_PLACEMENT,\n  TEARSHEET_INFLUENCER_WIDTH,\n  TEARSHEET_WIDTH,\n} from './defs';\n\nexport {\n  TEARSHEET_INFLUENCER_PLACEMENT,\n  TEARSHEET_INFLUENCER_WIDTH,\n  TEARSHEET_WIDTH,\n};\n\nconst maxStackDepth = 3;\ntype StackHandler = (newDepth: number, newPosition: number) => void;\ninterface StackState {\n  open: StackHandler[];\n  all: StackHandler[];\n}\n\n// eslint-disable-next-line no-bitwise\nconst PRECEDING =\n  Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n// eslint-disable-next-line no-bitwise\nconst FOLLOWING =\n  Node.DOCUMENT_POSITION_FOLLOWING | Node.DOCUMENT_POSITION_CONTAINED_BY;\n\nconst blockClass = `${prefix}--tearsheet`;\nconst blockClassModalHeader = `${prefix}--modal-header`;\nconst blockClassActionSet = `${prefix}--action-set`;\n\n/**\n * Tries to focus on the given elements and bails out if one of them is successful.\n *\n * @param elems The elements.\n * @param reverse `true` to go through the list in reverse order.\n * @returns `true` if one of the attempts is successful, `false` otherwise.\n */\nfunction tryFocusElems(elems: NodeListOf<HTMLElement>, reverse: boolean) {\n  if (!reverse) {\n    for (let i = 0; i < elems.length; ++i) {\n      const elem = elems[i];\n      elem.focus();\n      if (elem.ownerDocument!.activeElement === elem) {\n        return true;\n      }\n    }\n  } else {\n    for (let i = elems.length - 1; i >= 0; --i) {\n      const elem = elems[i];\n      elem.focus();\n      if (elem.ownerDocument!.activeElement === elem) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * Tearsheet.\n *\n * @deprecated Use Carbon for IBM Products `tearsheet` component.\n *   This component has been deprecated in `@carbon/web-components` and will instead be maintained\n *   in the Carbon for IBM Products library:\n *   https://github.com/carbon-design-system/ibm-products/tree/main/packages/ibm-products-web-components\n * @element cds-tearsheet\n * @csspart dialog The dialog.\n * @fires cds-tearsheet-beingclosed\n *   The custom event fired before this tearsheet is being closed upon a user gesture.\n *   Cancellation of this event stops the user-initiated action of closing this tearsheet.\n * @fires cds-tearsheet-closed - The custom event fired after this tearsheet is closed upon a user gesture.\n */\n@customElement(`${prefix}-tearsheet`)\nclass CDSTearsheet extends HostListenerMixin(LitElement) {\n  /**\n   * The element that had focus before this tearsheet gets open.\n   */\n  private _launcher: Element | null = null;\n\n  /**\n   * Node to track focus going outside of tearsheet content.\n   */\n  @query('#start-sentinel')\n  private _startSentinelNode!: HTMLAnchorElement;\n\n  /**\n   * Node to track focus going outside of tearsheet content.\n   */\n  @query('#end-sentinel')\n  private _endSentinelNode!: HTMLAnchorElement;\n\n  /**\n   * Node to track tearsheet.\n   */\n  @query(`.${blockClass}__container`)\n  private _tearsheet!: HTMLDivElement;\n\n  @queryAssignedElements({ slot: 'actions', selector: `${prefix}-button` })\n  private _actions!: Array<HTMLElement>;\n\n  @state()\n  _actionsCount = 0;\n\n  @state()\n  _hasHeaderActions = false;\n\n  @state()\n  _hasLabel = false;\n\n  @state()\n  _hasSlug = false;\n\n  @state()\n  _hasTitle = false;\n\n  @state()\n  _hasDescription = false;\n\n  @state()\n  _hasInfluencerLeft = false;\n\n  @state()\n  _hasInfluencerRight = false;\n\n  @state()\n  _isOpen = false;\n\n  @state()\n  _hasHeaderNavigation = false;\n\n  /**\n   * Handles `click` event on this element.\n   *\n   * @param event The event.\n   */\n  @HostListener('click')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleClick = (event: MouseEvent) => {\n    if (\n      event.composedPath().indexOf(this.shadowRoot!) < 0 &&\n      !this.preventCloseOnClickOutside\n    ) {\n      this._handleUserInitiatedClose(event.target);\n    }\n  };\n\n  /**\n   * Handles `blur` event on this element.\n   *\n   * @param event The event.\n   * @param event.target The event target.\n   * @param event.relatedTarget The event relatedTarget.\n   */\n  @HostListener('shadowRoot:focusout')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleBlur = async ({ target, relatedTarget }: FocusEvent) => {\n    if (!this._topOfStack()) {\n      return;\n    }\n\n    const {\n      // condensedActions,\n      open,\n      _startSentinelNode: startSentinelNode,\n      _endSentinelNode: endSentinelNode,\n    } = this;\n\n    const oldContains = target !== this && this.contains(target as Node);\n    const currentContains =\n      relatedTarget !== this &&\n      (this.contains(relatedTarget as Node) ||\n        (this.shadowRoot?.contains(relatedTarget as Node) &&\n          relatedTarget !== (startSentinelNode as Node) &&\n          relatedTarget !== (endSentinelNode as Node)));\n\n    // Performs focus wrapping if _all_ of the following is met:\n    // * This tearsheet is open\n    // * The viewport still has focus\n    // * Tearsheet body used to have focus but no longer has focus\n    const { selectorTabbable: selectorTabbableForTearsheet } = this\n      .constructor as typeof CDSTearsheet;\n\n    if (open && relatedTarget && oldContains && !currentContains) {\n      const comparisonResult = (target as Node).compareDocumentPosition(\n        relatedTarget as Node\n      );\n      // eslint-disable-next-line no-bitwise\n      if (relatedTarget === startSentinelNode || comparisonResult & PRECEDING) {\n        await (this.constructor as typeof CDSTearsheet)._delay();\n        if (\n          !tryFocusElems(\n            this.querySelectorAll(selectorTabbableForTearsheet),\n            true\n          ) &&\n          relatedTarget !== this\n        ) {\n          this.focus();\n        }\n      }\n      // eslint-disable-next-line no-bitwise\n      else if (\n        relatedTarget === endSentinelNode ||\n        comparisonResult & FOLLOWING\n      ) {\n        await (this.constructor as typeof CDSTearsheet)._delay();\n        if (\n          !tryFocusElems(\n            this.querySelectorAll(selectorTabbableForTearsheet),\n            true\n          )\n        ) {\n          this.focus();\n        }\n      }\n    }\n  };\n\n  @HostListener('document:keydown')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleKeydown = ({ key, target }: KeyboardEvent) => {\n    if ((key === 'Esc' || key === 'Escape') && this._topOfStack()) {\n      this._handleUserInitiatedClose(target);\n    }\n  };\n\n  private _checkSetHasSlot(e: Event) {\n    const t = e.target as HTMLSlotElement;\n    const dataPostfix = t.getAttribute('data-postfix');\n    const postfix = dataPostfix ? `-${dataPostfix}` : '';\n\n    // snake `ab-cd-ef` to _has camel case _hasAbCdEf\n    const hasName = `_has-${t.name}${postfix}`.replace(/-./g, (c) =>\n      c[1].toUpperCase()\n    );\n    this[hasName] = (t?.assignedElements()?.length ?? 0) > 0;\n  }\n\n  /**\n   * Handles `click` event on the modal container.\n   *\n   * @param event The event.\n   */\n  private _handleClickContainer(event: MouseEvent) {\n    if (\n      (event.target as Element).matches(\n        (this.constructor as typeof CDSTearsheet).selectorCloseButton\n      )\n    ) {\n      this._handleUserInitiatedClose(event.target);\n    }\n  }\n\n  /**\n   * Handles user-initiated close request of this tearsheet.\n   *\n   * @param triggeredBy The element that triggered this close request.\n   */\n  private _handleUserInitiatedClose(triggeredBy: EventTarget | null) {\n    if (this.open) {\n      const init = {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: {\n          triggeredBy,\n        },\n      };\n      if (\n        this.dispatchEvent(\n          new CustomEvent(\n            (this.constructor as typeof CDSTearsheet).eventBeforeClose,\n            init\n          )\n        )\n      ) {\n        this.open = false;\n        this.dispatchEvent(\n          new CustomEvent(\n            (this.constructor as typeof CDSTearsheet).eventClose,\n            init\n          )\n        );\n      }\n    }\n  }\n\n  private _handleSlugChange(e: Event) {\n    const childItems = (e.target as HTMLSlotElement).assignedElements();\n\n    this._hasSlug = childItems.length > 0;\n    if (this._hasSlug) {\n      childItems[0].setAttribute('size', 'lg');\n      this.setAttribute('slug', '');\n    } else {\n      this.removeAttribute('slug');\n    }\n  }\n\n  /**\n   * Optional aria label for the tearsheet\n   */\n  @property({ reflect: true, attribute: 'aria-label' })\n  ariaLabel = '';\n\n  /**\n   * Sets the close button icon description\n   */\n  @property({ reflect: true, attribute: 'close-icon-description' })\n  closeIconDescription = 'Close';\n\n  /**\n   * Enable a close icon ('x') in the header area of the tearsheet. By default,\n   * (when this prop is omitted, or undefined or null) a tearsheet does not\n   * display a close icon if there are navigation actions (\"transactional\n   * tearsheet\") and displays one if there are no navigation actions (\"passive\n   * tearsheet\"), and that behavior can be overridden if required by setting\n   * this prop to either true or false.\n   */\n\n  @property({ reflect: true, type: Boolean, attribute: 'has-close-icon' })\n  hasCloseIcon = false;\n\n  /**\n   * The placement of the influencer section, 'left' or 'right'.\n   */\n  @property({ reflect: true, attribute: 'influencer-placement' })\n  influencerPlacement = TEARSHEET_INFLUENCER_PLACEMENT.RIGHT;\n\n  /**\n   * The width of the influencer section, 'narrow' or 'wide'.\n   */\n  @property({ reflect: true, attribute: 'influencer-width' })\n  influencerWidth = TEARSHEET_INFLUENCER_WIDTH.NARROW;\n\n  /**\n   * `true` if the tearsheet should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  open = false;\n\n  /**\n   * Prevent closing on click outside of tearsheet\n   */\n  @property({ type: Boolean, attribute: 'prevent-close-on-click-outside' })\n  preventCloseOnClickOutside = false;\n\n  /**\n   * The initial location of focus in the side panel\n   */\n  @property({\n    reflect: true,\n    attribute: 'selector-initial-focus',\n    type: String,\n  })\n  selectorInitialFocus;\n\n  /**\n   * The width of the influencer section, 'narrow' or 'wide'.\n   */\n  @property({ reflect: true, attribute: 'width' })\n  width = TEARSHEET_WIDTH.NARROW;\n\n  private _checkUpdateActionSizes = () => {\n    if (this._actions) {\n      for (let i = 0; i < this._actions.length; i++) {\n        this._actions[i].setAttribute(\n          'size',\n          this.width === 'wide' ? '2xl' : 'xl'\n        );\n      }\n    }\n  };\n\n  private _maxActions = 4;\n  private _handleActionsChange(e: Event) {\n    const target = e.target as HTMLSlotElement;\n    const actions = target?.assignedElements();\n    const actionsCount = actions?.length ?? 0;\n\n    if (actionsCount > this._maxActions) {\n      this._actionsCount = this._maxActions;\n      console.error(`Too many tearsheet actions, max ${this._maxActions}.`);\n    } else {\n      this._actionsCount = actionsCount;\n    }\n\n    for (let i = 0; i < actions?.length; i++) {\n      if (i + 1 > this._maxActions) {\n        // hide excessive tearsheet actions\n        actions[i].setAttribute('hidden', 'true');\n        actions[i].setAttribute(\n          `data-actions-limit-${this._maxActions}-exceeded`,\n          `${actions.length}`\n        );\n      } else {\n        actions[i].classList.add(`${blockClassActionSet}__action-button`);\n      }\n    }\n    this._checkUpdateActionSizes();\n  }\n\n  // Data structure to communicate the state of tearsheet stacking\n  // (i.e. when more than one tearsheet is open). Each tearsheet supplies a\n  // handler to be called whenever the stacking of the tearsheets changes, which\n  // happens when a tearsheet opens or closes. The 'open' array contains one\n  // handler per OPEN tearsheet ordered from lowest to highest in visual z-order.\n  // The 'all' array contains all the handlers for open and closed tearsheets.\n\n  @state()\n  _stackDepth = -1;\n\n  @state()\n  _stackPosition = -1;\n\n  private _topOfStack = () => {\n    return this._stackDepth === this._stackPosition;\n  };\n\n  private static _stack: StackState = {\n    open: [],\n    all: [],\n  };\n  private _notifyStack = () => {\n    CDSTearsheet._stack.all.forEach(\n      (handler: (stackSize: number, position: number) => void) => {\n        handler(\n          Math.min(CDSTearsheet._stack.open.length, maxStackDepth),\n          CDSTearsheet._stack.open.indexOf(handler) + 1\n        );\n      }\n    );\n  };\n\n  private _handleStackChange: StackHandler = (newDepth, newPosition) => {\n    this._stackDepth = newDepth;\n    this._stackPosition = newPosition;\n    if (this._stackDepth > 1 && this._stackPosition > 0) {\n      this.setAttribute('stack-position', `${newPosition}`);\n      this.setAttribute('stack-depth', `${this._stackDepth}`);\n    } else {\n      this.removeAttribute('stack-position');\n      this.removeAttribute('stack-depth');\n    }\n  };\n\n  private _updateStack = () => {\n    if (this.open) {\n      CDSTearsheet._stack.open.push(this._handleStackChange);\n    } else {\n      const indexOpen = CDSTearsheet._stack.open.indexOf(\n        this._handleStackChange\n      );\n      if (indexOpen >= 0) {\n        CDSTearsheet._stack.open.splice(indexOpen, 1);\n      }\n    }\n    this._notifyStack();\n  };\n\n  actionsMultiple = ['', 'single', 'double', 'triple'][this._actionsCount];\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    CDSTearsheet._stack.all.push(this._handleStackChange);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    const indexAll = CDSTearsheet._stack.all.indexOf(this._handleStackChange);\n    CDSTearsheet._stack.all.splice(indexAll, 1);\n    const indexOpen = CDSTearsheet._stack.all.indexOf(this._handleStackChange);\n    CDSTearsheet._stack.open.splice(indexOpen, 1);\n  }\n\n  render() {\n    const {\n      closeIconDescription,\n      influencerPlacement,\n      influencerWidth,\n      open,\n      width,\n    } = this;\n\n    const actionsMultiple = ['', 'single', 'double', 'triple'][\n      this._actionsCount\n    ];\n\n    const headerFieldsTemplate = html`<div\n      class=${`${blockClass}__header-fields`}>\n      <h2 class=${`${blockClassModalHeader}__label`} ?hidden=${!this._hasLabel}>\n        <slot name=\"label\" @slotchange=${this._checkSetHasSlot}></slot>\n      </h2>\n      <h3\n        class=${`${blockClassModalHeader}__heading ${blockClass}__heading`}\n        ?hidden=${!this._hasTitle}>\n        <slot name=\"title\" @slotchange=${this._checkSetHasSlot}></slot>\n      </h3>\n      <div\n        class=${`${blockClass}__header-description`}\n        ?hidden=${!this._hasDescription}>\n        <slot name=\"description\" @slotchange=${this._checkSetHasSlot}></slot>\n      </div>\n    </div>`;\n\n    const headerActionsTemplate = html` <div\n      class=${`${blockClass}__header-actions`}\n      ?hidden=${!this._hasHeaderActions || this.width === 'narrow'}>\n      <slot name=\"header-actions\" @slotchange=${this._checkSetHasSlot}></slot>\n    </div>`;\n\n    const headerTemplate = html` <cds-modal-header\n      class=${`${blockClass}__header`}\n      ?has-close-icon=${this.hasCloseIcon || this?._actionsCount === 0}\n      ?has-navigation=${this._hasHeaderNavigation && this.width === 'wide'}\n      ?has-header-actions=${this._hasHeaderActions && this.width === 'wide'}\n      ?has-actions=${this?._actionsCount > 0}\n      ?has-slug=${this?._hasSlug}\n      width=${width}>\n      ${this.width === TEARSHEET_WIDTH.WIDE\n        ? html`<cds-layer level=\"1\" class=${`${blockClass}__header-content`}\n            >${headerFieldsTemplate}${headerActionsTemplate}</cds-layer\n          >`\n        : html`<div>${headerFieldsTemplate}${headerActionsTemplate}</div>`}\n\n      <div\n        class=${`${blockClass}__header-navigation`}\n        ?hidden=${!this._hasHeaderNavigation || this.width === 'narrow'}>\n        <slot\n          name=\"header-navigation\"\n          @slotchange=${this._checkSetHasSlot}></slot>\n      </div>\n      <slot name=\"slug\" @slotchange=${this._handleSlugChange}></slot>\n      ${this.hasCloseIcon || this?._actionsCount === 0\n        ? html`<cds-modal-close-button\n            close-button-label=${closeIconDescription}\n            @click=${this._handleUserInitiatedClose}></cds-modal-close-button>`\n        : ''}\n    </cds-modal-header>`;\n\n    return html`\n      <a\n        id=\"start-sentinel\"\n        class=\"${prefix}--visually-hidden\"\n        href=\"javascript:void 0\"\n        role=\"navigation\"></a>\n      <div\n        aria-label=${this.ariaLabel}\n        class=${`${blockClass}__container ${prefix}--modal-container ${prefix}--modal-container--sm`}\n        part=\"dialog\"\n        role=\"complementary\"\n        ?open=${this._isOpen}\n        ?opening=${open && !this._isOpen}\n        ?closing=${!open && this._isOpen}\n        width=${width}\n        stack-position=${this._stackPosition}\n        stack-depth=${this._stackDepth}\n        @click=${this._handleClickContainer}>\n        <!-- Header -->\n        ${headerTemplate}\n\n        <!-- Body  -->\n        <cds-modal-body class=${`${blockClass}__body`} width=${width}>\n          <!-- Influencer when on left -->\n          ${influencerPlacement !== TEARSHEET_INFLUENCER_PLACEMENT.RIGHT\n            ? html`<div\n                class=${`${blockClass}__influencer`}\n                ?wide=${influencerWidth === 'wide'}\n                ?hidden=${!this._hasInfluencerLeft ||\n                this.width === TEARSHEET_WIDTH.NARROW}>\n                <slot\n                  name=\"influencer\"\n                  data-postfix=\"left\"\n                  @slotchange=${this._checkSetHasSlot}></slot>\n              </div>`\n            : ''}\n\n          <div class=${`${blockClass}__right`}>\n            <div class=${`${blockClass}__main`}>\n              <div class=${`${blockClass}__content`}>\n                <cds-layer level=\"0\">\n                  <slot></slot>\n                </cds-layer>\n              </div>\n\n              <!-- Influencer when on right -->\n              ${influencerPlacement === TEARSHEET_INFLUENCER_PLACEMENT.RIGHT\n                ? html`<div\n                    class=${`${blockClass}__influencer`}\n                    ?wide=${influencerWidth}\n                    ?hidden=${!this._hasInfluencerRight ||\n                    this.width === TEARSHEET_WIDTH.NARROW}>\n                    <slot\n                      name=\"influencer\"\n                      data-postfix=\"right\"\n                      @slotchange=${this._checkSetHasSlot}></slot>\n                  </div>`\n                : ''}\n            </div>\n            <!-- Action buttons -->\n            <cds-button-set-base\n              class=${`${blockClass}__buttons ${blockClass}__button-container`}\n              actions-multiple=${actionsMultiple}\n              ?tearsheet-wide=${width === 'wide'}\n              ?hidden=${this._actionsCount === 0}>\n              <slot\n                name=\"actions\"\n                @slotchange=${this._handleActionsChange}></slot>\n            </cds-button-set-base>\n          </div>\n        </cds-modal-body>\n      </div>\n      <a\n        id=\"end-sentinel\"\n        class=\"${prefix}--visually-hidden\"\n        href=\"javascript:void 0\"\n        role=\"navigation\"></a>\n    `;\n  }\n\n  _checkSetOpen = () => {\n    const { _tearsheet: tearsheet } = this;\n    if (tearsheet && this._isOpen) {\n      // wait until the tearsheet has transitioned off the screen to remove\n      tearsheet.addEventListener('transitionend', () => {\n        this._isOpen = false;\n      });\n    } else {\n      // allow the html to render before animating in the tearsheet\n      window.requestAnimationFrame(() => {\n        this._isOpen = this.open;\n      });\n    }\n  };\n\n  async updated(changedProperties) {\n    if (changedProperties.has('width')) {\n      this._checkUpdateActionSizes();\n    }\n\n    if (\n      process.env.NODE_ENV === 'development' &&\n      (changedProperties.has('width') ||\n        changedProperties.has('_hasHeaderNavigation') ||\n        changedProperties.has('_hasInfluencerLeft') ||\n        changedProperties.has('_hasInfluencerRight') ||\n        changedProperties.has('_hasHeaderActions'))\n    ) {\n      if (this.width === 'narrow') {\n        if (this._hasHeaderNavigation) {\n          console.error(\n            `Header navigation is not permitted in narrow Tearsheet.`\n          );\n        }\n        if (this._hasInfluencerLeft || this._hasInfluencerRight) {\n          console.error(`Influencer is not permitted in narrow Tearsheet.`);\n        }\n        if (this._hasHeaderActions) {\n          console.error(\n            `Header actions are not permitted in narrow Tearsheet.`\n          );\n        }\n      }\n    }\n\n    if (changedProperties.has('open')) {\n      this._updateStack();\n\n      this._checkSetOpen();\n      if (this.open) {\n        this._launcher = this.ownerDocument!.activeElement;\n        const focusNode =\n          this.selectorInitialFocus &&\n          this.querySelector(this.selectorInitialFocus);\n\n        await (this.constructor as typeof CDSTearsheet)._delay();\n        if (focusNode) {\n          // For cases where a `carbon-web-components` component (e.g. `<cds-button>`) being `primaryFocusNode`,\n          // where its first update/render cycle that makes it focusable happens after `<cds-tearsheet>`'s first update/render cycle\n          (focusNode as HTMLElement).focus();\n        } else if (\n          !tryFocusElems(\n            this.querySelectorAll(\n              (this.constructor as typeof CDSTearsheet).selectorTabbable\n            ),\n            true\n          )\n        ) {\n          this.focus();\n        }\n      } else if (\n        this._launcher &&\n        typeof (this._launcher as HTMLElement).focus === 'function'\n      ) {\n        (this._launcher as HTMLElement).focus();\n        this._launcher = null;\n      }\n    }\n  }\n\n  /**\n   * @param ms The number of milliseconds.\n   * @returns A promise that is resolves after the given milliseconds.\n   */\n  private static _delay(ms = 0) {\n    return new Promise((resolve) => {\n      setTimeout(resolve, ms);\n    });\n  }\n\n  /**\n   * A selector selecting buttons that should close this modal.\n   */\n  static get selectorCloseButton() {\n    return `[data-modal-close],${prefix}-modal-close-button`;\n  }\n\n  /**\n   * A selector selecting tabbable nodes.\n   */\n  static get selectorTabbable() {\n    return selectorTabbable;\n  }\n\n  /**\n   * The name of the custom event fired before this tearsheet is being closed upon a user gesture.\n   * Cancellation of this event stops the user-initiated action of closing this tearsheet.\n   */\n  static get eventBeforeClose() {\n    return `${prefix}-tearsheet-beingclosed`;\n  }\n\n  /**\n   * The name of the custom event fired after this tearsheet is closed upon a user gesture.\n   */\n  static get eventClose() {\n    return `${prefix}-tearsheet-closed`;\n  }\n\n  /**\n   * The name of the custom event fired on clicking the navigate back button\n   */\n  static get eventNavigateBack() {\n    return `${prefix}-tearsheet-header-navigate-back`;\n  }\n}\n\nexport default CDSTearsheet;\n"],"names":["customElement"],"mappings":"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"}