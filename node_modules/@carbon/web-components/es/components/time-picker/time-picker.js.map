{"version":3,"file":"time-picker.js","sources":["../../../src/components/time-picker/time-picker.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport WarningFilled16 from '@carbon/icons/lib/warning--filled/16.js';\nimport WarningAltFilled16 from '@carbon/icons/lib/warning--alt--filled/16.js';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\nimport ValidityMixin from '../../globals/mixins/validity';\nimport FormMixin from '../../globals/mixins/form';\nimport { prefix } from '../../globals/settings';\nimport styles from './time-picker.scss?lit';\nimport ifNonEmpty from '../../globals/directives/if-non-empty';\nimport { TIME_PICKER_SIZE } from './defs';\n\n/**\n * Time Picker component.\n * @element cds-time-picker\n * @slot label-text - The label text.\n * @slot time-picker-select - Slot for time picker select components.\n * @slot validity-message - The validity message. If present and non-empty, this input shows the UI of its invalid state.\n */\n@customElement(`${prefix}-time-picker`)\nclass CDSTimePicker extends ValidityMixin(FormMixin(LitElement)) {\n  /**\n   * The underlying input element\n   */\n  @query('input')\n  protected _input!: HTMLInputElement;\n\n  /**\n   * The internal value.\n   */\n  protected _value = '';\n\n  protected _handleInput({ target }: Event) {\n    this.value = (target as HTMLInputElement).value;\n    this.dispatchEvent(\n      new CustomEvent('change', {\n        bubbles: true,\n        composed: true,\n        detail: { value: this.value },\n      })\n    );\n  }\n\n  /**\n   * Handle slotchange event for time-picker-select slot\n   * to propagate properties to child elements\n   */\n  protected _handleSlotChange() {\n    this.requestUpdate();\n  }\n\n  _handleFormdata(event: Event) {\n    const { formData } = event as any;\n    const { disabled, name, value } = this;\n    if (!disabled) {\n      formData.append(name, value);\n    }\n  }\n\n  /**\n   * Specify whether the control is disabled\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * Specify whether the control is currently invalid\n   */\n  @property({ type: Boolean, reflect: true })\n  invalid = false;\n\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  @property({ attribute: 'invalid-text' })\n  invalidText = 'Invalid time format.';\n\n  /**\n   * Specify whether the control is in warning state\n   */\n  @property({ type: Boolean, reflect: true })\n  warning = false;\n\n  /**\n   * Provide the text that is displayed when the control is in a warning state\n   */\n  @property({ attribute: 'warning-text' })\n  warningText = 'Warning message.';\n\n  /**\n   * Specify whether the label should be hidden\n   */\n  @property({ attribute: 'hide-label', type: Boolean, reflect: true })\n  hideLabel = false;\n\n  /**\n   * Name for the input in FormData\n   */\n  @property()\n  name = '';\n\n  /**\n   * Provide label text to be read by screen readers\n   */\n  @property({ attribute: 'label-text' })\n  labelText = 'Select a time';\n\n  /**\n   * Placeholder text for the input\n   */\n  @property({ reflect: true })\n  placeholder = 'hh:mm';\n\n  /**\n   * Specify whether the control should be read-only\n   */\n  @property({ type: Boolean, reflect: true })\n  readOnly = false;\n\n  /**\n   * Specify the maximum length of the input value\n   */\n  @property({ type: Number, attribute: 'max-length', reflect: true })\n  maxLength = 5;\n\n  /**\n   * Pattern for input validation\n   */\n  @property()\n  pattern = '(1[012]|[1-9]):[0-5][0-9](\\\\s)?';\n\n  /**\n   * Size of the time picker\n   */\n  @property({ reflect: true })\n  size = TIME_PICKER_SIZE.MEDIUM;\n\n  /**\n   * Input type\n   */\n  @property({ reflect: true })\n  type = 'text';\n\n  /**\n   * Validity message\n   */\n  @property({ attribute: 'validity-message' })\n  validityMessage = '';\n\n  /**\n   * Whether the input is required\n   */\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  /**\n   * Custom message for required validation\n   */\n  @property({ attribute: 'required-validity-message' })\n  requiredValidityMessage = 'Please fill out this field.';\n\n  /**\n   * Value of the input\n   */\n  @property({ reflect: true })\n  get value() {\n    return this._input ? this._input.value : this._value;\n  }\n\n  set value(value) {\n    const oldValue = this._value;\n    this._value = value;\n    this.requestUpdate('value', oldValue);\n    if (this._input) {\n      this._input.value = value;\n    }\n  }\n\n  render() {\n    const {\n      className,\n      disabled,\n      hideLabel,\n      invalid,\n      invalidText,\n      warning,\n      warningText,\n      labelText,\n      placeholder,\n      readOnly,\n      maxLength,\n      pattern,\n      size,\n      type,\n      value,\n      _handleInput: handleInput,\n      _handleSlotChange: handleSlotChange,\n    } = this;\n\n    const labelClasses = classMap({\n      [`${prefix}--label`]: true,\n      [`${prefix}--visually-hidden`]: hideLabel,\n      [`${prefix}--label--disabled`]: disabled,\n    });\n\n    const timePickerClasses = classMap({\n      [`${prefix}--time-picker`]: true,\n      [`${prefix}--time-picker--invalid`]: invalid,\n      [`${prefix}--time-picker--warning`]: warning,\n      [`${prefix}--time-picker--readonly`]: readOnly,\n      [`${prefix}--time-picker--${size}`]: size,\n      ...(className && { [className]: true }),\n    });\n\n    const inputClasses = classMap({\n      [`${prefix}--time-picker__input-field`]: true,\n      [`${prefix}--text-input`]: true,\n      [`${prefix}--time-picker__input-field-error`]: invalid || warning,\n      ...(className && { [className]: true }),\n    });\n    const label = labelText\n      ? html`<label class=\"${labelClasses}\">${labelText}</label>`\n      : null;\n\n    return html`\n      <div class=\"${prefix}--form-item \">\n        ${label}\n        <div class=\"${timePickerClasses}\">\n          <div class=\"${prefix}--time-picker__input\">\n            <input\n              class=\"${inputClasses}\"\n              ?data-invalid=\"${invalid}\"\n              ?disabled=\"${disabled}\"\n              maxlength=\"${ifNonEmpty(maxLength)}\"\n              name=\"${ifNonEmpty(this.name)}\"\n              pattern=\"${ifNonEmpty(pattern)}\"\n              placeholder=\"${ifNonEmpty(placeholder)}\"\n              ?readonly=\"${readOnly}\"\n              type=\"${ifNonEmpty(type)}\"\n              .value=\"${value}\"\n              @input=\"${handleInput}\" />\n            ${invalid || warning\n              ? html`\n                  <div class=\"${prefix}--time-picker__error__icon\">\n                    ${invalid\n                      ? WarningFilled16({\n                          class: `${prefix}--checkbox__invalid-icon`,\n                        })\n                      : WarningAltFilled16({\n                          class: `${prefix}--text-input__invalid-icon--warning`,\n                        })}\n                  </div>\n                `\n              : null}\n          </div>\n          <slot @slotchange=\"${handleSlotChange}\"></slot>\n        </div>\n        ${invalid || warning\n          ? html`\n              <div class=\"${prefix}--form-requirement\">\n                ${invalid ? invalidText : warningText}\n              </div>\n            `\n          : null}\n      </div>\n    `;\n  }\n  updated(changedProperties) {\n    super.updated(changedProperties);\n\n    const { selectorTimePickerSelect } = this\n      .constructor as typeof CDSTimePicker;\n    const timePickerSelects = this.querySelectorAll(selectorTimePickerSelect);\n\n    ['disabled', 'readOnly', 'size'].forEach((name) => {\n      if (changedProperties.has(name)) {\n        const { [name as keyof CDSTimePicker]: value } = this;\n        // Propagate the property to descendants\n        timePickerSelects.forEach((elem: any) => {\n          elem[name] = value;\n        });\n      }\n    });\n  }\n  static get selectorTimePickerSelect() {\n    return `${prefix}-time-picker-select`;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  static styles = styles;\n}\n\nexport default CDSTimePicker;\n"],"names":["customElement"],"mappings":"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"}