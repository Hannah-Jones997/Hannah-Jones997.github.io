{"version":3,"file":"loading.js","sources":["../../../src/components/loading/loading.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport { LOADING_TYPE } from './defs';\nimport getLoadingIcon from './loading-icon';\nimport styles from './loading.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Spinner indicating loading state.\n *\n * @element cds-loading\n */\n\n@customElement(`${prefix}-loading`)\nclass CDSLoading extends LitElement {\n  /**\n   * @deprecated\n   * The 'assistive-text' property will be deprecated in the next major release. Please use `description` instead.\n   */\n  @property({ attribute: 'assistive-text' })\n  get assistiveText() {\n    return this.description;\n  }\n  set assistiveText(value) {\n    this.description = value;\n  }\n\n  /**\n   * Specify a description that would be used to best describe the loading state\n   */\n  @property({ reflect: true })\n  description = 'Loading';\n\n  /**\n   *\n   * @deprecated The 'type' property will be deprecated in the next major release. Please use `small` instead.\n   */\n  @property()\n  get type() {\n    return this.small ? LOADING_TYPE.SMALL : LOADING_TYPE.REGULAR;\n  }\n  set type(value) {\n    this.small = value == LOADING_TYPE.SMALL;\n  }\n\n  /**\n   * Specify whether you would like the small variant of <Loading>\n   */\n  @property({ type: Boolean, reflect: true })\n  small = false;\n\n  /**\n   * `true` if overlay should be applied.\n   */\n  @property({ type: Boolean, reflect: true })\n  overlay = false;\n\n  /**\n   *\n   * @deprecated\n   * The 'inactive' property will be deprecated in the next major release. Please use `active` instead.\n   */\n  @property({ type: Boolean, reflect: true })\n  get inactive(): boolean {\n    return !this.active;\n  }\n\n  set inactive(value: boolean) {\n    this.active = !value;\n  }\n\n  /**\n   * Specify whether you want the loading indicator to be spinning or not\n   */\n  @property({ type: Boolean, reflect: true })\n  active = false;\n\n  render() {\n    const { active, description, small, overlay } = this;\n\n    const innerClasses = classMap({\n      [`${prefix}--loading`]: true,\n      [`${prefix}--loading--stop`]: !active,\n      [`${prefix}--loading--small`]: small,\n    });\n    const icon = getLoadingIcon({ description, small });\n    return overlay ? html`<div class=\"${innerClasses}\">${icon}</div>` : icon;\n  }\n\n  static styles = styles;\n}\n\nexport { LOADING_TYPE };\n\nexport default CDSLoading;\n"],"names":["customElement"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;AAKG;AAWH;;;;AAIG;AAGH,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,UAAU,CAAA;AAAnC,IAAA,WAAA,GAAA;;AAaE;;AAEG;QAEH,IAAW,CAAA,WAAA,GAAG,SAAS;AAcvB;;AAEG;QAEH,IAAK,CAAA,KAAA,GAAG,KAAK;AAEb;;AAEG;QAEH,IAAO,CAAA,OAAA,GAAG,KAAK;AAgBf;;AAEG;QAEH,IAAM,CAAA,MAAA,GAAG,KAAK;;AA5Dd;;;AAGG;AAEH,IAAA,IAAI,aAAa,GAAA;QACf,OAAO,IAAI,CAAC,WAAW;;IAEzB,IAAI,aAAa,CAAC,KAAK,EAAA;AACrB,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK;;AAS1B;;;AAGG;AAEH,IAAA,IAAI,IAAI,GAAA;AACN,QAAA,OAAO,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO;;IAE/D,IAAI,IAAI,CAAC,KAAK,EAAA;QACZ,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,YAAY,CAAC,KAAK;;AAe1C;;;;AAIG;AAEH,IAAA,IAAI,QAAQ,GAAA;AACV,QAAA,OAAO,CAAC,IAAI,CAAC,MAAM;;IAGrB,IAAI,QAAQ,CAAC,KAAc,EAAA;AACzB,QAAA,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK;;IAStB,MAAM,GAAA;QACJ,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI;QAEpD,MAAM,YAAY,GAAG,QAAQ,CAAC;AAC5B,YAAA,CAAC,CAAG,EAAA,MAAM,CAAW,SAAA,CAAA,GAAG,IAAI;AAC5B,YAAA,CAAC,GAAG,MAAM,CAAA,eAAA,CAAiB,GAAG,CAAC,MAAM;AACrC,YAAA,CAAC,CAAG,EAAA,MAAM,CAAkB,gBAAA,CAAA,GAAG,KAAK;AACrC,SAAA,CAAC;QACF,MAAM,IAAI,GAAG,cAAc,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC;AACnD,QAAA,OAAO,OAAO,GAAG,IAAI,CAAA,CAAA,YAAA,EAAe,YAAY,CAAA,EAAA,EAAK,IAAI,CAAQ,MAAA,CAAA,GAAG,IAAI;;;AAGnE,UAAM,CAAA,MAAA,GAAG,MAAH;AArEb,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE;AAGxC,CAAA,EAAA,UAAA,CAAA,SAAA,EAAA,eAAA,EAAA,IAAA,CAAA;AASD,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE;AACH,CAAA,EAAA,UAAA,CAAA,SAAA,EAAA,aAAA,EAAA,MAAA,CAAA;AAOxB,UAAA,CAAA;AADC,IAAA,QAAQ;AAGR,CAAA,EAAA,UAAA,CAAA,SAAA,EAAA,MAAA,EAAA,IAAA,CAAA;AASD,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AAC5B,CAAA,EAAA,UAAA,CAAA,SAAA,EAAA,OAAA,EAAA,MAAA,CAAA;AAMd,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AAC1B,CAAA,EAAA,UAAA,CAAA,SAAA,EAAA,SAAA,EAAA,MAAA,CAAA;AAQhB,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AAGzC,CAAA,EAAA,UAAA,CAAA,SAAA,EAAA,UAAA,EAAA,IAAA,CAAA;AAUD,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AAC3B,CAAA,EAAA,UAAA,CAAA,SAAA,EAAA,QAAA,EAAA,MAAA,CAAA;AA7DX,UAAU,GAAA,UAAA,CAAA;AADf,IAAAA,aAAa,CAAC,CAAA,EAAG,MAAM,CAAA,QAAA,CAAU;AAC5B,CAAA,EAAA,UAAU,CA4Ef;AAID,mBAAe,UAAU;;;;"}