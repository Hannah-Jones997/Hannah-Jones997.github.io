{"version":3,"file":"multi-select-item.js","sources":["../../../src/components/multi-select/multi-select-item.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { prefix } from '../../globals/settings';\nimport CDSDropdownItem from '../dropdown/dropdown-item';\nimport styles from './multi-select.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\nimport '../checkbox';\n/**\n * Multi select item.\n *\n * @element cds-multi-select-item\n */\n@customElement(`${prefix}-multi-select-item`)\nclass CDSMultiSelectItem extends CDSDropdownItem {\n  /**\n   * The property to hide when item is filtered from input\n   */\n  @property({ type: Boolean })\n  filtered;\n\n  /**\n   * Marks this item as the “select all” item.\n   */\n  @property({ type: Boolean, attribute: 'is-select-all', reflect: true })\n  isSelectAll = false;\n\n  /**\n   * When `true`, renders the checkbox in its indeterminate state.\n   */\n  @property({ type: Boolean, reflect: true })\n  indeterminate = false;\n\n  /**\n   * The `name` attribute for the `<input>` for selection.\n   */\n  @property({ attribute: 'selection-name' })\n  selectionName = '';\n\n  render() {\n    const { disabled, selected, selectionName, value, indeterminate } = this;\n    return html`\n      <div class=\"${prefix}--list-box__menu-item__option\">\n        <cds-checkbox\n          tabindex=\"-1\"\n          class=\"${prefix}--form-item ${prefix}--checkbox-wrapper\"\n          .checked=${selected}\n          .indeterminate=${indeterminate}\n          ?disabled=${disabled}\n          name=${ifDefined(selectionName || undefined)}\n          value=${value}>\n          <slot></slot>\n        </cds-checkbox>\n      </div>\n    `;\n  }\n\n  /**\n   * A selector that will return multi select.\n   */\n  static get selectorList() {\n    return `${prefix}-multi-select`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSMultiSelectItem;\n"],"names":["customElement"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;AAKG;AAUH;;;;AAIG;AAEH,IAAM,kBAAkB,GAAxB,MAAM,kBAAmB,SAAQ,eAAe,CAAA;AAAhD,IAAA,WAAA,GAAA;;AAOE;;AAEG;QAEH,IAAW,CAAA,WAAA,GAAG,KAAK;AAEnB;;AAEG;QAEH,IAAa,CAAA,aAAA,GAAG,KAAK;AAErB;;AAEG;QAEH,IAAa,CAAA,aAAA,GAAG,EAAE;;IAElB,MAAM,GAAA;AACJ,QAAA,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG,IAAI;AACxE,QAAA,OAAO,IAAI,CAAA;oBACK,MAAM,CAAA;;;AAGP,iBAAA,EAAA,MAAM,eAAe,MAAM,CAAA;qBACzB,QAAQ;2BACF,aAAa;sBAClB,QAAQ;AACb,eAAA,EAAA,SAAS,CAAC,aAAa,IAAI,SAAS,CAAC;kBACpC,KAAK,CAAA;;;;KAIlB;;AAGH;;AAEG;AACH,IAAA,WAAW,YAAY,GAAA;QACrB,OAAO,CAAA,EAAG,MAAM,CAAA,aAAA,CAAe;;;AAG1B,kBAAM,CAAA,MAAA,GAAG,MAAH;AA7Cb,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE;AAClB,CAAA,EAAA,kBAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA;AAMT,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE;AAClD,CAAA,EAAA,kBAAA,CAAA,SAAA,EAAA,aAAA,EAAA,MAAA,CAAA;AAMpB,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AACpB,CAAA,EAAA,kBAAA,CAAA,SAAA,EAAA,eAAA,EAAA,MAAA,CAAA;AAMtB,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE;AACtB,CAAA,EAAA,kBAAA,CAAA,SAAA,EAAA,eAAA,EAAA,MAAA,CAAA;AAvBf,kBAAkB,GAAA,UAAA,CAAA;AADvB,IAAAA,aAAa,CAAC,CAAA,EAAG,MAAM,CAAA,kBAAA,CAAoB;AACtC,CAAA,EAAA,kBAAkB,CAmDvB;AAED,2BAAe,kBAAkB;;;;"}