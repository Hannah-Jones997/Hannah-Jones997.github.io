{"version":3,"file":"toggletip.js","sources":["../../../src/components/toggle-tip/toggletip.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { html, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\nimport Information16 from '@carbon/icons/lib/information/16.js';\nimport { prefix } from '../../globals/settings';\nimport HostListener from '../../globals/decorators/host-listener';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport FocusMixin from '../../globals/mixins/focus';\nimport { POPOVER_ALIGNMENT } from '../popover/defs';\nimport FloatingUIContoller from '../../globals/controllers/floating-controller';\nimport styles from './toggletip.scss?lit';\n\n/**\n * Definition tooltip.\n *\n * @element cds-toggletip\n */\n@customElement(`${prefix}-toggletip`)\nclass CDSToggletip extends HostListenerMixin(FocusMixin(LitElement)) {\n  /**\n   * Create popover controller instance\n   */\n  private popoverController = new FloatingUIContoller(this);\n\n  /**\n   * How the tooltip is aligned to the trigger button.\n   */\n  @property({ reflect: true })\n  alignment = POPOVER_ALIGNMENT.TOP;\n\n  /**\n   * **Experimental:** Provide an offset value for alignment axis. Only takes effect when `autoalign` is enabled.\n   */\n  @property({ type: Number, attribute: 'alignment-axis-offset' })\n  alignmentAxisOffset = 0;\n\n  /**\n   * Specify whether a auto align functionality should be applied\n   */\n  @property({ type: Boolean, reflect: true })\n  autoalign = false;\n\n  /**\n   * The label for the toggle button\n   */\n  @property({ attribute: 'button-label' })\n  buttonLabel = 'Show information';\n\n  /**\n   * Set whether toggletip is open\n   */\n  @property({ type: Boolean, reflect: true })\n  open = false;\n\n  /**\n   * Set whether toggletip is open by default.\n   */\n  @property({ type: Boolean, attribute: 'default-open' })\n  defaultOpen = false;\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.defaultOpen && !this.hasAttribute('open')) {\n      this.open = true;\n    }\n  }\n\n  /**\n   * Handles `slotchange` event.\n   */\n  private _handleActionsSlotChange({ target }: Event) {\n    const hasContent = (target as HTMLSlotElement).assignedNodes();\n    hasContent\n      ? this.setAttribute('has-actions', '')\n      : this.removeAttribute('has-actions');\n  }\n\n  protected _handleClick = () => {\n    this.open = !this.open;\n  };\n\n  /**\n   * Handles `keydown` event on this element.\n   */\n  @HostListener('keydown')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  protected _handleKeydown = async (event) => {\n    if (event.key === 'Escape') {\n      this.open = false;\n    }\n  };\n\n  /**\n   * Handles `blur` event handler on the document this element is in.\n   *\n   * @param event The event.\n   */\n  @HostListener('focusout')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  protected _handleFocusOut(event: FocusEvent) {\n    if (!this.contains(event.relatedTarget as Node)) {\n      this.open = false;\n    }\n  }\n\n  protected _renderToggleTipLabel = () => {\n    return html`\n      <span class=\"${prefix}--toggletip-label\">\n        <slot></slot>\n      </span>\n    `;\n  };\n\n  protected _renderTooltipButton = () => {\n    return html`\n      <button\n        aria-controls=\"${this.id}\"\n        aria-label=\"${this.buttonLabel}\"\n        class=\"${prefix}--toggletip-button\"\n        @click=${this._handleClick}>\n        <slot name=\"trigger\">${Information16({ id: 'trigger' })}</slot>\n      </button>\n    `;\n  };\n\n  protected _renderTooltipContent = () => {\n    return this.autoalign\n      ? html`\n          <span class=\"${prefix}--popover-content\">\n            <div class=\"${prefix}--toggletip-content\">\n              <slot name=\"body-text\"></slot>\n              <div class=\"${prefix}--toggletip-actions\">\n                <slot\n                  name=\"actions\"\n                  @slotchange=\"${this._handleActionsSlotChange}\"></slot>\n              </div>\n            </div>\n            <span class=\"${prefix}--popover-caret\"></span>\n          </span>\n        `\n      : html`\n          <span class=\"${prefix}--popover\">\n            <span class=\"${prefix}--popover-content\">\n              <div class=\"${prefix}--toggletip-content\">\n                <slot name=\"body-text\"></slot>\n                <div class=\"${prefix}--toggletip-actions\">\n                  <slot\n                    name=\"actions\"\n                    @slotchange=\"${this._handleActionsSlotChange}\"></slot>\n                </div>\n              </div>\n            </span>\n            <span class=\"${prefix}--popover-caret\"></span>\n          </span>\n        `;\n  };\n\n  protected _renderInnerContent = () => {\n    return html`\n      ${this._renderTooltipButton()} ${this._renderTooltipContent()}\n    `;\n  };\n\n  updated() {\n    if (this.autoalign) {\n      // auto align functionality with @floating-ui/dom library\n      const button = this.shadowRoot?.querySelector(\n        CDSToggletip.selectorToggletipButton\n      );\n\n      const tooltip = this.shadowRoot?.querySelector(\n        CDSToggletip.selectorToggletipContent\n      );\n      const arrowElement = this.shadowRoot?.querySelector(\n        CDSToggletip.selectorToggletipCaret\n      );\n\n      if (button && tooltip) {\n        // Ensure toggletip is visible when rendered in a large scrollable container (storybook parity)\n        button.scrollIntoView({ block: 'center', inline: 'center' });\n\n        this.popoverController?.setPlacement({\n          trigger: button as HTMLElement,\n          target: tooltip as HTMLElement,\n          arrowElement: arrowElement as HTMLElement,\n          caret: true,\n          flipArguments: { fallbackAxisSideDirection: 'start' },\n          alignment: this.alignment,\n          open: this.open,\n          alignmentAxisOffset: this.alignmentAxisOffset,\n        });\n      }\n    }\n  }\n\n  render() {\n    const { alignment, open } = this;\n    const classes = classMap({\n      [`${prefix}--popover-container`]: true,\n      [`${prefix}--popover--caret`]: true,\n      [`${prefix}--popover--high-contrast`]: true,\n      [`${prefix}--popover--open`]: open,\n      [`${prefix}--popover--${alignment}`]: alignment,\n      [`${prefix}--toggletip`]: true,\n      [`${prefix}--toggletip--open`]: open,\n    });\n    return html`\n      ${this._renderToggleTipLabel()}\n      <span class=\"${classes}\"> ${this._renderInnerContent()} </span>\n    `;\n  }\n\n  /**\n   * A selector that will return the toggletip content.\n   */\n  static get selectorToggletipContent() {\n    return `.${prefix}--popover-content`;\n  }\n\n  /**\n   * A selector that will return the toggletip caret.\n   */\n  static get selectorToggletipCaret() {\n    return `.${prefix}--popover-caret`;\n  }\n\n  /**\n   * A selector that will return the trigger element.\n   */\n  static get selectorToggletipButton() {\n    return `.${prefix}--toggletip-button`;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  static styles = styles;\n}\n\nexport default CDSToggletip;\n"],"names":["FloatingUIContoller","customElement"],"mappings":"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"}