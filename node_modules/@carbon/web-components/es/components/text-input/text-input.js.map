{"version":3,"file":"text-input.js","sources":["../../../src/components/text-input/text-input.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { prefix } from '../../globals/settings';\nimport View16 from '@carbon/icons/lib/view/16.js';\nimport ViewOff16 from '@carbon/icons/lib/view--off/16.js';\nimport WarningFilled16 from '@carbon/icons/lib/warning--filled/16.js';\nimport WarningAltFilled16 from '@carbon/icons/lib/warning--alt--filled/16.js';\nimport ifNonEmpty from '../../globals/directives/if-non-empty';\nimport FormMixin from '../../globals/mixins/form';\nimport ValidityMixin from '../../globals/mixins/validity';\nimport {\n  INPUT_COLOR_SCHEME,\n  INPUT_SIZE,\n  INPUT_TOOLTIP_ALIGNMENT,\n  INPUT_TOOLTIP_DIRECTION,\n  INPUT_TYPE,\n} from './defs';\nimport styles from './text-input.scss?lit';\n\nexport {\n  INPUT_COLOR_SCHEME,\n  INPUT_SIZE,\n  INPUT_TOOLTIP_ALIGNMENT,\n  INPUT_TOOLTIP_DIRECTION,\n  INPUT_TYPE,\n};\n\n/**\n * Text Input element. Supports all the usual attributes for textual input types\n *\n * @element cds-text-input\n * @slot helper-text - The helper text.\n * @slot label-text - The label text.\n * @slot validity-message - The validity message. If present and non-empty, this input shows the UI of its invalid state.\n */\n@customElement(`${prefix}-text-input`)\nclass CDSTextInput extends ValidityMixin(FormMixin(LitElement)) {\n  /**\n   * `true` if there is an AI Label.\n   */\n  protected _hasAILabel = false;\n\n  /**\n   * Handles `slotchange` event.\n   */\n  protected _handleSlotChange({ target }: Event) {\n    const hasContent = (target as HTMLSlotElement)\n      .assignedNodes()\n      .filter((elem) =>\n        (elem as HTMLElement).matches !== undefined\n          ? (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSTextInput).aiLabelItem\n            ) ||\n            // remove reference to slug in v12\n            (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSTextInput).slugItem\n            )\n          : false\n      );\n\n    this._hasAILabel = Boolean(hasContent);\n    (hasContent[0] as HTMLElement).setAttribute('size', 'mini');\n    this.requestUpdate();\n  }\n  /**\n   * The underlying input element\n   */\n  @query('input')\n  protected _input!: HTMLInputElement;\n\n  /**\n   * The internal value.\n   */\n  protected _value = '';\n\n  /**\n   * Handles `oninput` event on the `<input>`.\n   *\n   * @param event The event.\n   * @param event.target The event target.\n   */\n  protected _handleInput({ target }: Event) {\n    this.value = (target as HTMLInputElement).value;\n  }\n\n  _handleFormdata(event: FormDataEvent) {\n    const { formData } = event;\n    const { disabled, name, value } = this;\n    if (!disabled) {\n      formData.append(name, value);\n    }\n  }\n\n  /**\n   * May be any of the standard HTML autocomplete options\n   */\n  @property()\n  autocomplete = '';\n\n  /**\n   * Sets the input to be focussed automatically on page load. Defaults to false\n   */\n  @property({ type: Boolean })\n  autofocus = false;\n\n  /**\n   * Controls the disabled state of the input\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * Specify whether to display the character counter\n   */\n  @property({ type: Boolean, attribute: 'enable-counter', reflect: true })\n  enableCounter = false;\n\n  /**\n   * The helper text.\n   */\n  @property({ attribute: 'helper-text' })\n  helperText = '';\n\n  /**\n   * Specify if the currently value is invalid.\n   */\n  @property({ type: Boolean, reflect: true })\n  invalid = false;\n\n  /**\n   * Message which is displayed if the value is invalid.\n   */\n  @property({ attribute: 'invalid-text' })\n  invalidText = '';\n\n  /**\n   * Max character count allowed for input. This is needed in order for enableCounter to display\n   */\n  @property({ type: Number, attribute: 'max-count', reflect: true })\n  maxCount;\n\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  @property({ type: Boolean, reflect: true })\n  warn = false;\n\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  @property({ attribute: 'warn-text' })\n  warnText = '';\n\n  /**\n   * Specify whether you want the underlying label to be visually hidden\n   */\n  @property({ attribute: 'hide-label', type: Boolean, reflect: true })\n  hideLabel = false;\n\n  /**\n   * Generic label that will be used as the textual representation of what this field is for\n   */\n  @property({ attribute: 'label' })\n  label = '';\n\n  /**\n   * Name for the input in the `FormData`\n   */\n  @property()\n  name = '';\n\n  /**\n   * Pattern to validate the input against for HTML validity checking\n   */\n  @property()\n  pattern = '';\n\n  /**\n   * Value to display when the input has an empty `value`\n   */\n  @property({ reflect: true })\n  placeholder = '';\n\n  /**\n   * Specify if the component should be read-only\n   */\n  @property({ type: Boolean, reflect: true })\n  readonly = false;\n\n  /**\n   * Boolean property to set the required status\n   */\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  /**\n   * The special validity message for `required`.\n   */\n  @property({ attribute: 'required-validity-message' })\n  requiredValidityMessage = 'Please fill out this field.';\n\n  /**\n   * \"Hide password\" tooltip text on password visibility toggle\n   *\n   * @deprecated will be removed in the next major version, use `cds-password-input` instead\n   */\n  @property()\n  hidePasswordLabel = 'Hide password';\n\n  /**\n   * \"Show password\" tooltip text on password visibility toggle\n   *\n   * @deprecated will be removed in the next major version, use `cds-password-input` instead\n   */\n  @property()\n  showPasswordLabel = 'Show password';\n\n  /**\n   * Boolean property to render password visibility toggle\n   *\n   * @deprecated will be removed in the next major version, use `cds-password-input` instead\n   */\n  @property({\n    type: Boolean,\n    attribute: 'show-password-visibility-toggle',\n    reflect: true,\n  })\n  showPasswordVisibilityToggle = false;\n\n  /**\n   * The input box size.\n   */\n  @property({ reflect: true })\n  size = INPUT_SIZE.MEDIUM;\n\n  /**\n   * true to use the inline version.\n   */\n  @property({ type: Boolean, reflect: true })\n  inline = false;\n\n  /**\n   * Specify the alignment of the tooltip to the icon-only button.\n   * Can be one of: start, center, or end.\n   */\n  @property()\n  tooltipAlignment = INPUT_TOOLTIP_ALIGNMENT.CENTER;\n\n  /**\n   * Specify the direction of the tooltip for icon-only buttons.\n   * Can be either top, right, bottom, or left.\n   */\n  @property()\n  tooltipDirection = INPUT_TOOLTIP_DIRECTION.BOTTOM;\n\n  /**\n   * The type of the input. Can be one of the types listed in the INPUT_TYPE enum\n   */\n  @property({ reflect: true })\n  type = INPUT_TYPE.TEXT;\n\n  /**\n   * The validity message. If present and non-empty, this input shows the UI of its invalid state.\n   */\n  @property({ attribute: 'validity-message' })\n  validityMessage = '';\n\n  /**\n   * The value of the input.\n   */\n  @property({ reflect: true })\n  get value() {\n    // FIXME: Figure out how to deal with TS2611\n    // once we have the input we can directly query for the value\n    if (this._input) {\n      return this._input.value;\n    }\n    // but before then _value will work fine\n    return this._value;\n  }\n\n  set value(value) {\n    const oldValue = this._value;\n    this._value = value;\n    // make sure that lit-element updates the right properties\n    this.requestUpdate('value', oldValue);\n    // we set the value directly on the input (when available)\n    // so that programatic manipulation updates the UI correctly\n    if (this._input) {\n      this._input.value = value;\n    }\n  }\n\n  /**\n   * Handles password visibility toggle button click\n   *\n   * @deprecated will be removed in the next major version, use `cds-password-input` instead\n   */\n  private togglePasswordVisibility() {\n    this.type =\n      this.type === INPUT_TYPE.PASSWORD ? INPUT_TYPE.TEXT : INPUT_TYPE.PASSWORD;\n  }\n\n  render() {\n    const {\n      disabled,\n      enableCounter,\n      helperText,\n      hideLabel,\n      inline,\n      invalid,\n      invalidText,\n      label,\n      maxCount,\n      readonly,\n      required,\n      size,\n      type,\n      warn,\n      warnText,\n      value,\n      _handleInput: handleInput,\n      _hasAILabel: hasAILabel,\n      _handleSlotChange: handleSlotChange,\n    } = this;\n\n    const invalidIcon = WarningFilled16({\n      class: `${prefix}--text-input__invalid-icon`,\n    });\n\n    const warnIcon = WarningAltFilled16({\n      class: `${prefix}--text-input__invalid-icon ${prefix}--text-input__invalid-icon--warning`,\n    });\n\n    const normalizedProps = {\n      disabled: !readonly && disabled,\n      invalid: !readonly && invalid,\n      warn: !readonly && !invalid && warn,\n      'slot-name': '',\n      'slot-text': '',\n      icon: null,\n    };\n\n    if (normalizedProps.invalid) {\n      normalizedProps.icon = invalidIcon;\n      normalizedProps['slot-name'] = 'invalid-text';\n      normalizedProps['slot-text'] = invalidText;\n    } else if (normalizedProps.warn) {\n      normalizedProps.icon = warnIcon;\n      normalizedProps['slot-name'] = 'warn-text';\n      normalizedProps['slot-text'] = warnText;\n    }\n\n    const counterClasses = classMap({\n      [`${prefix}--label`]: true,\n      [`${prefix}--text-input__label-counter`]: true,\n      [`${prefix}--label--disabled`]: disabled,\n    });\n\n    const inputWrapperClasses = classMap({\n      [`${prefix}--form-item`]: true,\n      [`${prefix}--text-input-wrapper`]: true,\n      [`${prefix}--text-input-wrapper--inline`]: inline,\n      [`${prefix}--text-input-wrapper--readonly`]: readonly,\n      [`${prefix}--text-input-wrapper--inline--invalid`]:\n        inline && normalizedProps.invalid,\n    });\n\n    const inputClasses = classMap({\n      [`${prefix}--text-input`]: true,\n      [`${prefix}--text-input--invalid`]: normalizedProps.invalid,\n      [`${prefix}--text-input--warning`]: normalizedProps.warn,\n      [`${prefix}--text-input--${size}`]: size,\n      [`${prefix}--layout--size-${size}`]: size,\n      [`${prefix}--password-input`]: type === INPUT_TYPE.PASSWORD, //TODO deprecated, remove in v12\n      [`${prefix}--text-input__field-wrapper--decorator`]: hasAILabel,\n    });\n\n    const fieldOuterWrapperClasses = classMap({\n      [`${prefix}--text-input__field-outer-wrapper`]: true,\n      [`${prefix}--text-input__field-outer-wrapper--inline`]: inline,\n    });\n\n    const fieldWrapperClasses = classMap({\n      [`${prefix}--text-input__field-wrapper`]: true,\n      [`${prefix}--text-input__field-wrapper--warning`]: normalizedProps.warn,\n    });\n\n    const labelClasses = classMap({\n      [`${prefix}--label`]: true,\n      [`${prefix}--visually-hidden`]: hideLabel,\n      [`${prefix}--label--disabled`]: normalizedProps.disabled,\n    });\n\n    const helperTextClasses = classMap({\n      [`${prefix}--form__helper-text`]: true,\n      [`${prefix}--form__helper-text--disabled`]: normalizedProps.disabled,\n    });\n\n    //TODO deprecated, remove in v12\n    const passwordIsVisible = type !== INPUT_TYPE.PASSWORD;\n    const passwordVisibilityIcon = passwordIsVisible\n      ? ViewOff16({ class: `${prefix}--icon-visibility-off` })\n      : View16({ class: `${prefix}--icon-visibility-on` });\n\n    //TODO deprecated, remove in v12\n    const passwordVisibilityToggleClasses = classMap({\n      [`${prefix}--text-input--password__visibility__toggle`]: true,\n      [`${prefix}--btn`]: true,\n      [`${prefix}--btn--icon-only`]: true,\n      [`${prefix}--tooltip__trigger`]: true,\n      [`${prefix}--tooltip--a11y`]: true,\n      [`${prefix}--btn--disabled`]: normalizedProps.disabled,\n      [`${prefix}--tooltip--${this.tooltipDirection}`]: this.tooltipDirection,\n      [`${prefix}--tooltip--align-${this.tooltipAlignment}`]:\n        this.tooltipAlignment,\n    });\n\n    //TODO deprecated, remove in v12\n    const passwordButtonLabel = html`\n      <span class=\"${prefix}--assistive-text\">\n        ${passwordIsVisible ? this.hidePasswordLabel : this.showPasswordLabel}\n      </span>\n    `;\n\n    //TODO deprecated, remove in v12\n    const passwordVisibilityButton = () => html`\n      <button\n        type=\"button\"\n        class=\"${passwordVisibilityToggleClasses}\"\n        ?disabled=\"${normalizedProps.disabled}\"\n        @click=\"${this.togglePasswordVisibility}\">\n        ${!normalizedProps.disabled ? passwordButtonLabel : null}\n        ${passwordVisibilityIcon}\n      </button>\n    `;\n\n    const textCount = value?.length;\n\n    const counter =\n      enableCounter && maxCount\n        ? html` <label class=\"${counterClasses}\">\n            <slot name=\"label-text\">${textCount}/${maxCount}</slot>\n          </label>`\n        : null;\n\n    const labelWrapper = html`<div class=\"${prefix}--text-input__label-wrapper\">\n      <label class=\"${labelClasses}\"> ${label} </label> ${counter}\n    </div>`;\n\n    const helper = helperText\n      ? html`<div\n          class=\"${helperTextClasses}\"\n          id=\"helper-text\"\n          ?hidden=\"${normalizedProps.invalid || normalizedProps.warn}\">\n          <slot name=\"helper-text\"> ${helperText} </slot>\n        </div>`\n      : null;\n\n    return html`\n      <div class=\"${inputWrapperClasses}\">\n        ${!inline\n          ? labelWrapper\n          : html`<div class=\"${prefix}--text-input__label-helper-wrapper\">\n              ${labelWrapper} ${helper}\n            </div>`}\n        <div class=\"${fieldOuterWrapperClasses}\">\n          <div class=\"${fieldWrapperClasses}\" ?data-invalid=\"${invalid}\">\n            ${normalizedProps.icon}\n            <input\n              autocomplete=\"${this.autocomplete}\"\n              ?autofocus=\"${this.autofocus}\"\n              class=\"${inputClasses}\"\n              ?data-invalid=\"${invalid}\"\n              ?disabled=\"${disabled}\"\n              aria-describedby=\"helper-text\"\n              id=\"input\"\n              name=\"${ifNonEmpty(this.name)}\"\n              pattern=\"${ifNonEmpty(this.pattern)}\"\n              placeholder=\"${ifNonEmpty(this.placeholder)}\"\n              ?readonly=\"${readonly}\"\n              ?required=\"${required}\"\n              type=\"${ifNonEmpty(type)}\"\n              .value=\"${this._value}\"\n              maxlength=\"${ifNonEmpty(maxCount)}\"\n              @input=\"${handleInput}\" />\n            <slot name=\"ai-label\" @slotchange=\"${handleSlotChange}\"></slot>\n            <slot name=\"slug\" @slotchange=\"${handleSlotChange}\"></slot>\n            ${this.showPasswordVisibilityToggle &&\n            (type === INPUT_TYPE.PASSWORD || type === INPUT_TYPE.TEXT)\n              ? passwordVisibilityButton()\n              : null}\n          </div>\n          ${!inline ? helper : null}\n          <div\n            class=\"${prefix}--form-requirement\"\n            ?hidden=\"${!normalizedProps.invalid && !normalizedProps.warn}\">\n            <slot name=\"${normalizedProps['slot-name']}\">\n              ${normalizedProps['slot-text']}\n            </slot>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  updated() {\n    this.toggleAttribute('ai-label', this._hasAILabel);\n    const label = this.shadowRoot?.querySelector(\"slot[name='ai-label']\");\n\n    if (label) {\n      label?.classList.toggle(\n        `${prefix}--slug--revert`,\n        this.querySelector(`${prefix}-ai-label`)?.hasAttribute('revert-active')\n      );\n    } else {\n      this.shadowRoot\n        ?.querySelector(\"slot[name='slug']\")\n        ?.classList.toggle(\n          `${prefix}--slug--revert`,\n          this.querySelector(`${prefix}-slug`)?.hasAttribute('revert-active')\n        );\n    }\n  }\n\n  /**\n   * A selector that will return the slug item.\n   *\n   * remove in v12\n   */\n  static get slugItem() {\n    return `${prefix}-slug`;\n  }\n\n  /**\n   * A selector that will return the AI Label item.\n   */\n  static get aiLabelItem() {\n    return `${prefix}-ai-label`;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n  static styles = styles;\n}\n\nexport default CDSTextInput;\n"],"names":["customElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAKG;AA+BH;;;;;;;AAOG;AAEH,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAA;AAA/D,IAAA,WAAA,GAAA;;AACE;;AAEG;QACO,IAAW,CAAA,WAAA,GAAG,KAAK;AA8B7B;;AAEG;QACO,IAAM,CAAA,MAAA,GAAG,EAAE;AAoBrB;;AAEG;QAEH,IAAY,CAAA,YAAA,GAAG,EAAE;AAEjB;;AAEG;QAEH,IAAS,CAAA,SAAA,GAAG,KAAK;AAEjB;;AAEG;QAEH,IAAQ,CAAA,QAAA,GAAG,KAAK;AAEhB;;AAEG;QAEH,IAAa,CAAA,aAAA,GAAG,KAAK;AAErB;;AAEG;QAEH,IAAU,CAAA,UAAA,GAAG,EAAE;AAEf;;AAEG;QAEH,IAAO,CAAA,OAAA,GAAG,KAAK;AAEf;;AAEG;QAEH,IAAW,CAAA,WAAA,GAAG,EAAE;AAQhB;;AAEG;QAEH,IAAI,CAAA,IAAA,GAAG,KAAK;AAEZ;;AAEG;QAEH,IAAQ,CAAA,QAAA,GAAG,EAAE;AAEb;;AAEG;QAEH,IAAS,CAAA,SAAA,GAAG,KAAK;AAEjB;;AAEG;QAEH,IAAK,CAAA,KAAA,GAAG,EAAE;AAEV;;AAEG;QAEH,IAAI,CAAA,IAAA,GAAG,EAAE;AAET;;AAEG;QAEH,IAAO,CAAA,OAAA,GAAG,EAAE;AAEZ;;AAEG;QAEH,IAAW,CAAA,WAAA,GAAG,EAAE;AAEhB;;AAEG;QAEH,IAAQ,CAAA,QAAA,GAAG,KAAK;AAEhB;;AAEG;QAEH,IAAQ,CAAA,QAAA,GAAG,KAAK;AAEhB;;AAEG;QAEH,IAAuB,CAAA,uBAAA,GAAG,6BAA6B;AAEvD;;;;AAIG;QAEH,IAAiB,CAAA,iBAAA,GAAG,eAAe;AAEnC;;;;AAIG;QAEH,IAAiB,CAAA,iBAAA,GAAG,eAAe;AAEnC;;;;AAIG;QAMH,IAA4B,CAAA,4BAAA,GAAG,KAAK;AAEpC;;AAEG;AAEH,QAAA,IAAA,CAAA,IAAI,GAAG,UAAU,CAAC,MAAM;AAExB;;AAEG;QAEH,IAAM,CAAA,MAAA,GAAG,KAAK;AAEd;;;AAGG;AAEH,QAAA,IAAA,CAAA,gBAAgB,GAAG,uBAAuB,CAAC,MAAM;AAEjD;;;AAGG;AAEH,QAAA,IAAA,CAAA,gBAAgB,GAAG,uBAAuB,CAAC,MAAM;AAEjD;;AAEG;AAEH,QAAA,IAAA,CAAA,IAAI,GAAG,UAAU,CAAC,IAAI;AAEtB;;AAEG;QAEH,IAAe,CAAA,eAAA,GAAG,EAAE;;AA/NpB;;AAEG;IACO,iBAAiB,CAAC,EAAE,MAAM,EAAS,EAAA;QAC3C,MAAM,UAAU,GAAI;AACjB,aAAA,aAAa;aACb,MAAM,CAAC,CAAC,IAAI,KACV,IAAoB,CAAC,OAAO,KAAK;cAC7B,IAAoB,CAAC,OAAO,CAC1B,IAAI,CAAC,WAAmC,CAAC,WAAW,CACtD;;gBAEA,IAAoB,CAAC,OAAO,CAC1B,IAAI,CAAC,WAAmC,CAAC,QAAQ;cAEpD,KAAK,CACV;AAEH,QAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC;QACrC,UAAU,CAAC,CAAC,CAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC;QAC3D,IAAI,CAAC,aAAa,EAAE;;AAatB;;;;;AAKG;IACO,YAAY,CAAC,EAAE,MAAM,EAAS,EAAA;AACtC,QAAA,IAAI,CAAC,KAAK,GAAI,MAA2B,CAAC,KAAK;;AAGjD,IAAA,eAAe,CAAC,KAAoB,EAAA;AAClC,QAAA,MAAM,EAAE,QAAQ,EAAE,GAAG,KAAK;QAC1B,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI;QACtC,IAAI,CAAC,QAAQ,EAAE;AACb,YAAA,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC;;;AAkLhC;;AAEG;AAEH,IAAA,IAAI,KAAK,GAAA;;;AAGP,QAAA,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK;;;QAG1B,OAAO,IAAI,CAAC,MAAM;;IAGpB,IAAI,KAAK,CAAC,KAAK,EAAA;AACb,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM;AAC5B,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK;;AAEnB,QAAA,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,QAAQ,CAAC;;;AAGrC,QAAA,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK;;;AAI7B;;;;AAIG;IACK,wBAAwB,GAAA;AAC9B,QAAA,IAAI,CAAC,IAAI;AACP,YAAA,IAAI,CAAC,IAAI,KAAK,UAAU,CAAC,QAAQ,GAAG,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,QAAQ;;IAG7E,MAAM,GAAA;QACJ,MAAM,EACJ,QAAQ,EACR,aAAa,EACb,UAAU,EACV,SAAS,EACT,MAAM,EACN,OAAO,EACP,WAAW,EACX,KAAK,EACL,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,QAAQ,EACR,KAAK,EACL,YAAY,EAAE,WAAW,EACzB,WAAW,EAAE,UAAU,EACvB,iBAAiB,EAAE,gBAAgB,GACpC,GAAG,IAAI;QAER,MAAM,WAAW,GAAG,eAAe,CAAC;YAClC,KAAK,EAAE,CAAG,EAAA,MAAM,CAA4B,0BAAA,CAAA;AAC7C,SAAA,CAAC;QAEF,MAAM,QAAQ,GAAG,kBAAkB,CAAC;AAClC,YAAA,KAAK,EAAE,CAAA,EAAG,MAAM,CAAA,2BAAA,EAA8B,MAAM,CAAqC,mCAAA,CAAA;AAC1F,SAAA,CAAC;AAEF,QAAA,MAAM,eAAe,GAAG;AACtB,YAAA,QAAQ,EAAE,CAAC,QAAQ,IAAI,QAAQ;AAC/B,YAAA,OAAO,EAAE,CAAC,QAAQ,IAAI,OAAO;AAC7B,YAAA,IAAI,EAAE,CAAC,QAAQ,IAAI,CAAC,OAAO,IAAI,IAAI;AACnC,YAAA,WAAW,EAAE,EAAE;AACf,YAAA,WAAW,EAAE,EAAE;AACf,YAAA,IAAI,EAAE,IAAI;SACX;AAED,QAAA,IAAI,eAAe,CAAC,OAAO,EAAE;AAC3B,YAAA,eAAe,CAAC,IAAI,GAAG,WAAW;AAClC,YAAA,eAAe,CAAC,WAAW,CAAC,GAAG,cAAc;AAC7C,YAAA,eAAe,CAAC,WAAW,CAAC,GAAG,WAAW;;AACrC,aAAA,IAAI,eAAe,CAAC,IAAI,EAAE;AAC/B,YAAA,eAAe,CAAC,IAAI,GAAG,QAAQ;AAC/B,YAAA,eAAe,CAAC,WAAW,CAAC,GAAG,WAAW;AAC1C,YAAA,eAAe,CAAC,WAAW,CAAC,GAAG,QAAQ;;QAGzC,MAAM,cAAc,GAAG,QAAQ,CAAC;AAC9B,YAAA,CAAC,CAAG,EAAA,MAAM,CAAS,OAAA,CAAA,GAAG,IAAI;AAC1B,YAAA,CAAC,CAAG,EAAA,MAAM,CAA6B,2BAAA,CAAA,GAAG,IAAI;AAC9C,YAAA,CAAC,CAAG,EAAA,MAAM,CAAmB,iBAAA,CAAA,GAAG,QAAQ;AACzC,SAAA,CAAC;QAEF,MAAM,mBAAmB,GAAG,QAAQ,CAAC;AACnC,YAAA,CAAC,CAAG,EAAA,MAAM,CAAa,WAAA,CAAA,GAAG,IAAI;AAC9B,YAAA,CAAC,CAAG,EAAA,MAAM,CAAsB,oBAAA,CAAA,GAAG,IAAI;AACvC,YAAA,CAAC,CAAG,EAAA,MAAM,CAA8B,4BAAA,CAAA,GAAG,MAAM;AACjD,YAAA,CAAC,CAAG,EAAA,MAAM,CAAgC,8BAAA,CAAA,GAAG,QAAQ;YACrD,CAAC,CAAA,EAAG,MAAM,CAAuC,qCAAA,CAAA,GAC/C,MAAM,IAAI,eAAe,CAAC,OAAO;AACpC,SAAA,CAAC;QAEF,MAAM,YAAY,GAAG,QAAQ,CAAC;AAC5B,YAAA,CAAC,CAAG,EAAA,MAAM,CAAc,YAAA,CAAA,GAAG,IAAI;AAC/B,YAAA,CAAC,GAAG,MAAM,CAAA,qBAAA,CAAuB,GAAG,eAAe,CAAC,OAAO;AAC3D,YAAA,CAAC,GAAG,MAAM,CAAA,qBAAA,CAAuB,GAAG,eAAe,CAAC,IAAI;AACxD,YAAA,CAAC,GAAG,MAAM,CAAA,cAAA,EAAiB,IAAI,CAAE,CAAA,GAAG,IAAI;AACxC,YAAA,CAAC,GAAG,MAAM,CAAA,eAAA,EAAkB,IAAI,CAAE,CAAA,GAAG,IAAI;YACzC,CAAC,CAAA,EAAG,MAAM,CAAA,gBAAA,CAAkB,GAAG,IAAI,KAAK,UAAU,CAAC,QAAQ;AAC3D,YAAA,CAAC,CAAG,EAAA,MAAM,CAAwC,sCAAA,CAAA,GAAG,UAAU;AAChE,SAAA,CAAC;QAEF,MAAM,wBAAwB,GAAG,QAAQ,CAAC;AACxC,YAAA,CAAC,CAAG,EAAA,MAAM,CAAmC,iCAAA,CAAA,GAAG,IAAI;AACpD,YAAA,CAAC,CAAG,EAAA,MAAM,CAA2C,yCAAA,CAAA,GAAG,MAAM;AAC/D,SAAA,CAAC;QAEF,MAAM,mBAAmB,GAAG,QAAQ,CAAC;AACnC,YAAA,CAAC,CAAG,EAAA,MAAM,CAA6B,2BAAA,CAAA,GAAG,IAAI;AAC9C,YAAA,CAAC,GAAG,MAAM,CAAA,oCAAA,CAAsC,GAAG,eAAe,CAAC,IAAI;AACxE,SAAA,CAAC;QAEF,MAAM,YAAY,GAAG,QAAQ,CAAC;AAC5B,YAAA,CAAC,CAAG,EAAA,MAAM,CAAS,OAAA,CAAA,GAAG,IAAI;AAC1B,YAAA,CAAC,CAAG,EAAA,MAAM,CAAmB,iBAAA,CAAA,GAAG,SAAS;AACzC,YAAA,CAAC,GAAG,MAAM,CAAA,iBAAA,CAAmB,GAAG,eAAe,CAAC,QAAQ;AACzD,SAAA,CAAC;QAEF,MAAM,iBAAiB,GAAG,QAAQ,CAAC;AACjC,YAAA,CAAC,CAAG,EAAA,MAAM,CAAqB,mBAAA,CAAA,GAAG,IAAI;AACtC,YAAA,CAAC,GAAG,MAAM,CAAA,6BAAA,CAA+B,GAAG,eAAe,CAAC,QAAQ;AACrE,SAAA,CAAC;;AAGF,QAAA,MAAM,iBAAiB,GAAG,IAAI,KAAK,UAAU,CAAC,QAAQ;QACtD,MAAM,sBAAsB,GAAG;cAC3B,SAAS,CAAC,EAAE,KAAK,EAAE,CAAG,EAAA,MAAM,CAAuB,qBAAA,CAAA,EAAE;cACrD,MAAM,CAAC,EAAE,KAAK,EAAE,CAAA,EAAG,MAAM,CAAA,oBAAA,CAAsB,EAAE,CAAC;;QAGtD,MAAM,+BAA+B,GAAG,QAAQ,CAAC;AAC/C,YAAA,CAAC,CAAG,EAAA,MAAM,CAA4C,0CAAA,CAAA,GAAG,IAAI;AAC7D,YAAA,CAAC,CAAG,EAAA,MAAM,CAAO,KAAA,CAAA,GAAG,IAAI;AACxB,YAAA,CAAC,CAAG,EAAA,MAAM,CAAkB,gBAAA,CAAA,GAAG,IAAI;AACnC,YAAA,CAAC,CAAG,EAAA,MAAM,CAAoB,kBAAA,CAAA,GAAG,IAAI;AACrC,YAAA,CAAC,CAAG,EAAA,MAAM,CAAiB,eAAA,CAAA,GAAG,IAAI;AAClC,YAAA,CAAC,GAAG,MAAM,CAAA,eAAA,CAAiB,GAAG,eAAe,CAAC,QAAQ;YACtD,CAAC,CAAA,EAAG,MAAM,CAAA,WAAA,EAAc,IAAI,CAAC,gBAAgB,CAAA,CAAE,GAAG,IAAI,CAAC,gBAAgB;YACvE,CAAC,CAAA,EAAG,MAAM,CAAA,iBAAA,EAAoB,IAAI,CAAC,gBAAgB,CAAA,CAAE,GACnD,IAAI,CAAC,gBAAgB;AACxB,SAAA,CAAC;;QAGF,MAAM,mBAAmB,GAAG,IAAI,CAAA;qBACf,MAAM,CAAA;UACjB,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB;;KAExE;;AAGD,QAAA,MAAM,wBAAwB,GAAG,MAAM,IAAI,CAAA;;;iBAG9B,+BAA+B,CAAA;AAC3B,mBAAA,EAAA,eAAe,CAAC,QAAQ,CAAA;AAC3B,gBAAA,EAAA,IAAI,CAAC,wBAAwB,CAAA;UACrC,CAAC,eAAe,CAAC,QAAQ,GAAG,mBAAmB,GAAG,IAAI;UACtD,sBAAsB;;KAE3B;QAED,MAAM,SAAS,GAAG,KAAK,KAAA,IAAA,IAAL,KAAK,KAAL,MAAA,GAAA,MAAA,GAAA,KAAK,CAAE,MAAM;AAE/B,QAAA,MAAM,OAAO,GACX,aAAa,IAAI;AACf,cAAE,IAAI,CAAA,CAAA,eAAA,EAAkB,cAAc,CAAA;AACR,oCAAA,EAAA,SAAS,IAAI,QAAQ,CAAA;AACxC,kBAAA;cACT,IAAI;AAEV,QAAA,MAAM,YAAY,GAAG,IAAI,CAAA,eAAe,MAAM,CAAA;sBAC5B,YAAY,CAAA,GAAA,EAAM,KAAK,CAAA,UAAA,EAAa,OAAO;WACtD;QAEP,MAAM,MAAM,GAAG;cACX,IAAI,CAAA,CAAA;mBACO,iBAAiB,CAAA;;AAEf,mBAAA,EAAA,eAAe,CAAC,OAAO,IAAI,eAAe,CAAC,IAAI,CAAA;sCAC9B,UAAU,CAAA;AACjC,cAAA;cACP,IAAI;AAER,QAAA,OAAO,IAAI,CAAA;oBACK,mBAAmB,CAAA;AAC7B,QAAA,EAAA,CAAC;AACD,cAAE;AACF,cAAE,IAAI,CAAA,CAAA,YAAA,EAAe,MAAM,CAAA;AACrB,cAAA,EAAA,YAAY,IAAI,MAAM;AACnB,kBAAA,CAAA;sBACG,wBAAwB,CAAA;AACtB,sBAAA,EAAA,mBAAmB,oBAAoB,OAAO,CAAA;AACxD,YAAA,EAAA,eAAe,CAAC,IAAI;;AAEJ,4BAAA,EAAA,IAAI,CAAC,YAAY,CAAA;AACnB,0BAAA,EAAA,IAAI,CAAC,SAAS,CAAA;uBACnB,YAAY,CAAA;+BACJ,OAAO,CAAA;2BACX,QAAQ,CAAA;;;AAGb,oBAAA,EAAA,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AAClB,uBAAA,EAAA,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AACpB,2BAAA,EAAA,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;2BAC9B,QAAQ,CAAA;2BACR,QAAQ,CAAA;sBACb,UAAU,CAAC,IAAI,CAAC,CAAA;AACd,sBAAA,EAAA,IAAI,CAAC,MAAM,CAAA;2BACR,UAAU,CAAC,QAAQ,CAAC,CAAA;wBACvB,WAAW,CAAA;iDACc,gBAAgB,CAAA;6CACpB,gBAAgB,CAAA;AAC/C,YAAA,EAAA,IAAI,CAAC,4BAA4B;aAClC,IAAI,KAAK,UAAU,CAAC,QAAQ,IAAI,IAAI,KAAK,UAAU,CAAC,IAAI;cACrD,wBAAwB;AAC1B,cAAE,IAAI;;YAER,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI;;qBAEd,MAAM,CAAA;AACJ,qBAAA,EAAA,CAAC,eAAe,CAAC,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAA;0BAC9C,eAAe,CAAC,WAAW,CAAC,CAAA;gBACtC,eAAe,CAAC,WAAW,CAAC;;;;;KAKvC;;IAGH,OAAO,GAAA;;QACL,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC;QAClD,MAAM,KAAK,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAE,aAAa,CAAC,uBAAuB,CAAC;QAErE,IAAI,KAAK,EAAE;AACT,YAAA,KAAK,KAAL,IAAA,IAAA,KAAK,KAAL,MAAA,GAAA,MAAA,GAAA,KAAK,CAAE,SAAS,CAAC,MAAM,CACrB,CAAA,EAAG,MAAM,CAAA,cAAA,CAAgB,EACzB,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,CAAC,CAAG,EAAA,MAAM,CAAW,SAAA,CAAA,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAA,YAAY,CAAC,eAAe,CAAC,CACxE;;aACI;AACL,YAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,0CACX,aAAa,CAAC,mBAAmB,CAAC,MAClC,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAA,SAAS,CAAC,MAAM,CAChB,CAAG,EAAA,MAAM,CAAgB,cAAA,CAAA,EACzB,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,CAAC,CAAG,EAAA,MAAM,CAAO,KAAA,CAAA,CAAC,0CAAE,YAAY,CAAC,eAAe,CAAC,CACpE;;;AAIP;;;;AAIG;AACH,IAAA,WAAW,QAAQ,GAAA;QACjB,OAAO,CAAA,EAAG,MAAM,CAAA,KAAA,CAAO;;AAGzB;;AAEG;AACH,IAAA,WAAW,WAAW,GAAA;QACpB,OAAO,CAAA,EAAG,MAAM,CAAA,SAAA,CAAW;;;AAGtB,YAAiB,CAAA,iBAAA,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACnB,UAAU,CAAC,iBAAiB,KAC/B,cAAc,EAAE,IAAI,EAAA,CAFE;AAIjB,YAAM,CAAA,MAAA,GAAG,MAAH;AA7dH,UAAA,CAAA;IADT,KAAK,CAAC,OAAO;AACsB,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,QAAA,EAAA,MAAA,CAAA;AA6BpC,UAAA,CAAA;AADC,IAAA,QAAQ;AACS,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,cAAA,EAAA,MAAA,CAAA;AAMlB,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE;AACT,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,WAAA,EAAA,MAAA,CAAA;AAMlB,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AACzB,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA;AAMjB,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gBAAgB,EAAE,OAAO,EAAE,IAAI,EAAE;AACjD,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,eAAA,EAAA,MAAA,CAAA;AAMtB,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,SAAS,EAAE,aAAa,EAAE;AACtB,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,YAAA,EAAA,MAAA,CAAA;AAMhB,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AAC1B,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,SAAA,EAAA,MAAA,CAAA;AAMhB,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,SAAS,EAAE,cAAc,EAAE;AACtB,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,aAAA,EAAA,MAAA,CAAA;AAMjB,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI,EAAE;AACxD,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA;AAMT,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AAC7B,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,MAAA,EAAA,MAAA,CAAA;AAMb,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,SAAS,EAAE,WAAW,EAAE;AACtB,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA;AAMd,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AACjD,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,WAAA,EAAA,MAAA,CAAA;AAMlB,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE;AACrB,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,OAAA,EAAA,MAAA,CAAA;AAMX,UAAA,CAAA;AADC,IAAA,QAAQ;AACC,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,MAAA,EAAA,MAAA,CAAA;AAMV,UAAA,CAAA;AADC,IAAA,QAAQ;AACI,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,SAAA,EAAA,MAAA,CAAA;AAMb,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE;AACV,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,aAAA,EAAA,MAAA,CAAA;AAMjB,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AACzB,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA;AAMjB,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AACzB,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA;AAMjB,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,SAAS,EAAE,2BAA2B,EAAE;AACI,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,yBAAA,EAAA,MAAA,CAAA;AAQxD,UAAA,CAAA;AADC,IAAA,QAAQ;AAC2B,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,mBAAA,EAAA,MAAA,CAAA;AAQpC,UAAA,CAAA;AADC,IAAA,QAAQ;AAC2B,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,mBAAA,EAAA,MAAA,CAAA;AAYpC,UAAA,CAAA;AALC,IAAA,QAAQ,CAAC;AACR,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,SAAS,EAAE,iCAAiC;AAC5C,QAAA,OAAO,EAAE,IAAI;KACd;AACoC,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,8BAAA,EAAA,MAAA,CAAA;AAMrC,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE;AACF,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,MAAA,EAAA,MAAA,CAAA;AAMzB,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AAC3B,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,QAAA,EAAA,MAAA,CAAA;AAOf,UAAA,CAAA;AADC,IAAA,QAAQ;AACyC,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,kBAAA,EAAA,MAAA,CAAA;AAOlD,UAAA,CAAA;AADC,IAAA,QAAQ;AACyC,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,kBAAA,EAAA,MAAA,CAAA;AAMlD,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE;AACJ,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,MAAA,EAAA,MAAA,CAAA;AAMvB,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,SAAS,EAAE,kBAAkB,EAAE;AACtB,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,iBAAA,EAAA,MAAA,CAAA;AAMrB,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE;AAS1B,CAAA,EAAA,YAAA,CAAA,SAAA,EAAA,OAAA,EAAA,IAAA,CAAA;AAnPG,YAAY,GAAA,UAAA,CAAA;AADjB,IAAAA,aAAa,CAAC,CAAA,EAAG,MAAM,CAAA,WAAA,CAAa;AAC/B,CAAA,EAAA,YAAY,CA8fjB;AAED,qBAAe,YAAY;;;;"}