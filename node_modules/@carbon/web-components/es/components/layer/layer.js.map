{"version":3,"file":"layer.js","sources":["../../../src/components/layer/layer.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\nimport { prefix } from '../../globals/settings';\nimport styles from './layer.scss?lit';\n\n/**\n * Layer level constants\n */\nexport const MIN_LEVEL = 0;\nexport const MAX_LEVEL = 2;\nexport const levels = ['zero', 'one', 'two'];\nexport type LayerLevel = 0 | 1 | 2;\n\n/**\n * Basic layer\n *\n * @element cds-layer\n * @fires cds-use-layer\n *   The custom event that returns the layer level and the layer element.\n * @slot children - The elements contained within the component.\n */\n@customElement(`${prefix}-layer`)\nclass CDSLayer extends LitElement {\n  /**\n   * Specify the layer level and override any existing levels based on hierarchy\n   */\n  @property({ type: Number, reflect: true })\n  level = 0;\n\n  @property()\n  layers;\n\n  @property({ type: Boolean, attribute: 'with-background' })\n  withBackground;\n\n  updated() {\n    if (!this.layers) {\n      this.layers = this.querySelectorAll(\n        (this.constructor as typeof CDSLayer).selectorLayer\n      );\n    }\n\n    this.layers.forEach((item) => {\n      const nextLevel = Math.max(\n        MIN_LEVEL,\n        Math.min(this.level + 1, MAX_LEVEL)\n      );\n      (item as HTMLElement).setAttribute('level', nextLevel.toString());\n    });\n\n    this.dispatchEvent(\n      new CustomEvent((this.constructor as typeof CDSLayer).eventUseLayer, {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: {\n          layer: this,\n          level: this.level,\n        },\n      })\n    );\n  }\n\n  render() {\n    return html` <slot></slot> `;\n  }\n\n  /**\n   * A selector that selects a layer component.\n   */\n  static get selectorLayer() {\n    return `${prefix}-layer`;\n  }\n\n  /**\n   * A selector that selects a layer component.\n   */\n  static get eventUseLayer() {\n    return `${prefix}-use-layer`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSLayer;\n"],"names":["customElement"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;AAKG;AAQH;;AAEG;AACI,MAAM,SAAS,GAAG;AAClB,MAAM,SAAS,GAAG;AACZ,MAAA,MAAM,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK;AAG3C;;;;;;;AAOG;AAEH,IAAM,QAAQ,GAAd,MAAM,QAAS,SAAQ,UAAU,CAAA;AAAjC,IAAA,WAAA,GAAA;;AACE;;AAEG;QAEH,IAAK,CAAA,KAAA,GAAG,CAAC;;IAQT,OAAO,GAAA;AACL,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAChB,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAChC,IAAI,CAAC,WAA+B,CAAC,aAAa,CACpD;;QAGH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;YAC3B,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CACxB,SAAS,EACT,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,SAAS,CAAC,CACpC;YACA,IAAoB,CAAC,YAAY,CAAC,OAAO,EAAE,SAAS,CAAC,QAAQ,EAAE,CAAC;AACnE,SAAC,CAAC;QAEF,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAE,IAAI,CAAC,WAA+B,CAAC,aAAa,EAAE;AACnE,YAAA,OAAO,EAAE,IAAI;AACb,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,MAAM,EAAE;AACN,gBAAA,KAAK,EAAE,IAAI;gBACX,KAAK,EAAE,IAAI,CAAC,KAAK;AAClB,aAAA;AACF,SAAA,CAAC,CACH;;IAGH,MAAM,GAAA;QACJ,OAAO,IAAI,CAAA,CAAA,eAAA,CAAiB;;AAG9B;;AAEG;AACH,IAAA,WAAW,aAAa,GAAA;QACtB,OAAO,CAAA,EAAG,MAAM,CAAA,MAAA,CAAQ;;AAG1B;;AAEG;AACH,IAAA,WAAW,aAAa,GAAA;QACtB,OAAO,CAAA,EAAG,MAAM,CAAA,UAAA,CAAY;;;AAGvB,QAAM,CAAA,MAAA,GAAG,MAAH;AAtDb,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE;AAC/B,CAAA,EAAA,QAAA,CAAA,SAAA,EAAA,OAAA,EAAA,MAAA,CAAA;AAGV,UAAA,CAAA;AADC,IAAA,QAAQ;AACF,CAAA,EAAA,QAAA,CAAA,SAAA,EAAA,QAAA,EAAA,MAAA,CAAA;AAGP,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,iBAAiB,EAAE;AAC1C,CAAA,EAAA,QAAA,CAAA,SAAA,EAAA,gBAAA,EAAA,MAAA,CAAA;AAXX,QAAQ,GAAA,UAAA,CAAA;AADb,IAAAA,aAAa,CAAC,CAAA,EAAG,MAAM,CAAA,MAAA,CAAQ;AAC1B,CAAA,EAAA,QAAQ,CA4Db;AAED,iBAAe,QAAQ;;;;"}