{"version":3,"file":"code-snippet.js","sources":["../../../src/components/code-snippet/code-snippet.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport ChevronDown16 from '@carbon/icons/lib/chevron--down/16.js';\nimport { prefix } from '../../globals/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport { CODE_SNIPPET_COLOR_SCHEME, CODE_SNIPPET_TYPE } from './defs';\nimport styles from './code-snippet.scss?lit';\nimport Handle from '../../globals/internal/handle';\nimport '../copy-button/index';\nimport '../copy/copy';\nimport '../button/button';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { CODE_SNIPPET_COLOR_SCHEME, CODE_SNIPPET_TYPE };\n\n/**\n * Observes resize of the given element with the given resize observer.\n *\n * @param observer The resize observer.\n * @param elem The element to observe the resize.\n */\nconst observeResize = (observer: ResizeObserver, elem: Element) => {\n  if (!elem) {\n    return null;\n  }\n  observer.observe(elem);\n  return {\n    release() {\n      observer.unobserve(elem);\n      return null;\n    },\n  } as Handle;\n};\n\n/**\n * Basic code snippet.\n *\n * @element cds-code-snippet\n */\n@customElement(`${prefix}-code-snippet`)\nclass CDSCodeSnippet extends FocusMixin(LitElement) {\n  /**\n   * `true` to expand multi-line variant of code snippet.\n   */\n  private _expandedCode = false;\n\n  /**\n   * The handle for observing resize of the parent element of this element.\n   */\n  private _hObserveResize: Handle | null = null;\n\n  /**\n   * Row height in pixels\n   */\n  private _rowHeightInPixels = 16;\n\n  /**\n   * `true` if code-snippet has right overflow\n   */\n  private _hasRightOverflow = true;\n\n  /**\n   * `true` if code-snippet has left overflow\n   */\n  private _hasLeftOverflow = false;\n\n  /**\n   * `true` if show more or show less btn is visible\n   */\n  private _shouldShowMoreLessBtn = false;\n\n  /**\n   * Handles `click` event on the copy button.\n   */\n  private _handleCopyClick() {\n    const { ownerDocument: doc } = this;\n    const selection = doc!.defaultView!.getSelection();\n    selection!.removeAllRanges();\n    const code = doc!.createElement('code');\n    code.className = `${prefix}--visually-hidden`;\n    const pre = doc!.createElement('pre');\n    const text = Array.from(this.childNodes).filter(\n      (node) => node.nodeType === Node.TEXT_NODE\n    );\n    pre.textContent = this.copyText || text[0].textContent;\n    code.appendChild(pre);\n    // Using `<code>` in shadow DOM seems to lose the LFs in some browsers\n    doc!.body.appendChild(code);\n    const range = doc!.createRange();\n    range.selectNodeContents(code);\n    selection!.addRange(range);\n    doc!.execCommand('copy');\n    doc!.body.removeChild(code);\n    selection!.removeAllRanges();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private _getCodeRefDimensions(ref) {\n    const {\n      clientWidth: codeClientWidth,\n      scrollLeft: codeScrollLeft,\n      scrollWidth: codeScrollWidth,\n    } = ref;\n\n    return {\n      horizontalOverflow: codeScrollWidth > codeClientWidth,\n      codeClientWidth,\n      codeScrollWidth,\n      codeScrollLeft,\n    };\n  }\n  /**\n   * Handles `scroll` event.\n   */\n  private _handleScroll() {\n    if (this) {\n      const codeContainerRef = this?.shadowRoot?.querySelector(\n        `.${prefix}--snippet-container`\n      );\n      const codeContentRef = codeContainerRef?.querySelector('pre');\n      if (\n        this.type === CODE_SNIPPET_TYPE.INLINE ||\n        (this.type === CODE_SNIPPET_TYPE.SINGLE && !codeContainerRef) ||\n        (this.type === CODE_SNIPPET_TYPE.MULTI && !codeContentRef)\n      ) {\n        return;\n      }\n\n      const {\n        horizontalOverflow,\n        codeClientWidth,\n        codeScrollWidth,\n        codeScrollLeft,\n      } =\n        this.type === CODE_SNIPPET_TYPE.SINGLE\n          ? this._getCodeRefDimensions(codeContainerRef)\n          : this._getCodeRefDimensions(codeContentRef);\n\n      this._hasLeftOverflow = horizontalOverflow && !!codeScrollLeft;\n      this._hasRightOverflow =\n        horizontalOverflow &&\n        codeScrollLeft + codeClientWidth !== codeScrollWidth;\n      this.requestUpdate();\n    }\n  }\n\n  /**\n   * Handles `click` event on the show more or show less button.\n   */\n  private _handleClickExpanded() {\n    this._expandedCode = !this._expandedCode;\n    this.requestUpdate();\n  }\n\n  /**\n   * The `ResizeObserver` instance for observing element resizes for re-positioning floating menu position.\n   */\n  // TODO: Wait for `.d.ts` update to support `ResizeObserver`\n  // @ts-ignore\n  private _resizeObserver = new ResizeObserver(() => {\n    const codeContainerRef = this.shadowRoot?.querySelector(\n      `.${prefix}--snippet-container`\n    );\n    const codeContentRef = codeContainerRef?.querySelector('code'); // PRE?\n    const {\n      type,\n      maxCollapsedNumberOfRows,\n      maxExpandedNumberOfRows,\n      minExpandedNumberOfRows,\n      _rowHeightInPixels: rowHeightInPixels,\n      _handleScroll: handleScroll,\n    } = this;\n    if (codeContentRef && type === CODE_SNIPPET_TYPE.MULTI) {\n      const { height } = codeContentRef.getBoundingClientRect();\n      if (\n        maxCollapsedNumberOfRows > 0 &&\n        (maxExpandedNumberOfRows <= 0 ||\n          maxExpandedNumberOfRows > maxCollapsedNumberOfRows) &&\n        height > maxCollapsedNumberOfRows * rowHeightInPixels\n      ) {\n        this._shouldShowMoreLessBtn = true;\n      } else {\n        this._shouldShowMoreLessBtn = false;\n      }\n      if (\n        this._expandedCode &&\n        minExpandedNumberOfRows > 0 &&\n        height <= minExpandedNumberOfRows * rowHeightInPixels\n      ) {\n        this._expandedCode = false;\n      }\n    }\n    if (\n      (codeContentRef && type === CODE_SNIPPET_TYPE.MULTI) ||\n      (codeContainerRef && type === CODE_SNIPPET_TYPE.SINGLE)\n    ) {\n      handleScroll();\n    }\n    this.requestUpdate();\n  });\n\n  /**\n   * Optional text to copy. If not specified, the `children` node's `innerText`\n   * will be used as the copy value.\n   */\n  @property({ attribute: 'copy-text' })\n  copyText = '';\n\n  /**\n   * `true` if the button should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * Specify the string displayed when the snippet is copied\n   */\n  @property()\n  feedback = 'Copied!';\n\n  /**\n   * Specify the time it takes for the feedback message to timeout\n   */\n  @property({ type: Number, attribute: 'feedback-timeout' })\n  feedbackTimeout = 2000;\n\n  /**\n   * Specify whether or not a copy button should be used/rendered.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'hide-copy-button' })\n  hideCopyButton = false;\n\n  /**\n   * Specify the maximum number of rows to be shown when in collapsed view\n   */\n  @property()\n  maxCollapsedNumberOfRows = 15;\n\n  /**\n   * Specify the maximum number of rows to be shown when in expanded view\n   */\n  @property()\n  maxExpandedNumberOfRows = 0;\n\n  /**\n   * Specify the minimum number of rows to be shown when in collapsed view\n   */\n  @property()\n  minCollapsedNumberOfRows = 3;\n\n  /**\n   * Specify the minimum number of rows to be shown when in expanded view\n   */\n  @property()\n  minExpandedNumberOfRows = 16;\n\n  /**\n   * Specify a string that is displayed when the Code Snippet has been\n   * interacted with to show less lines\n   */\n  @property({ attribute: 'show-less-text' })\n  showLessText = 'Show less';\n\n  /**\n   * Specify a string that is displayed when the Code Snippet text is more\n   * than 15 lines\n   */\n  @property({ attribute: 'show-more-text' })\n  showMoreText = 'Show more';\n\n  /**\n   * Tooltip content for the copy button.\n   */\n  @property({ attribute: 'tooltip-content' })\n  tooltipContent = 'Copy to clipboard';\n\n  /**\n   * `true` if the button should be disabled.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'wrap-text' })\n  wrapText = false;\n\n  /**\n   * The type of code snippet.\n   */\n  @property({ reflect: true })\n  type = CODE_SNIPPET_TYPE.SINGLE;\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this._hObserveResize) {\n      this._hObserveResize = this._hObserveResize.release();\n    }\n    this._hObserveResize = observeResize(this._resizeObserver, this);\n  }\n\n  disconnectedCallback() {\n    if (this._hObserveResize) {\n      this._hObserveResize = this._hObserveResize.release();\n    }\n  }\n\n  updated() {\n    if (this._expandedCode) {\n      this.setAttribute('expanded-code', '');\n    } else {\n      this.removeAttribute('expanded-code');\n    }\n  }\n\n  render() {\n    const {\n      disabled,\n      feedback,\n      feedbackTimeout,\n      hideCopyButton,\n      maxExpandedNumberOfRows,\n      minExpandedNumberOfRows,\n      maxCollapsedNumberOfRows,\n      minCollapsedNumberOfRows,\n      type,\n      wrapText,\n      tooltipContent,\n      showMoreText,\n      showLessText,\n      _expandedCode: expandedCode,\n      _handleCopyClick: handleCopyClick,\n      _handleScroll: handleScroll,\n      _hasRightOverflow: hasRightOverflow,\n      _hasLeftOverflow: hasLeftOverflow,\n      _rowHeightInPixels: rowHeightInPixels,\n      _shouldShowMoreLessBtn: shouldShowMoreLessBtn,\n    } = this;\n\n    let classes = `${prefix}--snippet`;\n    type ? (classes += ` ${prefix}--snippet--${type}`) : '';\n    type !== 'inline' && disabled\n      ? (classes += ` ${prefix}--snippet--disabled`)\n      : '';\n    hideCopyButton ? (classes += ` ${prefix}--snippet--no-copy`) : '';\n    wrapText ? (classes += ` ${prefix}--snippet--wraptext`) : '';\n    type == 'multi' && hasRightOverflow\n      ? (classes += ` ${prefix}--snippet--has-right-overflow`)\n      : '';\n\n    const expandButtonClass = `${prefix}--snippet-btn--expand`;\n\n    const disabledCopyButtonClasses = disabled\n      ? `${prefix}--snippet--disabled`\n      : '';\n\n    const expandCodeBtnText = expandedCode ? showLessText : showMoreText;\n\n    if (type === CODE_SNIPPET_TYPE.INLINE) {\n      // Ensures no extra whitespace text node\n      // prettier-ignore\n      return html`\n        <cds-copy ?disabled=${disabled} button-class-name=\"${classes}\" @click=\"${handleCopyClick}\">\n          <code slot=\"icon\"><slot></slot></code>\n          <span slot=\"tooltip-content\">${tooltipContent}</span>\n        </cds-copy>\n      `;\n    }\n\n    const styles = {};\n    if (type === 'multi') {\n      if (expandedCode) {\n        if (maxExpandedNumberOfRows > 0) {\n          styles['max-height'] =\n            maxExpandedNumberOfRows * rowHeightInPixels + 'px';\n        }\n        if (minExpandedNumberOfRows > 0) {\n          styles['min-height'] =\n            minExpandedNumberOfRows * rowHeightInPixels + 'px';\n        }\n      } else {\n        if (maxCollapsedNumberOfRows > 0) {\n          styles['max-height'] =\n            maxCollapsedNumberOfRows * rowHeightInPixels + 'px';\n        }\n        if (minCollapsedNumberOfRows > 0) {\n          styles['min-height'] =\n            minCollapsedNumberOfRows * rowHeightInPixels + 'px';\n        }\n      }\n    }\n\n    return html`\n      <div\n        role=\"${type === CODE_SNIPPET_TYPE.SINGLE ||\n        type === CODE_SNIPPET_TYPE.MULTI\n          ? 'textbox'\n          : null}\"\n        tabindex=\"${(type === CODE_SNIPPET_TYPE.SINGLE ||\n          type === CODE_SNIPPET_TYPE.MULTI) &&\n        !disabled\n          ? 0\n          : null}\"\n        class=\"${prefix}--snippet-container\"\n        aria-label=\"${'code-snippet'}\"\n        aria-readonly=\"${type === CODE_SNIPPET_TYPE.SINGLE ||\n        type === CODE_SNIPPET_TYPE.MULTI\n          ? true\n          : null}\"\n        aria-multiline=\"${type === CODE_SNIPPET_TYPE.MULTI ? true : null}\"\n        @scroll=\"${(type === CODE_SNIPPET_TYPE.SINGLE && handleScroll) || null}\"\n        style=${styleMap(styles)}>\n        <pre\n          @scroll=\"${(type === CODE_SNIPPET_TYPE.MULTI && handleScroll) ||\n          null}\"><code><slot></slot></code></pre>\n      </div>\n\n      ${hasLeftOverflow\n        ? html`\n            <div class=\"${prefix}--snippet__overflow-indicator--left\"></div>\n          `\n        : ``}\n      ${hasRightOverflow && type !== CODE_SNIPPET_TYPE.MULTI\n        ? html`\n            <div class=\"${prefix}--snippet__overflow-indicator--right\"></div>\n          `\n        : ``}\n      ${hideCopyButton\n        ? ``\n        : html`\n            <cds-copy-button\n              ?disabled=${disabled}\n              button-class-name=${disabledCopyButtonClasses}\n              feedback=${feedback}\n              feedback-timeout=${feedbackTimeout}\n              @click=\"${handleCopyClick}\">\n              ${tooltipContent}\n            </cds-copy-button>\n          `}\n      ${shouldShowMoreLessBtn\n        ? html`\n            <cds-button\n              kind=\"ghost\"\n              size=\"sm\"\n              button-class-name=${expandButtonClass}\n              ?disabled=${disabled}\n              @click=${() => this._handleClickExpanded()}>\n              <span class=\"${prefix}--snippet-btn--text\">\n                ${expandCodeBtnText}\n              </span>\n              ${ChevronDown16({\n                class: `${prefix}--icon-chevron--down ${prefix}--snippet__icon`,\n                name: 'cheveron--down',\n                role: 'img',\n                slot: 'icon',\n              })}\n            </cds-button>\n          `\n        : ``}\n    `;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n  static styles = styles;\n}\n\nexport default CDSCodeSnippet;\n"],"names":["customElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAKG;AAkBH;;;;;AAKG;AACH,MAAM,aAAa,GAAG,CAAC,QAAwB,EAAE,IAAa,KAAI;IAChE,IAAI,CAAC,IAAI,EAAE;AACT,QAAA,OAAO,IAAI;;AAEb,IAAA,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;IACtB,OAAO;QACL,OAAO,GAAA;AACL,YAAA,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC;AACxB,YAAA,OAAO,IAAI;SACZ;KACQ;AACb,CAAC;AAED;;;;AAIG;AAEH,IAAM,cAAc,GAApB,MAAM,cAAe,SAAQ,UAAU,CAAC,UAAU,CAAC,CAAA;AAAnD,IAAA,WAAA,GAAA;;AACE;;AAEG;QACK,IAAa,CAAA,aAAA,GAAG,KAAK;AAE7B;;AAEG;QACK,IAAe,CAAA,eAAA,GAAkB,IAAI;AAE7C;;AAEG;QACK,IAAkB,CAAA,kBAAA,GAAG,EAAE;AAE/B;;AAEG;QACK,IAAiB,CAAA,iBAAA,GAAG,IAAI;AAEhC;;AAEG;QACK,IAAgB,CAAA,gBAAA,GAAG,KAAK;AAEhC;;AAEG;QACK,IAAsB,CAAA,sBAAA,GAAG,KAAK;AAqFtC;;AAEG;;;AAGK,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,cAAc,CAAC,MAAK;;AAChD,YAAA,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAA,aAAa,CACrD,CAAA,CAAA,EAAI,MAAM,CAAA,mBAAA,CAAqB,CAChC;AACD,YAAA,MAAM,cAAc,GAAG,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,MAAA,GAAA,MAAA,GAAA,gBAAgB,CAAE,aAAa,CAAC,MAAM,CAAC,CAAC;AAC/D,YAAA,MAAM,EACJ,IAAI,EACJ,wBAAwB,EACxB,uBAAuB,EACvB,uBAAuB,EACvB,kBAAkB,EAAE,iBAAiB,EACrC,aAAa,EAAE,YAAY,GAC5B,GAAG,IAAI;YACR,IAAI,cAAc,IAAI,IAAI,KAAK,iBAAiB,CAAC,KAAK,EAAE;gBACtD,MAAM,EAAE,MAAM,EAAE,GAAG,cAAc,CAAC,qBAAqB,EAAE;gBACzD,IACE,wBAAwB,GAAG,CAAC;qBAC3B,uBAAuB,IAAI,CAAC;wBAC3B,uBAAuB,GAAG,wBAAwB,CAAC;AACrD,oBAAA,MAAM,GAAG,wBAAwB,GAAG,iBAAiB,EACrD;AACA,oBAAA,IAAI,CAAC,sBAAsB,GAAG,IAAI;;qBAC7B;AACL,oBAAA,IAAI,CAAC,sBAAsB,GAAG,KAAK;;gBAErC,IACE,IAAI,CAAC,aAAa;AAClB,oBAAA,uBAAuB,GAAG,CAAC;AAC3B,oBAAA,MAAM,IAAI,uBAAuB,GAAG,iBAAiB,EACrD;AACA,oBAAA,IAAI,CAAC,aAAa,GAAG,KAAK;;;YAG9B,IACE,CAAC,cAAc,IAAI,IAAI,KAAK,iBAAiB,CAAC,KAAK;iBAClD,gBAAgB,IAAI,IAAI,KAAK,iBAAiB,CAAC,MAAM,CAAC,EACvD;AACA,gBAAA,YAAY,EAAE;;YAEhB,IAAI,CAAC,aAAa,EAAE;AACtB,SAAC,CAAC;AAEF;;;AAGG;QAEH,IAAQ,CAAA,QAAA,GAAG,EAAE;AAEb;;AAEG;QAEH,IAAQ,CAAA,QAAA,GAAG,KAAK;AAEhB;;AAEG;QAEH,IAAQ,CAAA,QAAA,GAAG,SAAS;AAEpB;;AAEG;QAEH,IAAe,CAAA,eAAA,GAAG,IAAI;AAEtB;;AAEG;QAEH,IAAc,CAAA,cAAA,GAAG,KAAK;AAEtB;;AAEG;QAEH,IAAwB,CAAA,wBAAA,GAAG,EAAE;AAE7B;;AAEG;QAEH,IAAuB,CAAA,uBAAA,GAAG,CAAC;AAE3B;;AAEG;QAEH,IAAwB,CAAA,wBAAA,GAAG,CAAC;AAE5B;;AAEG;QAEH,IAAuB,CAAA,uBAAA,GAAG,EAAE;AAE5B;;;AAGG;QAEH,IAAY,CAAA,YAAA,GAAG,WAAW;AAE1B;;;AAGG;QAEH,IAAY,CAAA,YAAA,GAAG,WAAW;AAE1B;;AAEG;QAEH,IAAc,CAAA,cAAA,GAAG,mBAAmB;AAEpC;;AAEG;QAEH,IAAQ,CAAA,QAAA,GAAG,KAAK;AAEhB;;AAEG;AAEH,QAAA,IAAA,CAAA,IAAI,GAAG,iBAAiB,CAAC,MAAM;;AAvN/B;;AAEG;IACK,gBAAgB,GAAA;AACtB,QAAA,MAAM,EAAE,aAAa,EAAE,GAAG,EAAE,GAAG,IAAI;QACnC,MAAM,SAAS,GAAG,GAAI,CAAC,WAAY,CAAC,YAAY,EAAE;QAClD,SAAU,CAAC,eAAe,EAAE;QAC5B,MAAM,IAAI,GAAG,GAAI,CAAC,aAAa,CAAC,MAAM,CAAC;AACvC,QAAA,IAAI,CAAC,SAAS,GAAG,CAAG,EAAA,MAAM,mBAAmB;QAC7C,MAAM,GAAG,GAAG,GAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QACrC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAC7C,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,SAAS,CAC3C;AACD,QAAA,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW;AACtD,QAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;;AAErB,QAAA,GAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;AAC3B,QAAA,MAAM,KAAK,GAAG,GAAI,CAAC,WAAW,EAAE;AAChC,QAAA,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC;AAC9B,QAAA,SAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC1B,QAAA,GAAI,CAAC,WAAW,CAAC,MAAM,CAAC;AACxB,QAAA,GAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAC3B,SAAU,CAAC,eAAe,EAAE;;;AAItB,IAAA,qBAAqB,CAAC,GAAG,EAAA;AAC/B,QAAA,MAAM,EACJ,WAAW,EAAE,eAAe,EAC5B,UAAU,EAAE,cAAc,EAC1B,WAAW,EAAE,eAAe,GAC7B,GAAG,GAAG;QAEP,OAAO;YACL,kBAAkB,EAAE,eAAe,GAAG,eAAe;YACrD,eAAe;YACf,eAAe;YACf,cAAc;SACf;;AAEH;;AAEG;IACK,aAAa,GAAA;;QACnB,IAAI,IAAI,EAAE;AACR,YAAA,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAJ,MAAA,GAAA,MAAA,GAAA,IAAI,CAAE,UAAU,0CAAE,aAAa,CACtD,IAAI,MAAM,CAAA,mBAAA,CAAqB,CAChC;AACD,YAAA,MAAM,cAAc,GAAG,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAA,MAAA,GAAA,MAAA,GAAhB,gBAAgB,CAAE,aAAa,CAAC,KAAK,CAAC;AAC7D,YAAA,IACE,IAAI,CAAC,IAAI,KAAK,iBAAiB,CAAC,MAAM;iBACrC,IAAI,CAAC,IAAI,KAAK,iBAAiB,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC;AAC7D,iBAAC,IAAI,CAAC,IAAI,KAAK,iBAAiB,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,EAC1D;gBACA;;AAGF,YAAA,MAAM,EACJ,kBAAkB,EAClB,eAAe,EACf,eAAe,EACf,cAAc,GACf,GACC,IAAI,CAAC,IAAI,KAAK,iBAAiB,CAAC;AAC9B,kBAAE,IAAI,CAAC,qBAAqB,CAAC,gBAAgB;AAC7C,kBAAE,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC;YAEhD,IAAI,CAAC,gBAAgB,GAAG,kBAAkB,IAAI,CAAC,CAAC,cAAc;AAC9D,YAAA,IAAI,CAAC,iBAAiB;gBACpB,kBAAkB;AAClB,oBAAA,cAAc,GAAG,eAAe,KAAK,eAAe;YACtD,IAAI,CAAC,aAAa,EAAE;;;AAIxB;;AAEG;IACK,oBAAoB,GAAA;AAC1B,QAAA,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa;QACxC,IAAI,CAAC,aAAa,EAAE;;IAyItB,iBAAiB,GAAA;QACf,KAAK,CAAC,iBAAiB,EAAE;AACzB,QAAA,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;;QAEvD,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC;;IAGlE,oBAAoB,GAAA;AAClB,QAAA,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;;;IAIzD,OAAO,GAAA;AACL,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE;AACtB,YAAA,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,EAAE,CAAC;;aACjC;AACL,YAAA,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;;;IAIzC,MAAM,GAAA;QACJ,MAAM,EACJ,QAAQ,EACR,QAAQ,EACR,eAAe,EACf,cAAc,EACd,uBAAuB,EACvB,uBAAuB,EACvB,wBAAwB,EACxB,wBAAwB,EACxB,IAAI,EACJ,QAAQ,EACR,cAAc,EACd,YAAY,EACZ,YAAY,EACZ,aAAa,EAAE,YAAY,EAC3B,gBAAgB,EAAE,eAAe,EACjC,aAAa,EAAE,YAAY,EAC3B,iBAAiB,EAAE,gBAAgB,EACnC,gBAAgB,EAAE,eAAe,EACjC,kBAAkB,EAAE,iBAAiB,EACrC,sBAAsB,EAAE,qBAAqB,GAC9C,GAAG,IAAI;AAER,QAAA,IAAI,OAAO,GAAG,CAAG,EAAA,MAAM,WAAW;AAClC,QAAA,IAAI,IAAI,OAAO,IAAI,CAAI,CAAA,EAAA,MAAM,CAAc,WAAA,EAAA,IAAI,EAAE,IAAI,EAAE;QACvD,IAAI,KAAK,QAAQ,IAAI;AACnB,eAAG,OAAO,IAAI,CAAI,CAAA,EAAA,MAAM,qBAAqB;cAC3C,EAAE;AACN,QAAA,cAAc,IAAI,OAAO,IAAI,CAAA,CAAA,EAAI,MAAM,CAAA,kBAAA,CAAoB,IAAI,EAAE;AACjE,QAAA,QAAQ,IAAI,OAAO,IAAI,CAAA,CAAA,EAAI,MAAM,CAAA,mBAAA,CAAqB,IAAI,EAAE;QAC5D,IAAI,IAAI,OAAO,IAAI;AACjB,eAAG,OAAO,IAAI,CAAI,CAAA,EAAA,MAAM,+BAA+B;cACrD,EAAE;AAEN,QAAA,MAAM,iBAAiB,GAAG,CAAG,EAAA,MAAM,uBAAuB;QAE1D,MAAM,yBAAyB,GAAG;cAC9B,CAAG,EAAA,MAAM,CAAqB,mBAAA;cAC9B,EAAE;QAEN,MAAM,iBAAiB,GAAG,YAAY,GAAG,YAAY,GAAG,YAAY;AAEpE,QAAA,IAAI,IAAI,KAAK,iBAAiB,CAAC,MAAM,EAAE;;;AAGrC,YAAA,OAAO,IAAI,CAAA;8BACa,QAAQ,CAAA,oBAAA,EAAuB,OAAO,CAAA,UAAA,EAAa,eAAe,CAAA;;yCAEvD,cAAc,CAAA;;OAEhD;;QAGH,MAAM,MAAM,GAAG,EAAE;AACjB,QAAA,IAAI,IAAI,KAAK,OAAO,EAAE;YACpB,IAAI,YAAY,EAAE;AAChB,gBAAA,IAAI,uBAAuB,GAAG,CAAC,EAAE;oBAC/B,MAAM,CAAC,YAAY,CAAC;AAClB,wBAAA,uBAAuB,GAAG,iBAAiB,GAAG,IAAI;;AAEtD,gBAAA,IAAI,uBAAuB,GAAG,CAAC,EAAE;oBAC/B,MAAM,CAAC,YAAY,CAAC;AAClB,wBAAA,uBAAuB,GAAG,iBAAiB,GAAG,IAAI;;;iBAEjD;AACL,gBAAA,IAAI,wBAAwB,GAAG,CAAC,EAAE;oBAChC,MAAM,CAAC,YAAY,CAAC;AAClB,wBAAA,wBAAwB,GAAG,iBAAiB,GAAG,IAAI;;AAEvD,gBAAA,IAAI,wBAAwB,GAAG,CAAC,EAAE;oBAChC,MAAM,CAAC,YAAY,CAAC;AAClB,wBAAA,wBAAwB,GAAG,iBAAiB,GAAG,IAAI;;;;AAK3D,QAAA,OAAO,IAAI,CAAA;;gBAEC,IAAI,KAAK,iBAAiB,CAAC,MAAM;YACzC,IAAI,KAAK,iBAAiB,CAAC;AACzB,cAAE;AACF,cAAE,IAAI,CAAA;AACI,kBAAA,EAAA,CAAC,IAAI,KAAK,iBAAiB,CAAC,MAAM;AAC5C,YAAA,IAAI,KAAK,iBAAiB,CAAC,KAAK;AAClC,YAAA,CAAC;AACC,cAAE;AACF,cAAE,IAAI,CAAA;iBACC,MAAM,CAAA;sBACD,cAAc,CAAA;yBACX,IAAI,KAAK,iBAAiB,CAAC,MAAM;YAClD,IAAI,KAAK,iBAAiB,CAAC;AACzB,cAAE;AACF,cAAE,IAAI,CAAA;0BACU,IAAI,KAAK,iBAAiB,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAA;mBACrD,CAAC,IAAI,KAAK,iBAAiB,CAAC,MAAM,IAAI,YAAY,KAAK,IAAI,CAAA;gBAC9D,QAAQ,CAAC,MAAM,CAAC,CAAA;;AAEX,mBAAA,EAAA,CAAC,IAAI,KAAK,iBAAiB,CAAC,KAAK,IAAI,YAAY;YAC5D,IAAI,CAAA;;;QAGN;cACE,IAAI,CAAA;0BACY,MAAM,CAAA;AACrB,UAAA;AACH,cAAE,CAAE,CAAA;AACJ,MAAA,EAAA,gBAAgB,IAAI,IAAI,KAAK,iBAAiB,CAAC;cAC7C,IAAI,CAAA;0BACY,MAAM,CAAA;AACrB,UAAA;AACH,cAAE,CAAE,CAAA;QACJ;AACA,cAAE,CAAE;cACF,IAAI,CAAA;;0BAEY,QAAQ;kCACA,yBAAyB;yBAClC,QAAQ;iCACA,eAAe;wBACxB,eAAe,CAAA;gBACvB,cAAc;;AAEnB,UAAA,CAAA;QACH;cACE,IAAI,CAAA;;;;kCAIoB,iBAAiB;0BACzB,QAAQ;AACX,qBAAA,EAAA,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAA;6BAC3B,MAAM,CAAA;kBACjB,iBAAiB;;AAEnB,cAAA,EAAA,aAAa,CAAC;AACd,gBAAA,KAAK,EAAE,CAAA,EAAG,MAAM,CAAA,qBAAA,EAAwB,MAAM,CAAiB,eAAA,CAAA;AAC/D,gBAAA,IAAI,EAAE,gBAAgB;AACtB,gBAAA,IAAI,EAAE,KAAK;AACX,gBAAA,IAAI,EAAE,MAAM;aACb,CAAC;;AAEL,UAAA;AACH,cAAE,CAAE,CAAA;KACP;;;AAGI,cAAiB,CAAA,iBAAA,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACnB,UAAU,CAAC,iBAAiB,KAC/B,cAAc,EAAE,IAAI,EAAA,CAFE;AAIjB,cAAM,CAAA,MAAA,GAAG,MAAH;AA/Pb,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,SAAS,EAAE,WAAW,EAAE;AACtB,CAAA,EAAA,cAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA;AAMd,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AACzB,CAAA,EAAA,cAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA;AAMjB,UAAA,CAAA;AADC,IAAA,QAAQ;AACY,CAAA,EAAA,cAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA;AAMrB,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kBAAkB,EAAE;AAClC,CAAA,EAAA,cAAA,CAAA,SAAA,EAAA,iBAAA,EAAA,MAAA,CAAA;AAMvB,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,kBAAkB,EAAE;AAClD,CAAA,EAAA,cAAA,CAAA,SAAA,EAAA,gBAAA,EAAA,MAAA,CAAA;AAMvB,UAAA,CAAA;AADC,IAAA,QAAQ;AACqB,CAAA,EAAA,cAAA,CAAA,SAAA,EAAA,0BAAA,EAAA,MAAA,CAAA;AAM9B,UAAA,CAAA;AADC,IAAA,QAAQ;AACmB,CAAA,EAAA,cAAA,CAAA,SAAA,EAAA,yBAAA,EAAA,MAAA,CAAA;AAM5B,UAAA,CAAA;AADC,IAAA,QAAQ;AACoB,CAAA,EAAA,cAAA,CAAA,SAAA,EAAA,0BAAA,EAAA,MAAA,CAAA;AAM7B,UAAA,CAAA;AADC,IAAA,QAAQ;AACoB,CAAA,EAAA,cAAA,CAAA,SAAA,EAAA,yBAAA,EAAA,MAAA,CAAA;AAO7B,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE;AACd,CAAA,EAAA,cAAA,CAAA,SAAA,EAAA,cAAA,EAAA,MAAA,CAAA;AAO3B,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE;AACd,CAAA,EAAA,cAAA,CAAA,SAAA,EAAA,cAAA,EAAA,MAAA,CAAA;AAM3B,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,SAAS,EAAE,iBAAiB,EAAE;AACL,CAAA,EAAA,cAAA,CAAA,SAAA,EAAA,gBAAA,EAAA,MAAA,CAAA;AAMrC,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE;AACjD,CAAA,EAAA,cAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA;AAMjB,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE;AACK,CAAA,EAAA,cAAA,CAAA,SAAA,EAAA,MAAA,EAAA,MAAA,CAAA;AAtP5B,cAAc,GAAA,UAAA,CAAA;AADnB,IAAAA,aAAa,CAAC,CAAA,EAAG,MAAM,CAAA,aAAA,CAAe;AACjC,CAAA,EAAA,cAAc,CAsanB;AAED,uBAAe,cAAc;;;;"}