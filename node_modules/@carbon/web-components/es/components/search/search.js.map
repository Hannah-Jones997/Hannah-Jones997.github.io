{"version":3,"file":"search.js","sources":["../../../src/components/search/search.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport Close16 from '@carbon/icons/lib/close/16.js';\nimport Search16 from '@carbon/icons/lib/search/16.js';\nimport { prefix } from '../../globals/settings';\nimport ifNonEmpty from '../../globals/directives/if-non-empty';\nimport FocusMixin from '../../globals/mixins/focus';\nimport FormMixin from '../../globals/mixins/form';\nimport { INPUT_SIZE } from '../text-input/text-input';\nimport HostListener from '../../globals/decorators/host-listener';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport styles from './search.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Search box.\n *\n * @element cds-search\n * @csspart search-icon The search icon.\n * @csspart label-text The label text.\n * @csspart input The input box.\n * @csspart close-button The close button.\n * @csspart close-icon The close icon.\n * @fires cds-search-input - The custom event fired after the search content is changed upon a user gesture.\n */\n@customElement(`${prefix}-search`)\nclass CDSSearch extends HostListenerMixin(FocusMixin(FormMixin(LitElement))) {\n  /**\n   * Handles `input` event on the `<input>` in the shadow DOM.\n   */\n  private _handleInput(event: Event) {\n    const { target } = event;\n    const { value } = target as HTMLInputElement;\n    this.dispatchEvent(\n      new CustomEvent((this.constructor as typeof CDSSearch).eventInput, {\n        bubbles: true,\n        composed: true,\n        cancelable: false,\n        detail: {\n          value,\n        },\n      })\n    );\n    this.value = value;\n  }\n\n  /**\n   * Handles `click` event on the button to clear search box content.\n   */\n  private _handleClearInputButtonClick() {\n    if (this.value) {\n      this.dispatchEvent(\n        new CustomEvent((this.constructor as typeof CDSSearch).eventInput, {\n          bubbles: true,\n          composed: true,\n          cancelable: false,\n          detail: {\n            value: '',\n          },\n        })\n      );\n      this.value = '';\n\n      // set focus on back to input once search is cleared\n      const input = this.shadowRoot!.querySelector('input');\n      (input as HTMLElement).focus();\n    }\n  }\n\n  /**\n   * Handles `focus` event on the button when the button can be expanded\n   */\n  @HostListener('focus')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleExpand() {\n    if (this.expandable && !this.expanded) {\n      this.setAttribute('expanded', '');\n    }\n  }\n\n  /**\n   * Handles `focusout` event on the component to be closed after being expanded\n   * Will not close if there is a value typed within.\n   */\n  @HostListener('focusout')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleClose() {\n    if (this.expandable && this.expanded && !this.value) {\n      this.removeAttribute('expanded');\n    }\n  }\n\n  /**\n   * Handler for @slotchange, will only be ran if user sets an element under the \"icon\" slot.\n   *\n   * @private\n   */\n  private _handleSlotChange() {\n    const icon = this.querySelector('svg');\n    icon?.setAttribute('part', 'search-icon');\n    icon?.setAttribute('class', `${prefix}--search-magnifier-icon`);\n    icon?.setAttribute('role', `img`);\n    this.hasCustomIcon = true;\n  }\n\n  _handleFormdata(event: FormDataEvent) {\n    const { formData } = event;\n    const { disabled, name, value } = this;\n    if (!disabled) {\n      formData.append(name, value);\n    }\n  }\n\n  /**\n   * Specify an optional value for the autocomplete property on the underlying <input>,\n   * defaults to \"off\"\n   */\n  @property({ attribute: 'autocomplete' })\n  autoComplete = 'off';\n\n  /**\n   * Specify a label to be read by screen readers on the \"close\" button\n   */\n  @property({ attribute: 'close-button-label-text' })\n  closeButtonLabelText = '';\n\n  /**\n   * `true` if the search box should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * `true` if the search bar can be expandable\n   */\n  @property({ type: Boolean, reflect: true })\n  expandable = false;\n\n  /**\n   * `true` if the expandable search has been expanded\n   */\n  @property({ type: Boolean, reflect: true })\n  expanded = false;\n\n  @property({ type: Boolean })\n  hasCustomIcon = false;\n\n  /**\n   * The label text.\n   */\n  @property({ attribute: 'label-text' })\n  labelText = '';\n\n  /**\n   * The form name in `FormData`.\n   */\n  @property()\n  name = '';\n\n  /**\n   * Specify the role for the underlying <input>, defaults to searchbox\n   */\n  @property()\n  role = '';\n\n  /**\n   * The placeholder text.\n   */\n  @property()\n  placeholder = 'Search';\n\n  /**\n   * The search box size.\n   */\n  @property({ reflect: true })\n  size = INPUT_SIZE.MEDIUM;\n\n  /**\n   * The `<input>` name.\n   */\n  @property()\n  type = '';\n\n  /**\n   * The value.\n   */\n  @property({ type: String })\n  value = '';\n\n  render() {\n    const {\n      autoComplete,\n      closeButtonLabelText,\n      disabled,\n      hasCustomIcon,\n      labelText,\n      name,\n      placeholder,\n      role,\n      type,\n      value = '',\n      _handleInput: handleInput,\n      _handleClearInputButtonClick: handleClearInputButtonClick,\n      _handleSlotChange: handleSlotChange,\n    } = this;\n    const clearClasses = classMap({\n      [`${prefix}--search-close`]: true,\n      [`${prefix}--search-close--hidden`]: !this.value,\n    });\n    return html`\n      <div class=\"${prefix}--search-magnifier\">\n        <slot name=\"icon\" @slotchange=${handleSlotChange}>\n          ${hasCustomIcon\n            ? html``\n            : html`${Search16({\n                part: 'search-icon',\n                class: `${prefix}--search-magnifier-icon`,\n                role: 'img',\n              })}`}\n        </slot>\n      </div>\n      <label for=\"input\" part=\"label-text\" class=\"${prefix}--label\">\n        <slot>${labelText}</slot>\n      </label>\n      <input\n        autocomplete=\"${autoComplete}\"\n        id=\"input\"\n        part=\"input\"\n        type=\"${ifNonEmpty(type)}\"\n        class=\"${prefix}--search-input\"\n        ?disabled=\"${disabled}\"\n        name=\"${ifNonEmpty(name)}\"\n        placeholder=\"${ifNonEmpty(placeholder)}\"\n        role=\"${role}\"\n        .value=\"${value}\"\n        @input=\"${handleInput}\" />\n      <button\n        part=\"close-button\"\n        class=\"${clearClasses}\"\n        @click=\"${handleClearInputButtonClick}\"\n        type=\"button\"\n        aria-label=\"${closeButtonLabelText}\">\n        ${Close16({\n          part: 'close-icon',\n          'aria-label': closeButtonLabelText,\n          role: 'img',\n        })}\n      </button>\n    `;\n  }\n\n  /**\n   * The name of the custom event fired after the search content is changed upon a user gesture.\n   */\n  static get eventInput() {\n    return `${prefix}-search-input`;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n  static styles = styles;\n}\n\nexport default CDSSearch;\n"],"names":["customElement"],"mappings":"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"}