{"version":3,"file":"state-handshake-plugin.js","sources":["../../../src/components/date-picker/state-handshake-plugin.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Instance as FlatpickrInstance } from 'flatpickr/dist/types/instance';\nimport { Plugin } from 'flatpickr/dist/types/options';\nimport CDSDatePicker from './date-picker';\n\n/**\n * @param datePicker Plugin configuration.\n * @returns A Flatpickr plugin to handshake states with `<cds-date-picker>`.\n */\nexport default (datePicker: CDSDatePicker): Plugin =>\n  (fp: FlatpickrInstance) => {\n    /**\n     * Sets open state.\n     */\n    const setOpen = () => {\n      datePicker.open = true;\n    };\n\n    /**\n     * Sets closed state.\n     */\n    const setClosed = () => {\n      datePicker.open = false;\n    };\n\n    /**\n     * Propagates Flatpickr's `onChange` event to `<cds-date-picker>`.\n     *\n     * @param selectedDates The latest selected dates.\n     */\n    const handleChange = (selectedDates: Date[]) => {\n      const { eventChange } = datePicker.constructor as typeof CDSDatePicker;\n      datePicker.dispatchEvent(\n        new CustomEvent(eventChange, {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: {\n            selectedDates,\n          },\n        })\n      );\n    };\n\n    /**\n     * Registers this Flatpickr plugin.\n     *\n     * @param _selectedDates The selected dates.\n     * @param _value The value.\n     * @param calendar The Flatpickr instance.\n     */\n    const register = (_selectedDates, _value, calendar: FlatpickrInstance) => {\n      datePicker.calendar = calendar;\n      fp.loadedPlugins.push('carbonFlatpickrStateHandshakePlugin');\n    };\n\n    return {\n      onOpen: setOpen,\n      onClose: setClosed,\n      onChange: handleChange,\n      onReady: [register],\n    };\n  };\n"],"names":[],"mappings":";;;;;;;AAAA;;;;;AAKG;AAMH;;;AAGG;AACH,2BAAe,CAAC,UAAyB,KACvC,CAAC,EAAqB,KAAI;AACxB;;AAEG;IACH,MAAM,OAAO,GAAG,MAAK;AACnB,QAAA,UAAU,CAAC,IAAI,GAAG,IAAI;AACxB,KAAC;AAED;;AAEG;IACH,MAAM,SAAS,GAAG,MAAK;AACrB,QAAA,UAAU,CAAC,IAAI,GAAG,KAAK;AACzB,KAAC;AAED;;;;AAIG;AACH,IAAA,MAAM,YAAY,GAAG,CAAC,aAAqB,KAAI;AAC7C,QAAA,MAAM,EAAE,WAAW,EAAE,GAAG,UAAU,CAAC,WAAmC;AACtE,QAAA,UAAU,CAAC,aAAa,CACtB,IAAI,WAAW,CAAC,WAAW,EAAE;AAC3B,YAAA,OAAO,EAAE,IAAI;AACb,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,MAAM,EAAE;gBACN,aAAa;AACd,aAAA;AACF,SAAA,CAAC,CACH;AACH,KAAC;AAED;;;;;;AAMG;IACH,MAAM,QAAQ,GAAG,CAAC,cAAc,EAAE,MAAM,EAAE,QAA2B,KAAI;AACvE,QAAA,UAAU,CAAC,QAAQ,GAAG,QAAQ;AAC9B,QAAA,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,qCAAqC,CAAC;AAC9D,KAAC;IAED,OAAO;AACL,QAAA,MAAM,EAAE,OAAO;AACf,QAAA,OAAO,EAAE,SAAS;AAClB,QAAA,QAAQ,EAAE,YAAY;QACtB,OAAO,EAAE,CAAC,QAAQ,CAAC;KACpB;AACH,CAAC;;;;"}