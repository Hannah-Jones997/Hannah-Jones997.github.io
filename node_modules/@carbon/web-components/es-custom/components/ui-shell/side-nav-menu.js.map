{"version":3,"file":"side-nav-menu.js","sources":["../../../src/components/ui-shell/side-nav-menu.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport ChevronDown20 from '@carbon/icons/lib/chevron--down/20.js';\nimport { prefix } from '../../globals/settings';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport FocusMixin from '../../globals/mixins/focus';\nimport styles from './side-nav.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Side nav menu.\n *\n * @element cds-custom-side-nav-menu\n * @fires cds-custom-side-nav-menu-beingtoggled\n *   The name of the custom event fired before this side nav menu is being toggled upon a user gesture.\n *   Cancellation of this event stops the user-initiated action of toggling this side nav menu.\n * @fires cds-custom-side-nav-menu-toggled\n *   The name of the custom event fired after this side nav menu is toggled upon a user gesture.\n * @slot title-icon - The icon.\n * @csspart expando The expando.\n * @csspart expando-icon-container The expando icon container.\n * @csspart expando-icon The expando icon.\n * @csspart title The title.\n * @csspart title-icon-container The title icon container.\n * @csspart menu-body The menu body.\n */\n@customElement(`${prefix}-side-nav-menu`)\nclass CDSSideNavMenu extends FocusMixin(LitElement) {\n  /**\n   * `true` if this menu has an icon.\n   */\n  private _hasIcon = false;\n\n  /**\n   * The container for the title icon.\n   */\n  @query('#title-icon-container')\n  private _titleIconContainerNode!: HTMLDivElement;\n\n  /**\n   * Handles user-initiated toggle request of this side nav menu.\n   *\n   * @param expanded The new expanded state.\n   */\n  private _handleUserInitiatedToggle(expanded = !this.expanded) {\n    const { eventBeforeToggle, eventToggle } = this\n      .constructor as typeof CDSSideNavMenu;\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        expanded,\n      },\n    };\n    if (this.dispatchEvent(new CustomEvent(eventBeforeToggle, init))) {\n      this.expanded = expanded;\n      this.dispatchEvent(new CustomEvent(eventToggle, init));\n    }\n  }\n\n  /**\n   * Handler for the `click` event on the expando button.\n   */\n  private _handleClickExpando(e: Event) {\n    const target = e.currentTarget as HTMLButtonElement;\n    target.focus();\n    this._handleUserInitiatedToggle();\n  }\n\n  /**\n   * Handles `slotchange` event on the non-named `<slot>`.\n   */\n  private _handleSlotChange({ target }) {\n    const { _hasIcon: hasIcon } = this;\n    forEach(target.assignedNodes(), (item) => {\n      if (item.nodeType === Node.ELEMENT_NODE) {\n        item.toggleAttribute(\n          (this.constructor as typeof CDSSideNavMenu).attribItemHasIcon,\n          hasIcon\n        );\n      }\n    });\n  }\n\n  /**\n   * Handles `slotchange` event on the `<slot>` for the title icon.\n   */\n  private _handleSlotChangeTitleIcon({ target }) {\n    const constructor = this.constructor as typeof CDSSideNavMenu;\n    const hasIcon = target.assignedNodes().length > 0;\n    this._hasIcon = hasIcon;\n    this._titleIconContainerNode?.toggleAttribute('hidden', !hasIcon);\n    forEach(this.querySelectorAll(constructor.selectorItem), (item) => {\n      item.toggleAttribute(constructor.attribItemHasIcon, hasIcon);\n    });\n  }\n\n  /**\n   * `true` if the menu has active menu item.\n   */\n  @property({ type: Boolean, reflect: true })\n  active = false;\n\n  /**\n   * `true` if the menu should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  expanded = false;\n\n  /**\n   * Specify if this is a large variation of the side nav menu\n   */\n  @property({ type: Boolean, reflect: true })\n  large = false;\n\n  /**\n   * `true` if the menu should be forced collapsed upon side nav's expanded state.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'force-collapsed' })\n  forceCollapsed = false;\n\n  /**\n   * The title text.\n   */\n  @property()\n  title = '';\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'listitem');\n    }\n    super.connectedCallback();\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('expanded')) {\n      const { selectorItem } = this.constructor as typeof CDSSideNavMenu;\n      const { expanded } = this;\n      forEach(this.querySelectorAll(selectorItem), (elem) => {\n        (elem as HTMLElement).tabIndex = expanded ? 0 : -1;\n      });\n    }\n  }\n\n  render() {\n    const {\n      expanded,\n      forceCollapsed,\n      title,\n      _handleClickExpando: handleClickExpando,\n      _handleSlotChange: handleSlotChange,\n      _handleSlotChangeTitleIcon: handleSlotChangeTitleIcon,\n    } = this;\n    return html`\n      <button\n        type=\"button\"\n        part=\"expando\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"${String(Boolean(expanded && !forceCollapsed))}\"\n        class=\"${prefix}--side-nav__submenu\"\n        @click=${handleClickExpando}>\n        <div\n          id=\"title-icon-container\"\n          part=\"title-icon-container\"\n          hidden\n          class=\"${prefix}--side-nav__icon\">\n          <slot\n            name=\"title-icon\"\n            @slotchange=${handleSlotChangeTitleIcon}></slot>\n        </div>\n        <span part=\"title\" class=\"${prefix}--side-nav__submenu-title\"\n          >${title}</span\n        >\n        <div\n          part=\"expando-icon-container\"\n          class=\"${prefix}--side-nav__icon ${prefix}--side-nav__icon--small ${prefix}--side-nav__submenu-chevron\">\n          ${ChevronDown20({ part: 'expando-icon' })}\n        </div>\n      </button>\n      <ul part=\"menu-body\" class=\"${prefix}--side-nav__menu\">\n        <slot @slotchange=${handleSlotChange}></slot>\n      </ul>\n    `;\n  }\n\n  /**\n   * The attribute name of the menu items, that is set if this menu has an icon.\n   */\n  static attribItemHasIcon = 'parent-has-icon';\n\n  /**\n   * A selector that will return the menu items.\n   */\n  static get selectorItem() {\n    return `${prefix}-side-nav-menu-item`;\n  }\n\n  /**\n   * The name of the custom event fired before this side nav menu is being toggled upon a user gesture.\n   * Cancellation of this event stops the user-initiated action of toggling this side nav menu.\n   */\n  static get eventBeforeToggle() {\n    return `${prefix}-side-nav-menu-beingtoggled`;\n  }\n\n  /**\n   * The name of the custom event fired after this side nav menu is toggled upon a user gesture.\n   */\n  static get eventToggle() {\n    return `${prefix}-side-nav-menu-toggled`;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n  static styles = styles;\n}\n\nexport default CDSSideNavMenu;\n"],"names":["customElement"],"mappings":"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"}