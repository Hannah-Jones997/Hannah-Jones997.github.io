{"version":3,"file":"side-nav.js","sources":["../../../src/components/ui-shell/side-nav.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { prefix } from '../../globals/settings';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport HostListener from '../../globals/decorators/host-listener';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport Handle from '../../globals/internal/handle';\nimport { SIDE_NAV_COLLAPSE_MODE, SIDE_NAV_USAGE_MODE } from './defs';\nimport CDSHeaderMenuButton from './header-menu-button';\nimport CDSSideNavMenu from './side-nav-menu';\nimport styles from './side-nav.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { SIDE_NAV_COLLAPSE_MODE, SIDE_NAV_USAGE_MODE };\n\n/**\n * Side nav.\n *\n * @element cds-custom-side-nav\n * @fires cds-custom-header-menu-button-toggled\n *   The name of the custom event fired after the header menu button in the document is toggled upon a user gesture.\n */\n@customElement(`${prefix}-side-nav`)\nclass CDSSideNav extends HostListenerMixin(LitElement) {\n  /**\n   * `true` if this side nav is hovered.\n   */\n  private _hovered = false;\n\n  /**\n   * The handle for `transitionend` event listener.\n   */\n  private _hTransition: Handle | null = null;\n\n  /**\n   * Cleans the handle for `transitionend` event listener.\n   */\n  private _cleanHTransition() {\n    if (this._hTransition) {\n      this._hTransition = this._hTransition.release();\n    }\n  }\n\n  /**\n   * Handles `${prefix}-header-menu-button-toggle` event on the document.\n   */\n  @HostListener('parentRoot:eventButtonToggle')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  protected _handleButtonToggle = async (event: CustomEvent) => {\n    this.expanded = event.detail.active;\n  };\n\n  /**\n   * Force child side nav menus collapsed upon the hover/expanded state of this side nav.\n   */\n  private _updatedSideNavMenuForceCollapsedState() {\n    const { expanded, _hovered: hovered } = this;\n    forEach(\n      this.querySelectorAll(\n        (this.constructor as typeof CDSSideNav).selectorMenu\n      ),\n      (item) => {\n        (item as CDSSideNavMenu).forceCollapsed = !expanded && !hovered;\n      }\n    );\n  }\n\n  /**\n   * Collapse mode of the side nav.\n   */\n  @property({ reflect: true, attribute: 'collapse-mode' })\n  collapseMode = SIDE_NAV_COLLAPSE_MODE.RESPONSIVE;\n\n  /**\n   * `true` to expand the side nav.\n   */\n  @property({ type: Boolean, reflect: true })\n  expanded = false;\n\n  /**\n   * If `true` will style the side nav to sit below the header\n   */\n  @property({\n    type: Boolean,\n    attribute: 'is-not-child-of-header',\n  })\n  isNotChildOfHeader = false;\n\n  /**\n   * Specify if the side-nav will be persistent above the lg breakpoint\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'is-not-persistent' })\n  isNotPersistent = false;\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'navigation');\n    }\n    super.connectedCallback();\n  }\n\n  disconnectedCallback() {\n    this._cleanHTransition();\n    super.disconnectedCallback();\n  }\n\n  updated(changedProperties) {\n    const doc = this.getRootNode() as Document;\n    if (changedProperties.has('collapseMode')) {\n      forEach(\n        doc.querySelectorAll(\n          (this.constructor as typeof CDSSideNav).selectorButtonToggle\n        ),\n        (item) => {\n          (item as CDSHeaderMenuButton).collapseMode = this.collapseMode;\n        }\n      );\n    }\n    if (changedProperties.has('expanded')) {\n      const headerItems = doc.querySelectorAll(\n        (this.constructor as typeof CDSSideNav).selectorHeaderItems\n      );\n      forEach(\n        doc.querySelectorAll(\n          (this.constructor as typeof CDSSideNav).selectorButtonToggle\n        ),\n        (item) => {\n          (item as CDSHeaderMenuButton).active = this.expanded;\n        }\n      );\n      if (this.expanded) {\n        forEach(headerItems, (item) => {\n          item.setAttribute('tabindex', '-1');\n        });\n      } else {\n        forEach(headerItems, (item) => {\n          item.removeAttribute('tabindex');\n        });\n      }\n    }\n\n    if (changedProperties.has('isNotChildOfHeader')) {\n      forEach(\n        doc.querySelectorAll(\n          (this.constructor as typeof CDSSideNav).selectorButtonToggle\n        ),\n        (item) => {\n          (item as CDSHeaderMenuButton).isNotChildOfHeader =\n            this.isNotChildOfHeader;\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles `blur` event handler on this element.\n   *\n   * @param event The event.\n   * @param event.relatedTarget The event relatedTarget.\n   */\n  @HostListener('focusout')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleFocusOut({ relatedTarget }: FocusEvent) {\n    const { collapseMode } = this;\n    if (collapseMode !== SIDE_NAV_COLLAPSE_MODE.FIXED) {\n      if (relatedTarget && !this.contains(relatedTarget as Node)) {\n        this.expanded = false;\n      }\n    }\n  }\n\n  /**\n   * Handles `focus` event handler on this element.\n   *\n   */\n  @HostListener('focusin')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleFocusIn() {\n    const { collapseMode } = this;\n    if (collapseMode !== SIDE_NAV_COLLAPSE_MODE.FIXED) {\n      this.expanded = true;\n    }\n  }\n\n  /**\n   * Handles the `mouseover` event for the side nav in rail mode.\n   *\n   */\n  private _handleNavMouseOver() {\n    const { collapseMode } = this;\n    if (collapseMode === SIDE_NAV_COLLAPSE_MODE.RAIL) {\n      this.expanded = true;\n      this._hovered = true;\n      this._updatedSideNavMenuForceCollapsedState();\n    }\n  }\n\n  /**\n   * Handles the `mouseout` event for the side nav in rail mode.\n   *\n   */\n  private _handleNavMouseOut() {\n    const { collapseMode } = this;\n    if (collapseMode === SIDE_NAV_COLLAPSE_MODE.RAIL) {\n      this.expanded = false;\n      this._hovered = false;\n      this._updatedSideNavMenuForceCollapsedState();\n    }\n  }\n\n  /**\n   * Handles the `click` event for the side nav overlay.\n   *\n   */\n  private _onOverlayClick() {\n    this.expanded = false;\n  }\n\n  render() {\n    const { collapseMode, expanded, isNotChildOfHeader, isNotPersistent } =\n      this;\n    const classes = classMap({\n      [`${prefix}--side-nav__navigation`]: true,\n      [`${prefix}--side-nav`]: true,\n      [`${prefix}--side-nav--expanded`]: expanded,\n      [`${prefix}--side-nav--collapsed`]:\n        !expanded && collapseMode === SIDE_NAV_COLLAPSE_MODE.FIXED,\n      [`${prefix}--side-nav--rail`]:\n        collapseMode === SIDE_NAV_COLLAPSE_MODE.RAIL,\n      [`${prefix}--side-nav--ux`]: !isNotChildOfHeader,\n      [`${prefix}--side-nav--hidden`]: isNotPersistent,\n    });\n\n    const overlayClasses = classMap({\n      [`${prefix}--side-nav__overlay`]: true,\n      [`${prefix}--side-nav__overlay-active`]: expanded,\n    });\n    return html`${this.collapseMode === SIDE_NAV_COLLAPSE_MODE.FIXED\n        ? null\n        : html`<div\n            class=\"${overlayClasses}\"\n            @click=${this._onOverlayClick}></div>`}\n      <div\n        class=\"${classes}\"\n        @mouseover=\"${this._handleNavMouseOver}\"\n        @mouseout=\"${this._handleNavMouseOut}\">\n        <slot></slot>\n      </div>`;\n  }\n\n  /**\n   * A selector that will return the toggle buttons.\n   */\n  static get selectorButtonToggle() {\n    return `${prefix}-header-menu-button`;\n  }\n\n  /**\n   * A selector that will return the header name + global action elements.\n   */\n  static get selectorHeaderItems() {\n    return `${prefix}-header-name, ${prefix}-header-global-action`;\n  }\n\n  /**\n   * A selector that will return side nav focusable items.\n   */\n  static get selectorNavItems() {\n    return `${prefix}-side-nav-menu, ${prefix}-side-nav-menu-item, ${prefix}-side-nav-link`;\n  }\n\n  /**\n   * A selector that will return side nav menus.\n   */\n  static get selectorMenu() {\n    return `${prefix}-side-nav-menu`;\n  }\n\n  /**\n   * The name of the custom event fired after the header menu button in the document is toggled upon a user gesture.\n   */\n  static get eventButtonToggle() {\n    return `${prefix}-header-menu-button-toggled`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSSideNav;\n"],"names":["customElement"],"mappings":"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"}