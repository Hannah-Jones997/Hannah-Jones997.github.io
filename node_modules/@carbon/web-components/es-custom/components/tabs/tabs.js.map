{"version":3,"file":"tabs.js","sources":["../../../src/components/tabs/tabs.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TemplateResult, html } from 'lit';\nimport { property, state, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { prefix } from '../../globals/settings';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport HostListener from '../../globals/decorators/host-listener';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport ChevronRight16 from '@carbon/icons/lib/chevron--right/16.js';\nimport ChevronLeft16 from '@carbon/icons/lib/chevron--left/16.js';\nimport CDSContentSwitcher, {\n  NAVIGATION_DIRECTION,\n} from '../content-switcher/content-switcher';\nimport { TABS_KEYBOARD_ACTION, TABS_TYPE } from './defs';\nimport CDSTab from './tab';\nimport styles from './tabs.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { NAVIGATION_DIRECTION, TABS_KEYBOARD_ACTION, TABS_TYPE };\n\n/**\n * Tabs.\n *\n * @element cds-custom-tabs\n * @fires cds-custom-tabs-beingselected\n *   The custom event fired before a tab is selected upon a user gesture.\n *   Cancellation of this event stops changing the user-initiated selection.\n * @fires cds-custom-tabs-selected - The custom event fired after a a tab is selected upon a user gesture.\n */\n@customElement(`${prefix}-tabs`)\nexport default class CDSTabs extends HostListenerMixin(CDSContentSwitcher) {\n  /**\n   * The latest status of this dropdown, for screen reader to accounce.\n   */\n  private _assistiveStatusText?: string;\n\n  /**\n   * The currently selected index\n   */\n  // @ts-ignore: TS thinks this method is not referred to\n  private _currentIndex = 0;\n\n  /**\n   * Total number of tabs in the component\n   */\n  private _totalTabs = 0;\n\n  /**\n   * `true` if the tablist is scrollable\n   */\n  // @ts-ignore: TS thinks this method is not referred to\n  private _isScrollable = false;\n\n  /**\n   * The DOM element for the tablist.\n   */\n  private tablist: Element | null = null;\n\n  /**\n   * The width of the overflow scroll buttons.\n   */\n  private BUTTON_WIDTH = 44;\n\n  /**\n   * Navigates through tabs.\n   *\n   * @param direction `-1` to navigate backward, `1` to navigate forward.\n   * @param [options] The options.\n   * @param [options.immediate]\n   *   Defaults to `true`\n   *   `true` to make it \"immediate selection change\" mode, which does:\n   *\n   *   Starts with the selected item\n   *   Going prev/next item immediately changes the selection\n   */\n  protected _navigate(\n    direction: number,\n    { immediate = true }: { immediate?: boolean } = {}\n  ) {\n    const { selectorItem, selectorItemHighlighted, selectorItemSelected } = this\n      .constructor as typeof CDSTabs;\n    const nextItem = this._getNextItem(\n      this.querySelector(\n        immediate ? selectorItemSelected : selectorItemHighlighted\n      ) as CDSTab,\n      direction\n    );\n    if (!nextItem) {\n      return;\n    }\n\n    if (immediate) {\n      this._handleUserInitiatedSelectItem(nextItem as CDSTab);\n    } else {\n      forEach(this.querySelectorAll(selectorItem), (item) => {\n        (item as CDSTab)[immediate ? 'selected' : 'highlighted'] =\n          nextItem === item;\n      });\n    }\n\n    // Using `{ block: 'nearest' }` to prevent scrolling unless scrolling is absolutely necessary.\n    // `scrollIntoViewOptions` seems to work in latest Safari despite of MDN/caniuse table.\n    // IE falls back to the old behavior.\n    nextItem.scrollIntoView({ block: 'nearest', inline: 'nearest' });\n\n    const nextItemText = nextItem.textContent;\n    if (nextItemText) {\n      this._assistiveStatusText = nextItemText;\n    }\n    this._currentIndex += direction;\n    this.requestUpdate();\n  }\n\n  @HostListener('click')\n  protected _handleClick(event: MouseEvent) {\n    super._handleClick(event);\n  }\n\n  @HostListener('keydown')\n  protected _handleKeydown(event: KeyboardEvent) {\n    const { key } = event;\n    const action = (this.constructor as typeof CDSTabs).getAction(key);\n    const enabledTabs = this.querySelectorAll(`${prefix}-tab:not([disabled])`);\n    switch (action) {\n      case TABS_KEYBOARD_ACTION.HOME:\n        {\n          const [firstEnabledTab] = enabledTabs;\n          firstEnabledTab.scrollIntoView({\n            block: 'nearest',\n            inline: 'nearest',\n          });\n          this._handleUserInitiatedSelectItem(firstEnabledTab as CDSTab);\n          this.requestUpdate();\n        }\n        break;\n      case TABS_KEYBOARD_ACTION.END:\n        {\n          const lastEnabledTab = enabledTabs[enabledTabs.length - 1];\n          lastEnabledTab.scrollIntoView({\n            block: 'nearest',\n            inline: 'nearest',\n          });\n          this._handleUserInitiatedSelectItem(lastEnabledTab as CDSTab);\n          this.requestUpdate();\n        }\n        break;\n      case TABS_KEYBOARD_ACTION.NAVIGATING:\n        {\n          const direction = NAVIGATION_DIRECTION[key];\n          if (direction) {\n            this._navigate(direction);\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Handles click on overflow scroll buttons.\n   *\n   * @param _ Event object\n   * @param [options] The options.\n   * @param [options.direction] `-1` to scroll forward, `1` to scroll backward.\n   */\n  protected _handleScrollButtonClick(_, { direction }) {\n    if (!this.tablist) {\n      return;\n    }\n    const { scrollLeft, clientWidth, scrollWidth } =\n      this._contentContainerNode!;\n    switch (direction) {\n      case -1:\n        this._contentContainerNode!.scrollLeft = Math.max(\n          scrollLeft - (scrollWidth / this._totalTabs) * 1.5,\n          0\n        );\n        break;\n      case 1:\n        this._contentContainerNode!.scrollLeft =\n          Math.min(\n            scrollLeft + (scrollWidth / this._totalTabs) * 1.5,\n            scrollWidth - clientWidth\n          ) + 1;\n        break;\n      default:\n        break;\n    }\n  }\n\n  _handleSlotchange() {\n    const { selectorItemSelected } = this.constructor as typeof CDSTabs;\n    const selectedItem = this.querySelector(selectorItemSelected);\n    const nextItem = this._getNextItem(selectedItem as CDSTab, 1);\n\n    // Specifies child `<cds-custom-tab>` to hide its divider instead of using CSS,\n    // until `:host-context()` gets supported in all major browsers\n    if (nextItem) {\n      (nextItem as CDSTab).hideDivider = true;\n    }\n  }\n\n  protected _selectionDidChange(itemToSelect: CDSTab) {\n    super._selectionDidChange(itemToSelect);\n    this._assistiveStatusText = this.selectedItemAssistiveText;\n  }\n\n  /**\n   * The scrolling container.\n   */\n  @query(`.${prefix}--tabs-nav-content-container`)\n  private _contentContainerNode?: HTMLElement;\n\n  /**\n   * The scrolling content.\n   */\n  @query(`.${prefix}--tabs-nav-content`)\n  private _contentNode?: HTMLElement;\n\n  /**\n   * The current scroll position.\n   */\n  @state()\n  private _currentScrollPosition = 0;\n\n  /**\n   * The left-hand sentinel to track intersection with the host element.\n   * If they intersect, the left-hand paginator button should be hidden.\n   */\n  @query(`.${prefix}--sub-content-left`)\n  private _intersectionLeftSentinelNode?: HTMLElement;\n\n  /**\n   * The right-hand sentinel to track intersection with the host element.\n   * If they intersect, the right-hand paginator button should be hidden.\n   */\n  @query(`.${prefix}--sub-content-right`)\n  private _intersectionRightSentinelNode?: HTMLElement;\n\n  /**\n   * An assistive text for screen reader to announce, telling the open state.\n   */\n  @property({ attribute: 'selecting-items-assistive-text' })\n  selectingItemsAssistiveText =\n    'Selecting items. Use up and down arrow keys to navigate.';\n\n  /**\n   * An assistive text for screen reader to announce, telling that an item is selected.\n   */\n  @property({ attribute: 'selected-item-assistive-text' })\n  selectedItemAssistiveText = 'Selected an item.';\n\n  /**\n   * The content of the trigger button for narrow mode.\n   */\n  @property({ attribute: 'trigger-content' })\n  triggerContent = '';\n\n  /**\n   * Tabs type.\n   */\n  @property({ reflect: true })\n  type = TABS_TYPE.REGULAR;\n\n  /**\n   * `true` if left-hand scroll intersection sentinel intersects with the host element.\n   * In this condition, the left-hand paginator button should be hidden.\n   */\n  @state()\n  private _isIntersectionLeftTrackerInContent = true;\n\n  /**\n   * `true` if right-hand scroll intersection sentinel intersects with the host element.\n   * In this condition, the right-hand paginator button should be hidden.\n   */\n  @state()\n  private _isIntersectionRightTrackerInContent = true;\n\n  /**\n   * The observer for the intersection of left-side content edge.\n   */\n  private _observerIntersection: IntersectionObserver | null = null;\n\n  /**\n   * The intersection observer callback for the scrolling container.\n   *\n   * @param records The intersection observer records.\n   */\n  private _observeIntersectionContainer = (records) => {\n    const {\n      _intersectionLeftSentinelNode: intersectionLeftSentinelNode,\n      _intersectionRightSentinelNode: intersectionRightSentinelNode,\n    } = this;\n\n    records.forEach(({ isIntersecting, target }) => {\n      if (target === intersectionLeftSentinelNode) {\n        this._isIntersectionLeftTrackerInContent = isIntersecting;\n      }\n      if (target === intersectionRightSentinelNode) {\n        this._isIntersectionRightTrackerInContent = isIntersecting;\n      }\n    });\n  };\n\n  /**\n   * Cleans-up and creates the intersection observer for the scrolling container.\n   *\n   * @param [options] The options.\n   * @param [options.create] `true` to create the new intersection observer.\n   */\n  private _cleanAndCreateIntersectionObserverContainer({\n    create,\n  }: { create?: boolean } = {}) {\n    const {\n      _intersectionLeftSentinelNode: intersectionLeftSentinelNode,\n      _intersectionRightSentinelNode: intersectionRightSentinelNode,\n    } = this;\n\n    if (this._observerIntersection) {\n      this._observerIntersection.disconnect();\n      this._observerIntersection = null;\n    }\n\n    if (create) {\n      this._observerIntersection = new IntersectionObserver(\n        this._observeIntersectionContainer,\n        {\n          root: this,\n          threshold: 0,\n        }\n      );\n\n      if (intersectionLeftSentinelNode) {\n        this._observerIntersection.observe(intersectionLeftSentinelNode);\n      }\n      if (intersectionRightSentinelNode) {\n        this._observerIntersection.observe(intersectionRightSentinelNode);\n      }\n    }\n  }\n\n  disconnectedCallback() {\n    this._cleanAndCreateIntersectionObserverContainer();\n    super.disconnectedCallback();\n  }\n\n  shouldUpdate(changedProperties) {\n    super.shouldUpdate(changedProperties);\n    if (this.tablist) {\n      const { clientWidth, scrollWidth } = this.tablist;\n      this._isScrollable = scrollWidth > clientWidth;\n    }\n    const { selectorItem } = this.constructor as typeof CDSTabs;\n    if (changedProperties.has('type')) {\n      forEach(this.querySelectorAll(selectorItem), (elem) => {\n        this._totalTabs++;\n        (elem as CDSTab).type = this.type;\n      });\n    }\n    return true;\n  }\n\n  firstUpdated() {\n    const { selectorTablist } = this.constructor as typeof CDSTabs;\n    const tablist = this.shadowRoot!.querySelector(selectorTablist)!;\n    this.tablist = tablist;\n    this._cleanAndCreateIntersectionObserverContainer({ create: true });\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('value')) {\n      const tab = this.querySelector(\n        `${prefix}-tab[value=\"${this.value}\"]`\n      ) as HTMLElement;\n      if (tab) {\n        const { width: tabWidth } = tab?.getBoundingClientRect() ?? {};\n        const start = tab.offsetLeft ?? 0;\n        const end = tab.offsetLeft + tabWidth;\n\n        // The start and end of the visible area of the tablist\n        const visibleStart = this.tablist!.scrollLeft + this.BUTTON_WIDTH;\n        const visibleEnd =\n          this.tablist!.scrollLeft +\n          this.tablist!.clientWidth -\n          this.BUTTON_WIDTH;\n\n        // The beginning of the tab is clipped and not visible\n        if (start < visibleStart) {\n          this.tablist!.scrollLeft = start - this.BUTTON_WIDTH;\n        }\n\n        // The end of the tab is clipped and not visible\n        if (end > visibleEnd) {\n          this.tablist!.scrollLeft =\n            end + this.BUTTON_WIDTH - this.tablist!.clientWidth;\n        }\n      }\n    }\n\n    if (changedProperties.has('_currentScrollPosition')) {\n      if (this._contentNode) {\n        this._contentNode.style.insetInlineStart = `-${this._currentScrollPosition}px`;\n      }\n    }\n  }\n\n  /**\n   * Render the previous button if tablist is wider than container.\n   */\n  protected renderPreviousButton(): TemplateResult | null {\n    const {\n      _isIntersectionLeftTrackerInContent: isIntersectionLeftTrackerInContent,\n    } = this;\n    const previousButtonClasses = classMap({\n      [`${prefix}--tab--overflow-nav-button`]: true,\n      [`${prefix}--tabs__nav-caret-left`]: true,\n      [`${prefix}--tab--overflow-nav-button--previous`]: true,\n      [`${prefix}--tab--overflow-nav-button--hidden`]:\n        isIntersectionLeftTrackerInContent,\n    });\n    return html`\n      <button\n        part=\"prev-button\"\n        tabindex=\"-1\"\n        aria-hidden=\"true\"\n        class=\"${previousButtonClasses}\"\n        @click=${(_) =>\n          this._handleScrollButtonClick(_, {\n            direction: NAVIGATION_DIRECTION.Left,\n          })}>\n        ${ChevronLeft16()}\n      </button>\n    `;\n  }\n\n  /**\n   * Render the next button if tablist is wider than container.\n   */\n  protected renderNextButton(): TemplateResult | null {\n    const {\n      _isIntersectionRightTrackerInContent: isIntersectionRightTrackerInContent,\n    } = this;\n    const nextButtonClasses = classMap({\n      [`${prefix}--tab--overflow-nav-button`]: true,\n      [`${prefix}--tabs__nav-caret-right`]: true,\n      [`${prefix}--tab--overflow-nav-button--next`]: true,\n      [`${prefix}--tab--overflow-nav-button--hidden`]:\n        isIntersectionRightTrackerInContent,\n    });\n    return html`\n      <button\n        part=\"next-button\"\n        tabindex=\"-1\"\n        aria-hidden=\"true\"\n        class=\"${nextButtonClasses}\"\n        @click=${(_) =>\n          this._handleScrollButtonClick(_, {\n            direction: NAVIGATION_DIRECTION.Right,\n          })}>\n        ${ChevronRight16()}\n      </button>\n    `;\n  }\n\n  render() {\n    const {\n      _assistiveStatusText: assistiveStatusText,\n      _handleSlotchange: handleSlotchange,\n    } = this;\n\n    return html`\n      ${this.renderPreviousButton()}\n      <div class=\"${prefix}--tabs-nav-content-container\">\n        <div class=\"${prefix}--tabs-nav-content\">\n          <div class=\"${prefix}--tabs-nav\">\n            <div id=\"tablist\" role=\"tablist\" class=\"${prefix}--tab--list\">\n              <div class=\"${prefix}--sub-content-left\"></div>\n              <slot @slotchange=${handleSlotchange}></slot>\n              <div class=\"${prefix}--sub-content-right\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      ${this.renderNextButton()}\n      <div\n        class=\"${prefix}--assistive-text\"\n        role=\"status\"\n        aria-live=\"assertive\"\n        aria-relevant=\"additions text\">\n        ${assistiveStatusText}\n      </div>\n    `;\n  }\n\n  /**\n   * Symbols of keys that triggers opening/closing menu and selecting/deselecting menu item.\n   */\n  static TRIGGER_KEYS = new Set([' ', 'Enter']);\n\n  /**\n   * A selector that will return tabs.\n   */\n  static get selectorItem() {\n    return `${prefix}-tab`;\n  }\n\n  /**\n   * A selector that will return enabled tabs.\n   */\n  static get selectorItemEnabled() {\n    return `${prefix}-tab:not([disabled])`;\n  }\n\n  /**\n   * A selector that will return highlighted tabs.\n   */\n  static get selectorItemHighlighted() {\n    return `${prefix}-tab[highlighted]`;\n  }\n\n  /**\n   * A selector that will return selected tabs.\n   */\n  static get selectorItemSelected() {\n    return `${prefix}-tab[selected]`;\n  }\n\n  /**\n   * A selector that returns the tablist\n   */\n  static get selectorTablist() {\n    return `.${prefix}--tab--list`;\n  }\n\n  /**\n   * The name of the custom event fired before a tab is selected upon a user gesture.\n   * Cancellation of this event stops changing the user-initiated selection.\n   */\n  static get eventBeforeSelect() {\n    return `${prefix}-tabs-beingselected`;\n  }\n\n  /**\n   * The name of the custom event fired after a a tab is selected upon a user gesture.\n   */\n  static get eventSelect() {\n    return `${prefix}-tabs-selected`;\n  }\n\n  static styles = styles;\n\n  /**\n   * @param key The key symbol.\n   * @returns A action for dropdown for the given key symbol.\n   */\n  static getAction(key: string) {\n    if (key === 'Home') {\n      return TABS_KEYBOARD_ACTION.HOME;\n    }\n    if (key === 'End') {\n      return TABS_KEYBOARD_ACTION.END;\n    }\n    if (key in NAVIGATION_DIRECTION) {\n      return TABS_KEYBOARD_ACTION.NAVIGATING;\n    }\n    return TABS_KEYBOARD_ACTION.NONE;\n  }\n}\n"],"names":["customElement"],"mappings":"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"}