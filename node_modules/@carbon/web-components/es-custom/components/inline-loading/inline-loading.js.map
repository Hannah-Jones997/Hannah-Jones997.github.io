{"version":3,"file":"inline-loading.js","sources":["../../../src/components/inline-loading/inline-loading.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport CheckmarkFilled16 from '@carbon/icons/lib/checkmark--filled/16.js';\nimport ErrorFilled16 from '@carbon/icons/lib/error--filled/16.js';\nimport { prefix } from '../../globals/settings';\nimport getLoadingIcon from '../loading/loading-icon';\nimport { INLINE_LOADING_STATE } from './defs';\nimport styles from './inline-loading.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { INLINE_LOADING_STATE };\n\n/**\n * Lnline loading spinner.\n *\n * @element cds-custom-inline-loading\n * @fires cds-custom-inline-loading-onsuccess The custom event fired when inline-loading has finished status\n */\n@customElement(`${prefix}-inline-loading`)\nclass CDSInlineLoading extends LitElement {\n  /**\n   * @deprecated The 'assistive-text' property will be deprecated in the next major release. Please use `icon-description` instead.\n   */\n  @property({ attribute: 'assistive-text' })\n  get assistiveText() {\n    return this.iconDescription;\n  }\n  set assistiveText(value) {\n    this.iconDescription = value;\n  }\n  /**\n   * The assistive text for the spinner icon.\n   */\n  @property({ attribute: 'icon-description' })\n  iconDescription = 'Loading';\n\n  /**\n   * Provide a delay for the setTimeout for success\n   */\n  @property({ attribute: 'success-delay' })\n  successDelay = 1500;\n\n  /**\n   * @returns The template for the status icon.\n   */\n  private _renderIcon() {\n    const { iconDescription, status } = this;\n    if (status === INLINE_LOADING_STATE.ERROR) {\n      return ErrorFilled16({\n        class: `${prefix}--inline-loading--error`,\n        children: html`<title>${iconDescription}</title>`,\n      });\n    }\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n    };\n\n    if (status === INLINE_LOADING_STATE.FINISHED) {\n      setTimeout(() => {\n        this.dispatchEvent(\n          new CustomEvent(\n            (this.constructor as typeof CDSInlineLoading).eventOnSuccess,\n            init\n          )\n        );\n      }, this.successDelay);\n\n      return CheckmarkFilled16({\n        class: `${prefix}--inline-loading__checkmark-container`,\n        children: html`<title>${iconDescription}</title>`,\n      });\n    }\n    if (\n      status === INLINE_LOADING_STATE.INACTIVE ||\n      status === INLINE_LOADING_STATE.ACTIVE\n    ) {\n      const classes = classMap({\n        [`${prefix}--loading`]: true,\n        [`${prefix}--loading--small`]: true,\n        [`${prefix}--loading--stop`]: status === INLINE_LOADING_STATE.INACTIVE,\n      });\n      return html`\n        <div class=\"${classes}\">\n          ${getLoadingIcon({ description: iconDescription, small: true })}\n        </div>\n      `;\n    }\n    return undefined;\n  }\n\n  /**\n   * The loading status.\n   */\n  @property({ reflect: true })\n  status = INLINE_LOADING_STATE.ACTIVE;\n\n  static get eventOnSuccess() {\n    return `${prefix}-inline-loading-onsuccess`;\n  }\n\n  connectedCallback() {\n    if (!this.hasAttribute('aria-live')) {\n      this.setAttribute('aria-live', 'assertive');\n    }\n    super.connectedCallback();\n  }\n\n  render() {\n    const statusIconResult = this._renderIcon();\n    const statusIconWrapperResult = !statusIconResult\n      ? undefined\n      : html`\n          <div class=\"${prefix}--inline-loading__animation\">\n            ${statusIconResult}\n          </div>\n        `;\n    return html`\n      ${statusIconWrapperResult}\n      <p class=\"${prefix}--inline-loading__text\"><slot></slot></p>\n    `;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSInlineLoading;\n"],"names":["customElement"],"mappings":"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"}