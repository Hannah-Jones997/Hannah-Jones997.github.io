{"version":3,"file":"structured-list-row.js","sources":["../../../src/components/structured-list/structured-list-row.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport CheckmarkFilled16 from '@carbon/icons/lib/checkmark--filled/16.js';\nimport { prefix } from '../../globals/settings';\nimport HostListener from '../../globals/decorators/host-listener';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport RadioGroupManager, {\n  NAVIGATION_DIRECTION,\n  ManagedRadioButtonDelegate,\n} from '../../globals/internal/radio-group-manager';\nimport styles from './structured-list.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Map of navigation direction by key.\n */\nconst navigationDirectionForKey = {\n  ArrowUp: NAVIGATION_DIRECTION.BACKWARD,\n  Up: NAVIGATION_DIRECTION.BACKWARD, // IE\n  ArrowDown: NAVIGATION_DIRECTION.FORWARD,\n  Down: NAVIGATION_DIRECTION.FORWARD, // IE\n};\n\n/**\n * The interface for `RadioGroupManager` for structured list row.\n */\nclass StructuredListRowRadioButtonDelegate\n  implements ManagedRadioButtonDelegate\n{\n  /**\n   * The structured list row to target.\n   */\n  private _row: CDSStructuredListRow;\n\n  constructor(row: CDSStructuredListRow) {\n    this._row = row;\n  }\n\n  get checked() {\n    return this._row.selected;\n  }\n\n  set checked(checked) {\n    this._row.selected = checked;\n    this._row.tabIndex = checked ? 0 : -1;\n  }\n\n  get tabIndex() {\n    return this._row.tabIndex;\n  }\n\n  set tabIndex(tabIndex) {\n    this._row.tabIndex = tabIndex;\n  }\n\n  get name() {\n    return this._row.selectionName;\n  }\n\n  compareDocumentPosition(other: StructuredListRowRadioButtonDelegate) {\n    return this._row.compareDocumentPosition(other._row);\n  }\n\n  focus() {\n    this._row.focus();\n  }\n}\n\n/**\n * Structured list row.\n *\n * @element cds-custom-structured-list-row\n */\n@customElement(`${prefix}-structured-list-row`)\nclass CDSStructuredListRow extends HostListenerMixin(LitElement) {\n  /**\n   * The radio group manager associated with the radio button.\n   */\n  private _manager: RadioGroupManager | null = null;\n\n  /**\n   * The interface for `RadioGroupManager` for structured list row.\n   */\n  private _radioButtonDelegate = new StructuredListRowRadioButtonDelegate(this);\n\n  /**\n   * The hidden radio button.\n   */\n  @query('#input')\n  private _inputNode!: HTMLInputElement;\n\n  /**\n   * Handles `click` event on this element.\n   */\n  @HostListener('click')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleClick = () => {\n    const { _inputNode: inputNode } = this;\n    if (inputNode) {\n      this.selected = true;\n      if (this._manager) {\n        this._manager.select(this._radioButtonDelegate);\n      }\n    }\n  };\n\n  /**\n   * Handles `keydown` event on this element.\n   */\n  @HostListener('keydown')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleKeydown = (event: KeyboardEvent) => {\n    const { _inputNode: inputNode } = this;\n    const manager = this._manager;\n    if (inputNode && manager) {\n      const navigationDirection = navigationDirectionForKey[event.key];\n      if (navigationDirection) {\n        manager.select(\n          manager.navigate(this._radioButtonDelegate, navigationDirection)\n        );\n      }\n      if (event.key === ' ' || event.key === 'Enter') {\n        manager.select(this._radioButtonDelegate);\n      }\n    }\n  };\n\n  /**\n   * `true` if this structured list row should be selectable and selected.\n   */\n  @property({ type: Boolean, reflect: true })\n  selected = false;\n\n  /**\n   * The `name` attribute for the `<input>` for selection.\n   * If present, this structured list row will be a selectable one.\n   */\n  @property({ attribute: 'selection-name' })\n  selectionName = '';\n\n  /**\n   * The `value` attribute for the `<input>` for selection.\n   */\n  @property({ attribute: 'selection-value' })\n  selectionValue = '';\n\n  /**\n   * The content to put into the `<title>` attribute of the selection icon.\n   */\n  @property({ attribute: 'selection-icon-title' })\n  selectionIconTitle = '';\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'row');\n    }\n    super.connectedCallback();\n    if (!this._manager) {\n      this._manager = RadioGroupManager.get(\n        this.getRootNode({ composed: true }) as Document\n      );\n      const { selectionName } = this;\n      if (selectionName) {\n        this._manager?.add(this._radioButtonDelegate);\n      }\n    }\n  }\n\n  disconnectedCallback() {\n    if (this._manager) {\n      this._manager.delete(this._radioButtonDelegate);\n    }\n    super.disconnectedCallback();\n  }\n\n  updated(changedProperties) {\n    const { _manager: manager, selectionName } = this;\n    if (changedProperties.has('selectionName')) {\n      if (manager) {\n        manager.delete(\n          this._radioButtonDelegate,\n          changedProperties.get('selectionName')\n        );\n        if (selectionName) {\n          manager.add(this._radioButtonDelegate);\n        }\n      }\n      this.setAttribute(\n        'tabindex',\n        !selectionName ||\n          !manager ||\n          !manager.shouldBeFocusable(this._radioButtonDelegate)\n          ? '-1'\n          : '0'\n      );\n    }\n  }\n\n  render() {\n    const { selected, selectionName, selectionValue, selectionIconTitle } =\n      this;\n    if (selectionName) {\n      // \"Selected\" style with `.${prefix}--structured-list-td` does not work somehow - Need investigation\n      return html`\n        <slot></slot>\n        <input\n          id=\"input\"\n          type=\"radio\"\n          class=\"${prefix}--structured-list-input ${prefix}--visually-hidden\"\n          .checked=${selected}\n          name=${selectionName}\n          value=${ifDefined(selectionValue)} />\n        <div\n          class=\"${prefix}--structured-list-td ${prefix}--structured-list-cell\">\n          ${CheckmarkFilled16({\n            class: `${prefix}--structured-list-svg`,\n            title: selectionIconTitle,\n          })}\n        </div>\n      `;\n    }\n    return html` <slot></slot> `;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSStructuredListRow;\n"],"names":["customElement"],"mappings":"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"}