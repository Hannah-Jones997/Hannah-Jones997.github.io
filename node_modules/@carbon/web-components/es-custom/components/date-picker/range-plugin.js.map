{"version":3,"file":"range-plugin.js","sources":["../../../src/components/date-picker/range-plugin.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// @ts-nocheck\nimport rangePlugin, { Config } from 'flatpickr/dist/plugins/rangePlugin';\nimport { Instance as FlatpickrInstance } from 'flatpickr/dist/types/instance';\nimport { Plugin } from 'flatpickr/dist/types/options';\nimport on from '../../globals/mixins/on';\nimport Handle from '../../globals/internal/handle';\n\n/**\n * `FlatpickrInstance` with additional properties used for `range` plugin.\n */\nexport interface ExtendedFlatpickrInstanceRangePlugin\n  extends FlatpickrInstance {\n  /**\n   * The handle for `blur` event handler for from date range input.\n   */\n  _hBXCEDatePickerRangePluginOnBlurFrom?: Handle | null;\n\n  /**\n   * The handle for `blur` event handler for to date range input.\n   */\n  _hBXCEDatePickerRangePluginOnBlurTo?: Handle | null;\n}\n\n/**\n * @param config Plugin configuration.\n * @returns\n *   An extension of Flatpickr `rangePlugin` that does the following:\n *\n *   Better ensures the calendar dropdown is always aligned to the `<input>` for the starting date.\n *     Workaround for: https://github.com/flatpickr/flatpickr/issues/1944\n *   Disables the logic in Flatpickr `rangePlugin` that calculates the new range with the old selected date\n *     when user selects a date from calendar dropdown.\n *     We'd like to reset the selection when user re-opens calendar dropdown and re-selects a date.\n *     Workaround for: https://github.com/flatpickr/flatpickr/issues/1958\n *   Disables the logic in Flatpickr `rangePlugin` that closes the calendar dropdown\n *     when it's launched from the `<input>` for the end date and user selects a date.\n *     Workaround for: https://github.com/flatpickr/flatpickr/issues/1958\n *   Ensures that the `<input>` in shadow DOM is treated as part of Flatpickr UI,\n *     by ensuring such `<input>` hits `.contains()` search from `fp.config.ignoredFocusElements`.\n *     Without that, Flatpickr clears the `<input>` when end date hasn't been selected yet (which we don't want).\n */\nexport default (config: Config): Plugin => {\n  const factory = rangePlugin({ position: 'left', ...config });\n  return (fp: ExtendedFlatpickrInstanceRangePlugin) => {\n    const origRangePlugin = factory(fp);\n    const { onReady: origOnReady } = origRangePlugin;\n\n    const getDateStrFromInputs = (dates: Array<string>) => {\n      return dates\n        .filter((value) => value)\n        .filter(\n          (d, i, arr) =>\n            fp.config.mode !== 'range' ||\n            fp.config.enableTime ||\n            arr.indexOf(d) === i\n        )\n        .join(\n          fp.config.mode !== 'range'\n            ? fp.config.conjunction\n            : fp.l10n.rangeSeparator\n        );\n    };\n\n    const handleBlur = (event: FocusEvent) => {\n      event.stopPropagation();\n      const firstInput = fp._input;\n      const secondInput = config.input as HTMLInputElement;\n      const isInput =\n        event.target === firstInput || event.target === secondInput;\n      const valueChanged =\n        getDateStrFromInputs([firstInput.value, secondInput.value]) !==\n        fp.getDateStr();\n      const relatedTargetIsCalendar =\n        event.relatedTarget &&\n        event.relatedTarget instanceof Node &&\n        fp.calendarContainer.contains(event.relatedTarget);\n\n      if (isInput && valueChanged && !relatedTargetIsCalendar) {\n        fp.setDate(\n          [firstInput.value, secondInput.value],\n          true,\n          firstInput === fp.altInput\n            ? fp.config.altFormat\n            : fp.config.dateFormat\n        );\n      }\n    };\n\n    const release = () => {\n      if (fp._hBXCEDatePickerRangePluginOnBlurFrom) {\n        fp._hBXCEDatePickerRangePluginOnBlurFrom =\n          fp._hBXCEDatePickerRangePluginOnBlurFrom.release();\n      }\n      if (fp._hBXCEDatePickerRangePluginOnBlurTo) {\n        fp._hBXCEDatePickerRangePluginOnBlurTo =\n          fp._hBXCEDatePickerRangePluginOnBlurTo.release();\n      }\n    };\n    return Object.assign(origRangePlugin, {\n      onReady() {\n        origOnReady.call(this);\n        const { ignoredFocusElements } = fp.config;\n        ignoredFocusElements.push(\n          ...ignoredFocusElements\n            .map((elem) => elem.shadowRoot as any)\n            .filter(Boolean)\n        );\n\n        // Setup event listeners for the blur even on both inputs. In the case\n        // of the first input, we're overriding the blur event handler from\n        // the library to fix it by setting it on the capture phase and then\n        // stopping propagation. This is necessary b/c the library does not take\n        // the range plugin into consideration when it calls setDate.\n        // Workaround for: https://github.com/flatpickr/flatpickr/issues/2918\n        release();\n        if (fp.config.allowInput) {\n          fp._hBXCEDatePickerRangePluginOnBlurFrom = on(\n            fp._input,\n            'blur',\n            handleBlur,\n            { capture: true }\n          );\n          fp._hBXCEDatePickerRangePluginOnBlurTo = on(\n            config.input as HTMLInputElement,\n            'blur',\n            handleBlur,\n            { capture: true }\n          );\n        }\n      },\n    });\n  };\n};\n"],"names":["rangePlugin"],"mappings":"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"}