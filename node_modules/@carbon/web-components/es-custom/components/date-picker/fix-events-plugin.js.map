{"version":3,"file":"fix-events-plugin.js","sources":["../../../src/components/date-picker/fix-events-plugin.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Instance as FlatpickrInstance } from 'flatpickr/dist/types/instance';\nimport { Plugin } from 'flatpickr/dist/types/options';\nimport on from '../../globals/mixins/on';\nimport Handle from '../../globals/internal/handle';\nimport CDSDatePickerInput from './date-picker-input';\n\n/**\n * The configuration for the Flatpickr plugin to fix Flatpickr's behavior of certain events.\n */\nexport interface DatePickerFixEventsPluginConfig {\n  /**\n   * The input box to enter starting date.\n   */\n  inputFrom: CDSDatePickerInput;\n\n  /**\n   * The input box to enter end date.\n   */\n  inputTo?: CDSDatePickerInput;\n}\n\n/**\n * `FlatpickrInstance` with additional properties used for `carbonFlatpickrFixEventsPlugin`.\n */\nexport interface ExtendedFlatpickrInstanceFixEventsPlugin\n  extends FlatpickrInstance {\n  /**\n   * The handle for `keydown` event handler in the `<input>` for the starting date.\n   */\n  _hCDSCEDatePickerFixEventsPluginKeydownFrom?: Handle | null;\n\n  /**\n   * The handle for `keydown` event handler in the `<input>` for the end date.\n   */\n  _hCDSCEDatePickerFixEventsPluginKeydownTo?: Handle | null;\n}\n\n/**\n * @param config Plugin configuration.\n * @returns A Flatpickr plugin to fix Flatpickr's behavior of certain events.\n */\nexport default (config: DatePickerFixEventsPluginConfig): Plugin =>\n  (fp: ExtendedFlatpickrInstanceFixEventsPlugin) => {\n    /**\n     * Handles `keydown` event.\n     */\n    const handleKeydown = (event: KeyboardEvent) => {\n      const { inputFrom, inputTo } = config;\n      const { key, target } = event;\n      if (inputFrom === target || inputTo === target) {\n        switch (key) {\n          case 'Enter':\n            // Makes sure the hitting enter key picks up pending values of both `<input>`\n            // Workaround for: https://github.com/flatpickr/flatpickr/issues/1942\n            fp.setDate(\n              [inputFrom.value!, (inputTo && inputTo.value)!],\n              true,\n              fp.config.dateFormat\n            );\n            event.stopPropagation();\n            break;\n          case 'ArrowLeft':\n          case 'Left':\n          case 'ArrowRight':\n          case 'Right':\n            // Prevents Flatpickr code from canceling the event if left/right arrow keys are hit on `<input>`,\n            // so user can move the keyboard cursor for editing dates\n            // Workaround for: https://github.com/flatpickr/flatpickr/issues/1943\n            event.stopPropagation();\n            break;\n          default:\n            break;\n        }\n      }\n    };\n\n    /**\n     * Releases event listeners used in this Flatpickr plugin.\n     */\n    const release = () => {\n      if (fp._hCDSCEDatePickerFixEventsPluginKeydownTo) {\n        fp._hCDSCEDatePickerFixEventsPluginKeydownTo =\n          fp._hCDSCEDatePickerFixEventsPluginKeydownTo.release();\n      }\n      if (fp._hCDSCEDatePickerFixEventsPluginKeydownFrom) {\n        fp._hCDSCEDatePickerFixEventsPluginKeydownFrom =\n          fp._hCDSCEDatePickerFixEventsPluginKeydownFrom.release();\n      }\n    };\n\n    /**\n     * Sets up event listeners used for this Flatpickr plugin.\n     */\n    const init = () => {\n      release();\n      const { inputFrom, inputTo } = config;\n      fp._hCDSCEDatePickerFixEventsPluginKeydownFrom = on(\n        inputFrom,\n        'keydown',\n        handleKeydown,\n        true\n      );\n      if (inputTo) {\n        fp._hCDSCEDatePickerFixEventsPluginKeydownTo = on(\n          inputTo,\n          'keydown',\n          handleKeydown,\n          true\n        );\n      }\n    };\n\n    /**\n     * Registers this Flatpickr plugin.\n     */\n    const register = () => {\n      fp.loadedPlugins.push('carbonFlatpickrFixEventsPlugin');\n    };\n\n    return {\n      onReady: [register, init],\n      onDestroy: [release],\n    };\n  };\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;AAKG;AAuCH;;;AAGG;AACH,sBAAe,CAAC,MAAuC,KACrD,CAAC,EAA4C,KAAI;AAC/C;;AAEG;AACH,IAAA,MAAM,aAAa,GAAG,CAAC,KAAoB,KAAI;AAC7C,QAAA,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,MAAM;AACrC,QAAA,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,KAAK;QAC7B,IAAI,SAAS,KAAK,MAAM,IAAI,OAAO,KAAK,MAAM,EAAE;YAC9C,QAAQ,GAAG;AACT,gBAAA,KAAK,OAAO;;;oBAGV,EAAE,CAAC,OAAO,CACR,CAAC,SAAS,CAAC,KAAM,GAAG,OAAO,IAAI,OAAO,CAAC,KAAK,EAAG,EAC/C,IAAI,EACJ,EAAE,CAAC,MAAM,CAAC,UAAU,CACrB;oBACD,KAAK,CAAC,eAAe,EAAE;oBACvB;AACF,gBAAA,KAAK,WAAW;AAChB,gBAAA,KAAK,MAAM;AACX,gBAAA,KAAK,YAAY;AACjB,gBAAA,KAAK,OAAO;;;;oBAIV,KAAK,CAAC,eAAe,EAAE;oBACvB;;;AAKR,KAAC;AAED;;AAEG;IACH,MAAM,OAAO,GAAG,MAAK;AACnB,QAAA,IAAI,EAAE,CAAC,yCAAyC,EAAE;AAChD,YAAA,EAAE,CAAC,yCAAyC;AAC1C,gBAAA,EAAE,CAAC,yCAAyC,CAAC,OAAO,EAAE;;AAE1D,QAAA,IAAI,EAAE,CAAC,2CAA2C,EAAE;AAClD,YAAA,EAAE,CAAC,2CAA2C;AAC5C,gBAAA,EAAE,CAAC,2CAA2C,CAAC,OAAO,EAAE;;AAE9D,KAAC;AAED;;AAEG;IACH,MAAM,IAAI,GAAG,MAAK;AAChB,QAAA,OAAO,EAAE;AACT,QAAA,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,MAAM;AACrC,QAAA,EAAE,CAAC,2CAA2C,GAAG,EAAE,CACjD,SAAS,EACT,SAAS,EACT,aAAa,EACb,IAAI,CACL;QACD,IAAI,OAAO,EAAE;AACX,YAAA,EAAE,CAAC,yCAAyC,GAAG,EAAE,CAC/C,OAAO,EACP,SAAS,EACT,aAAa,EACb,IAAI,CACL;;AAEL,KAAC;AAED;;AAEG;IACH,MAAM,QAAQ,GAAG,MAAK;AACpB,QAAA,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,gCAAgC,CAAC;AACzD,KAAC;IAED,OAAO;AACL,QAAA,OAAO,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC;QACzB,SAAS,EAAE,CAAC,OAAO,CAAC;KACrB;AACH,CAAC;;;;"}