{"version":3,"file":"month-select-plugin.js","sources":["../../../src/components/date-picker/month-select-plugin.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Instance as FlatpickrInstance } from 'flatpickr/dist/types/instance';\nimport { Locale } from 'flatpickr/dist/types/locale';\nimport { Plugin } from 'flatpickr/dist/types/options';\nimport { forEach } from '../../globals/internal/collection-helpers';\n\n/**\n * @param monthNumber The month number.\n * @param shorthand `true` to use shorthand month.\n * @param locale The Flatpickr locale data.\n * @returns The month string.\n */\nconst monthToStr = (monthNumber: number, shorthand: boolean, locale: Locale) =>\n  locale.months[shorthand ? 'shorthand' : 'longhand'][monthNumber];\n\n/**\n * The configuration for the Flatpickr plugin to use text instead of `<select>` for month picker.\n */\nexport interface DatePickerMonthSelectPluginConfig {\n  /**\n   * `true` to use shorthand month.\n   */\n  shorthand?: boolean;\n\n  /**\n   * The CSS selector for the container of month/year selection UI.\n   */\n  selectorFlatpickrMonthYearContainer: string;\n\n  /**\n   * The CSS selector for the container of year selection UI.\n   */\n  selectorFlatpickrYearContainer: string;\n\n  /**\n   * The CSS selector for the text-based month selection UI.\n   */\n  selectorFlatpickrCurrentMonth: string;\n\n  /**\n   * The CSS class for the text-based month selection UI.\n   */\n  classFlatpickrCurrentMonth: string;\n}\n\n/**\n * @param config Plugin configuration.\n * @returns A Flatpickr plugin to use text instead of `<select>` for month picker.\n */\nexport default (config: DatePickerMonthSelectPluginConfig): Plugin =>\n  (fp: FlatpickrInstance) => {\n    /**\n     * Replaces `<select>` for month with text content.\n     */\n    const setupElements = () => {\n      const {\n        monthElements,\n        yearElements,\n        currentMonth,\n        l10n,\n        _createElement: createElement,\n      } = fp;\n      if (!monthElements) {\n        return;\n      }\n      const {\n        shorthand,\n        selectorFlatpickrMonthYearContainer,\n        selectorFlatpickrYearContainer,\n        classFlatpickrCurrentMonth,\n      } = config;\n      monthElements.forEach((elem) => {\n        if (!elem.parentNode) {\n          return;\n        }\n        elem.parentNode.removeChild(elem);\n      });\n      monthElements.splice(\n        0,\n        monthElements.length,\n        ...monthElements.map(() => {\n          const monthElement = createElement(\n            'span',\n            classFlatpickrCurrentMonth\n          );\n          monthElement.textContent = monthToStr(\n            currentMonth,\n            shorthand === true,\n            l10n\n          );\n          const monthYearContainer = yearElements[0].closest(\n            selectorFlatpickrMonthYearContainer\n          );\n          if (monthYearContainer) {\n            monthYearContainer.insertBefore(\n              monthElement,\n              yearElements[0].closest(selectorFlatpickrYearContainer)\n            );\n          }\n          return monthElement;\n        })\n      );\n    };\n\n    /**\n     * Updates the text-based month UI with the latest selected date.\n     */\n    const updateCurrentMonth = () => {\n      const { yearElements, currentMonth, l10n } = fp;\n      const {\n        shorthand,\n        selectorFlatpickrMonthYearContainer,\n        selectorFlatpickrCurrentMonth,\n      } = config;\n      const monthStr = monthToStr(currentMonth, shorthand === true, l10n);\n      yearElements.forEach((elem) => {\n        const currentMonthContainer = elem.closest(\n          selectorFlatpickrMonthYearContainer\n        );\n        if (currentMonthContainer) {\n          forEach(\n            currentMonthContainer.querySelectorAll(\n              selectorFlatpickrCurrentMonth\n            ),\n            (monthElement) => {\n              monthElement.textContent = monthStr;\n            }\n          );\n        }\n      });\n    };\n\n    /**\n     * Registers this Flatpickr plugin.\n     */\n    const register = () => {\n      fp.loadedPlugins.push('carbonFlatpickrMonthSelectPlugin');\n    };\n\n    return {\n      onMonthChange: updateCurrentMonth,\n      onValueUpdate: updateCurrentMonth,\n      onOpen: updateCurrentMonth,\n      onReady: [setupElements, updateCurrentMonth, register],\n    };\n  };\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;AAKG;AAOH;;;;;AAKG;AACH,MAAM,UAAU,GAAG,CAAC,WAAmB,EAAE,SAAkB,EAAE,MAAc,KACzE,MAAM,CAAC,MAAM,CAAC,SAAS,GAAG,WAAW,GAAG,UAAU,CAAC,CAAC,WAAW,CAAC;AAgClE;;;AAGG;AACH,wBAAe,CAAC,MAAyC,KACvD,CAAC,EAAqB,KAAI;AACxB;;AAEG;IACH,MAAM,aAAa,GAAG,MAAK;AACzB,QAAA,MAAM,EACJ,aAAa,EACb,YAAY,EACZ,YAAY,EACZ,IAAI,EACJ,cAAc,EAAE,aAAa,GAC9B,GAAG,EAAE;QACN,IAAI,CAAC,aAAa,EAAE;YAClB;;QAEF,MAAM,EACJ,SAAS,EACT,mCAAmC,EACnC,8BAA8B,EAC9B,0BAA0B,GAC3B,GAAG,MAAM;AACV,QAAA,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;AAC7B,YAAA,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB;;AAEF,YAAA,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC;AACnC,SAAC,CAAC;AACF,QAAA,aAAa,CAAC,MAAM,CAClB,CAAC,EACD,aAAa,CAAC,MAAM,EACpB,GAAG,aAAa,CAAC,GAAG,CAAC,MAAK;YACxB,MAAM,YAAY,GAAG,aAAa,CAChC,MAAM,EACN,0BAA0B,CAC3B;AACD,YAAA,YAAY,CAAC,WAAW,GAAG,UAAU,CACnC,YAAY,EACZ,SAAS,KAAK,IAAI,EAClB,IAAI,CACL;YACD,MAAM,kBAAkB,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAChD,mCAAmC,CACpC;YACD,IAAI,kBAAkB,EAAE;AACtB,gBAAA,kBAAkB,CAAC,YAAY,CAC7B,YAAY,EACZ,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,8BAA8B,CAAC,CACxD;;AAEH,YAAA,OAAO,YAAY;SACpB,CAAC,CACH;AACH,KAAC;AAED;;AAEG;IACH,MAAM,kBAAkB,GAAG,MAAK;QAC9B,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,IAAI,EAAE,GAAG,EAAE;QAC/C,MAAM,EACJ,SAAS,EACT,mCAAmC,EACnC,6BAA6B,GAC9B,GAAG,MAAM;AACV,QAAA,MAAM,QAAQ,GAAG,UAAU,CAAC,YAAY,EAAE,SAAS,KAAK,IAAI,EAAE,IAAI,CAAC;AACnE,QAAA,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;YAC5B,MAAM,qBAAqB,GAAG,IAAI,CAAC,OAAO,CACxC,mCAAmC,CACpC;YACD,IAAI,qBAAqB,EAAE;gBACzB,OAAO,CACL,qBAAqB,CAAC,gBAAgB,CACpC,6BAA6B,CAC9B,EACD,CAAC,YAAY,KAAI;AACf,oBAAA,YAAY,CAAC,WAAW,GAAG,QAAQ;AACrC,iBAAC,CACF;;AAEL,SAAC,CAAC;AACJ,KAAC;AAED;;AAEG;IACH,MAAM,QAAQ,GAAG,MAAK;AACpB,QAAA,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,kCAAkC,CAAC;AAC3D,KAAC;IAED,OAAO;AACL,QAAA,aAAa,EAAE,kBAAkB;AACjC,QAAA,aAAa,EAAE,kBAAkB;AACjC,QAAA,MAAM,EAAE,kBAAkB;AAC1B,QAAA,OAAO,EAAE,CAAC,aAAa,EAAE,kBAAkB,EAAE,QAAQ,CAAC;KACvD;AACH,CAAC;;;;"}