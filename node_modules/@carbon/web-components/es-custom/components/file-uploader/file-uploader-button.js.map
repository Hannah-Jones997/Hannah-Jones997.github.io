{"version":3,"file":"file-uploader-button.js","sources":["../../../src/components/file-uploader/file-uploader-button.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2020, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\nimport { prefix } from '../../globals/settings';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport ifNonEmpty from '../../globals/directives/if-non-empty';\nimport styles from './file-uploader.scss?lit';\nimport { BUTTON_KIND, BUTTON_SIZE } from '../button/defs';\n\nexport { FORM_ELEMENT_COLOR_SCHEME as TILE_COLOR_SCHEME } from '../../globals/shared-enums';\n\n/**\n * File uploader button .\n *\n * @element cds-custom-file-uploader-button\n * @fires cds-custom-file-uploader-button-changed The custom event fired when there is a user gesture to select files to upload.\n */\n@customElement(`${prefix}-file-uploader-button`)\nclass CDSFileUploaderButton extends HostListenerMixin(LitElement) {\n  /**\n   * Handles `click` event on the button.\n   */\n  private _handleClick(event) {\n    event.target.value = null;\n    const { selectorInput } = this.constructor as typeof CDSFileUploaderButton;\n    this?.shadowRoot?.querySelector(selectorInput)?.setAttribute('value', '');\n    (this?.shadowRoot?.querySelector(selectorInput) as HTMLElement).click();\n  }\n\n  /**\n   * Handles `keydown` event on the button.\n   */\n  private _handleKeyDown(event) {\n    const { selectorInput } = this.constructor as typeof CDSFileUploaderButton;\n    if (event.key === 'Enter' || event.key === 'Space') {\n      this?.shadowRoot?.querySelector(selectorInput)?.setAttribute('value', '');\n      (this?.shadowRoot?.querySelector(selectorInput) as HTMLElement).click();\n    }\n  }\n\n  /**\n   * Handles user gesture to select files to upload.\n   *\n   * @param event The event.\n   */\n  private _handleChange(event: Event | DragEvent) {\n    const addedFiles = this._getFiles(event);\n    const { eventChange, selectorInput } = this\n      .constructor as typeof CDSFileUploaderButton;\n    this.dispatchEvent(\n      new CustomEvent(eventChange, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          addedFiles,\n        },\n      })\n    );\n\n    const fileInput = this?.shadowRoot?.querySelector(selectorInput);\n    if (fileInput) {\n      (fileInput as HTMLInputElement).value = '';\n    }\n  }\n\n  /**\n   * @param event The event.\n   * @returns The list of files user chose to upload.\n   */\n  private _getFiles(event: Event | DragEvent) {\n    const { files } =\n      (event.type === 'drop'\n        ? (event as DragEvent).dataTransfer\n        : (event.target as HTMLInputElement)) ?? {};\n    const { accept } = this;\n    if (!accept || !/^(change|drop)$/.test(event.type)) {\n      return Array.from(files ?? []);\n    }\n    const acceptedTypes = new Set(accept.split(' '));\n    return Array.prototype.filter.call(\n      files,\n      ({ name, type: mimeType = '' }) => {\n        const fileExtensionRegExp = /\\.[^.]+$/;\n        const hasFileExtension = fileExtensionRegExp.test(name);\n        const [fileExtension] = !hasFileExtension\n          ? [undefined]\n          : (fileExtensionRegExp.exec(name) ?? []);\n\n        return (\n          acceptedTypes.has(mimeType) ||\n          (fileExtension && acceptedTypes.has(fileExtension))\n        );\n      }\n    ) as File[];\n  }\n\n  /**\n   * Button kind.\n   */\n  @property({ reflect: true, attribute: 'button-kind' })\n  buttonKind = BUTTON_KIND.PRIMARY;\n\n  /**\n   * Button size.\n   */\n  @property({ reflect: true })\n  size = BUTTON_SIZE.MEDIUM;\n\n  /**\n   * The file types the file input should accept, separated by space.\n   */\n  @property()\n  accept = '';\n\n  /**\n   * `true` if this drop container should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * `true` if this drop container should accept more than one files at once.\n   * Note that even with `false` set here, user _can_ select multiple files one by one.\n   */\n  @property({ type: Boolean, reflect: true })\n  multiple = false;\n\n  /**\n   * The name of the input.\n   */\n  @property({ reflect: true })\n  name = '';\n\n  /**\n   * The shadow DOM slot to put this drop container in.\n   */\n  @property({ reflect: true })\n  slot = 'drop-container';\n\n  render() {\n    const {\n      accept,\n      disabled,\n      multiple,\n      name,\n      buttonKind,\n      size,\n      _handleChange: handleChange,\n    } = this;\n\n    const labelClasses = classMap({\n      [`${prefix}--file-browse-btn`]: true,\n      [`${prefix}--file-browse-btn--disabled`]: disabled,\n    });\n    const buttonClasses = classMap({\n      [`${prefix}--btn`]: true,\n      [`${prefix}--btn--${buttonKind}`]: buttonKind,\n      [`${prefix}--layout--size-${size}`]: size,\n      [`${prefix}--btn--disabled`]: disabled,\n      [`${prefix}--btn--${size}`]: size,\n    });\n    return html`\n      <button\n        type=\"button\"\n        class=\"${buttonClasses}\"\n        @click=\"${this._handleClick}\"\n        @keydown=\"${this._handleKeyDown}\">\n        <slot></slot>\n      </button>\n      <label class=\"${labelClasses}\" for=\"file\"> </label>\n      <input\n        id=\"file\"\n        type=\"file\"\n        class=\"${prefix}--file-input\"\n        tabindex=\"-1\"\n        accept=\"${ifNonEmpty(accept)}\"\n        ?disabled=\"${disabled}\"\n        ?multiple=\"${multiple}\"\n        name=\"${ifNonEmpty(name)}\"\n        @change=\"${handleChange}\" />\n    `;\n  }\n\n  /**\n   * The name of the custom event fired when there is a user gesture to select files to upload.\n   */\n  static get eventChange() {\n    return `${prefix}-file-uploader-button-changed`;\n  }\n\n  /**\n   * A selector that will return the file `<input>`.\n   */\n  static get selectorInput() {\n    return `.${prefix}--file-input`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSFileUploaderButton;\n"],"names":["customElement"],"mappings":"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"}