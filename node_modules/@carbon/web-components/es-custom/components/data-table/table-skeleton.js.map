{"version":3,"file":"table-skeleton.js","sources":["../../../src/components/data-table/table-skeleton.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\nimport { prefix } from '../../globals/settings';\nimport styles from './data-table.scss?lit';\n\n/**\n * Data table skeleton\n *\n * @element cds-custom-table-skeleton\n */\n@customElement(`${prefix}-table-skeleton`)\nclass CDSTableSkeleton extends LitElement {\n  /**\n   * Optionally specify the displayed headers\n   */\n  @property()\n  private headers: string[] = [];\n\n  /**\n   * Optionally specify whether you want the Skeleton to be rendered as a compact DataTable\n   */\n  @property({ type: Boolean, reflect: true })\n  compact = false;\n\n  /**\n   * Specify the number of columns that you want to render in the skeleton state\n   */\n  @property({ type: Number, reflect: true, attribute: 'column-count' })\n  columnCount = 5;\n\n  /**\n   * Specify the number of rows that you want to render in the skeleton state\n   */\n  @property({ type: Number, reflect: true, attribute: 'row-count' })\n  rowCount = 5;\n\n  /**\n   * Specify if the table header should be rendered as part of the skeleton.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'show-header' })\n  showHeader = true;\n\n  /**\n   * Specify if the table toolbar should be rendered as part of the skeleton.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'show-toolbar' })\n  showToolbar = true;\n\n  /**\n   *  true to add useZebraStyles striping.\n   */\n  @property({ type: Boolean, reflect: true })\n  zebra = false;\n\n  /**\n   * @returns The header\n   */\n  protected _renderHeader() {\n    const { showHeader } = this;\n    return !showHeader\n      ? undefined\n      : html`\n          <div class=\"${prefix}--skeleton ${prefix}--data-table-container\">\n            <div class=\"${prefix}--data-table-header\">\n              <div class=\"${prefix}--data-table-header__title\"></div>\n              <div class=\"${prefix}--data-table-header__description\"></div>\n            </div>\n          </div>\n        `;\n  }\n\n  /**\n   * @returns The header\n   */\n  protected _renderToolbar() {\n    const { showToolbar } = this;\n    return !showToolbar\n      ? undefined\n      : html`\n          <section class=\"${prefix}--table-toolbar\">\n            <div class=\"${prefix}--toolbar-content\">\n              <span\n                class=\"${prefix}--skeleton ${prefix}--btn ${prefix}--btn--sm\"></span>\n            </div>\n          </section>\n        `;\n  }\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'table');\n    }\n    super.connectedCallback();\n  }\n\n  updated() {\n    if (this.headers.length) {\n      this.columnCount = this.headers.length;\n    } else {\n      this.headers = Array(this.columnCount).fill('');\n    }\n  }\n\n  render() {\n    const { compact, columnCount, headers, rowCount, zebra } = this;\n    const classes = classMap({\n      [`${prefix}--skeleton`]: true,\n      [`${prefix}--data-table`]: true,\n      [`${prefix}--data-table--compact`]: compact,\n      [`${prefix}--data-table--zebra`]: zebra,\n    });\n    return html`\n      ${this._renderHeader()} ${this._renderToolbar()}\n\n      <table class=\"${classes}\">\n        <thead>\n          <tr>\n            ${Array.from(new Array(columnCount)).map(\n              (_, index) => html`\n                <th>\n                  <div class=\"${prefix}--table-header-label\">\n                    ${headers[index]}\n                  </div>\n                </th>\n              `\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          ${Array.from(new Array(rowCount)).map(\n            () => html`\n              <tr>\n                ${Array.from(new Array(columnCount)).map(\n                  () => html`\n                    <td>\n                      <span></span>\n                    </td>\n                  `\n                )}\n              </tr>\n            `\n          )}\n        </tbody>\n      </table>\n    `;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSTableSkeleton;\n"],"names":["customElement"],"mappings":"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"}