{"version":3,"file":"dismissible-tag.js","sources":["../../../src/components/tag/dismissible-tag.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport Close16 from '@carbon/icons/lib/close/16.js';\nimport { prefix } from '../../globals/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport HostListener from '../../globals/decorators/host-listener';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport { TAG_SIZE, TAG_TYPE } from './defs';\nimport CDSTag from '../tag/tag';\nimport '../tooltip/index';\nimport styles from './tag.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { TAG_SIZE, TAG_TYPE };\n\n/**\n * Dismissible Tag.\n *\n * @element cds-custom-dismissible-tag\n *\n * @fires cds-custom-dismissible-tag-beingclosed - The custom event fired as the element is being closed\n * @fires cds-custom-dismissible-tag-closed - The custom event fired after the element has been closed\n */\n@customElement(`${prefix}-dismissible-tag`)\nclass CDSDismissibleTag extends HostListenerMixin(FocusMixin(CDSTag)) {\n  @query('button')\n  protected _buttonNode!: HTMLButtonElement;\n\n  /**\n   * Finds the next focusable dismissible tag sibling\n   * @returns {HTMLElement|null} The next focusable dismissible tag or null\n   */\n  protected _findNextFocusableTag() {\n    let nextElement = this.nextElementSibling;\n    while (nextElement) {\n      if (\n        nextElement.tagName.toLowerCase() === `${prefix}-dismissible-tag` &&\n        !nextElement.hasAttribute('disabled') &&\n        (nextElement as HTMLElement).getAttribute('open') !== 'false'\n      ) {\n        return nextElement;\n      }\n      nextElement = nextElement.nextElementSibling;\n    }\n    return null;\n  }\n\n  /**\n   * Handles `slotchange` event.\n   */\n  protected _handleAILabelSlotChange({ target }: Event) {\n    const hasContent = (target as HTMLSlotElement)\n      .assignedNodes()\n      .filter((elem) =>\n        (elem as HTMLElement).matches !== undefined\n          ? // remove reference of slug in v12\n            (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSDismissibleTag).aiLabelItem\n            ) ||\n            // remove reference of slug in v12\n            (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSDismissibleTag).slugItem\n            )\n          : false\n      );\n    if (hasContent.length > 0) {\n      (hasContent[0] as HTMLElement).setAttribute('tag', `${this.type}`);\n      (hasContent[0] as HTMLElement).setAttribute('size', 'sm');\n      (hasContent[0] as HTMLElement).setAttribute('kind', 'inline');\n    }\n    this.requestUpdate();\n  }\n\n  /**\n   * Handles `click` event on this element.\n   *\n   * @param event The event.\n   */\n  @HostListener('shadowRoot:click')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  protected _handleClick = (event: MouseEvent) => {\n    if (event.composedPath().indexOf(this._buttonNode!) >= 0) {\n      if (this.disabled) {\n        event.stopPropagation();\n      } else if (this.open) {\n        const nextFocusableTag = this._findNextFocusableTag();\n        const init = {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: {\n            triggeredBy: event.target,\n          },\n        };\n        if (\n          this.dispatchEvent(\n            new CustomEvent(\n              (this.constructor as typeof CDSDismissibleTag).eventBeforeClose,\n              init\n            )\n          )\n        ) {\n          this.open = false;\n          if (nextFocusableTag) {\n            const nextCloseIcon = (nextFocusableTag as CDSDismissibleTag)\n              ._buttonNode;\n            if (nextCloseIcon) {\n              nextCloseIcon.focus();\n            }\n          }\n          this.dispatchEvent(\n            new CustomEvent(\n              (this.constructor as typeof CDSDismissibleTag).eventClose,\n              init\n            )\n          );\n        }\n      }\n    }\n  };\n\n  /**\n   * `true` if the tag should be disabled\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * Provide a custom tooltip label for the dismiss button\n   */\n  @property({ type: String, attribute: 'dismiss-tooltip-label', reflect: true })\n  dismissTooltipLabel?: string;\n\n  /**\n   * `true` if the tag should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  open = true;\n\n  /**\n   * The size of the tag.\n   */\n  @property({ type: String, reflect: true })\n  size = TAG_SIZE.MEDIUM;\n\n  /**\n   * Provide a custom `title` to be inserted in the tag.\n   */\n  @property({ type: String, attribute: 'tag-title', reflect: true })\n  tagTitle = '';\n\n  /**\n   * Provide text to be rendered inside of a the tag.\n   */\n  @property({ type: String, reflect: true })\n  text = '';\n\n  /**\n   * The type of the tag.\n   */\n  @property({ reflect: true })\n  type = TAG_TYPE.GRAY;\n\n  render() {\n    const {\n      disabled,\n      _handleAILabelSlotChange: handleAILabelSlotChange,\n      _handleIconSlotChange: handleIconSlotChange,\n      _hasEllipsisApplied: hasEllipsisApplied,\n      size,\n      tagTitle,\n      text,\n      dismissTooltipLabel,\n    } = this;\n\n    const dismissLabel = `Dismiss \"${text}\"`;\n    const dismissActionLabel =\n      dismissTooltipLabel || (hasEllipsisApplied ? dismissLabel : 'Dismiss');\n\n    return html`\n      ${size !== TAG_SIZE.SMALL\n        ? html`<slot name=\"icon\" @slotchange=\"${handleIconSlotChange}\"></slot>`\n        : ''}\n      <div class=\"${prefix}--interactive--tag-children\">\n        <span\n          title=\"${tagTitle ? tagTitle : text}\"\n          class=\"${prefix}--tag__label\">\n          ${text}\n        </span>\n        <slot name=\"decorator\" @slotchange=\"${handleAILabelSlotChange}\"></slot>\n        <slot name=\"ai-label\" @slotchange=\"${handleAILabelSlotChange}\"></slot>\n        <slot name=\"slug\" @slotchange=\"${handleAILabelSlotChange}\"></slot>\n        <cds-custom-tooltip align=\"bottom\" enter-delay-ms=${0}>\n          <button\n            class=\"sb-tooltip-trigger\"\n            role=\"button\"\n            aria-labelledby=\"content\"\n            class=\"${prefix}--tag__close-icon\"\n            ?disabled=${disabled}>\n            ${Close16()}\n          </button>\n          <cds-custom-tooltip-content id=\"content\">\n            ${dismissActionLabel}\n          </cds-custom-tooltip-content>\n        </cds-custom-tooltip>\n      </div>\n    `;\n  }\n\n  /**\n   * A selector that will return the slug item.\n   *\n   * remove in v12\n   */\n  static get slugItem() {\n    return `${prefix}-slug`;\n  }\n\n  /**\n   * A selector that will return the AI Label item.\n   */\n  static get aiLabelItem() {\n    return `${prefix}-ai-label`;\n  }\n\n  /**\n   * The name of the custom event fired before this tag is being closed upon a user gesture.\n   * Cancellation of this event stops the user-initiated action of closing this tag.\n   */\n  static get eventBeforeClose() {\n    return `${prefix}-dismissible-tag-beingclosed`;\n  }\n\n  /**\n   * The name of the custom event fired after this tag is closed upon a user gesture.\n   */\n  static get eventClose() {\n    return `${prefix}-dismissible-tag-closed`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSDismissibleTag;\n"],"names":["customElement"],"mappings":"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"}