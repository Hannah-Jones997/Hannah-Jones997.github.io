{"version":3,"file":"actionable-notification.js","sources":["../../../src/components/notification/actionable-notification.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport CheckmarkFilled20 from '@carbon/icons/lib/checkmark--filled/20.js';\nimport ErrorFilled20 from '@carbon/icons/lib/error--filled/20.js';\nimport InformationFilled20 from '@carbon/icons/lib/information--filled/20.js';\nimport InformationSquareFilled20 from '@carbon/icons/lib/information--square--filled/20.js';\nimport WarningFilled20 from '@carbon/icons/lib/warning--filled/20.js';\nimport WarningAltFilled20 from '@carbon/icons/lib/warning--alt--filled/20.js';\nimport { html, svg } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { prefix, selectorTabbable } from '../../globals/settings';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\nimport { NOTIFICATION_TYPE, NOTIFICATION_KIND } from './defs';\nimport CDSInlineNotification from './inline-notification';\nimport styles from './actionable-notification.scss?lit';\nimport HostListener from '../../globals/decorators/host-listener';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\n\n/**\n * The default icons, keyed by notification kind.\n */\nconst iconsForKinds = {\n  [NOTIFICATION_KIND.SUCCESS]: CheckmarkFilled20,\n  [NOTIFICATION_KIND.INFO]: InformationFilled20,\n  [NOTIFICATION_KIND.INFO_SQUARE]: InformationSquareFilled20,\n  [NOTIFICATION_KIND.WARNING]: WarningFilled20,\n  [NOTIFICATION_KIND.WARNING_ALT]: WarningAltFilled20,\n  [NOTIFICATION_KIND.ERROR]: ErrorFilled20,\n};\n\n// eslint-disable-next-line no-bitwise\nconst PRECEDING =\n  Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n// eslint-disable-next-line no-bitwise\nconst FOLLOWING =\n  Node.DOCUMENT_POSITION_FOLLOWING | Node.DOCUMENT_POSITION_CONTAINED_BY;\n\n/**\n * Tries to focus on the given elements and bails out if one of them is successful.\n *\n * @param elems The elements.\n * @param reverse `true` to go through the list in reverse order.\n * @returns `true` if one of the attempts is successful, `false` otherwise.\n */\nfunction tryFocusElems(elems: NodeListOf<HTMLElement>, reverse = false) {\n  if (!reverse) {\n    for (let i = 0; i < elems.length; ++i) {\n      const elem = elems[i];\n      elem.focus();\n      const active = elem.ownerDocument!.activeElement;\n      if (\n        active === elem ||\n        active?.contains(elem) ||\n        active?.shadowRoot?.contains(elem)\n      ) {\n        return true;\n      }\n    }\n  } else {\n    for (let i = elems.length - 1; i >= 0; --i) {\n      const elem = elems[i];\n      elem.focus();\n      const active = elem.ownerDocument!.activeElement;\n      if (\n        active === elem ||\n        active?.contains(elem) ||\n        active?.shadowRoot?.contains(elem)\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * Actionable notification.\n *\n * @element cds-custom-actionable-notification\n * @slot subtitle - The subtitle.\n * @slot title - The title.\n * @fires cds-custom-notification-beingclosed\n *   The custom event fired before this notification is being closed upon a user gesture.\n *   Cancellation of this event stops the user-initiated action of closing this notification.\n * @fires cds-custom-notification-closed - The custom event fired after this notification is closed upon a user gesture.\n */\n@customElement(`${prefix}-actionable-notification`)\nclass CDSActionableNotification extends HostListenerMixin(\n  CDSInlineNotification\n) {\n  protected _type = NOTIFICATION_TYPE.ACTIONABLE;\n\n  /**\n   * Inline notification type.\n   */\n  @property({ type: Boolean, reflect: true })\n  inline = false;\n\n  /**\n   * Pass in the action button label that will be rendered within the ActionableNotification.\n   */\n  @property({ type: String, reflect: true, attribute: 'action-button-label' })\n  actionButtonLabel = '';\n\n  /**\n   * Specify if pressing the escape key should close notifications\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'close-on-escape' })\n  closeOnEscape = true;\n\n  /**\n   * Specify if focus should be moved to the component when the notification contains actions\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'has-focus' })\n  hasFocus = true;\n\n  /**\n   * Node to track focus going outside of actionable notification content.\n   */\n  @query('#start-sentinel')\n  private _startSentinelNode!: HTMLAnchorElement;\n\n  /**\n   * Node to track focus going outside of actionable notification content.\n   */\n  @query('#end-sentinel')\n  private _endSentinelNode!: HTMLAnchorElement;\n\n  /**\n   * Handles `keydown` event on this event.\n   * Escape will close the notification if `closeOnEscape` is true\n   */\n  @HostListener('keydown')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleKeyDown = async (event: KeyboardEvent) => {\n    const { key } = event;\n    if (this.closeOnEscape && key === 'Escape') {\n      this.open = false;\n    }\n  };\n\n  @HostListener('shadowRoot:focusout')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleBlur = async ({ target, relatedTarget }: FocusEvent) => {\n    const {\n      open,\n      _startSentinelNode: startSentinelNode,\n      _endSentinelNode: endSentinelNode,\n    } = this;\n    const oldContains =\n      target !== this &&\n      (this.contains(target as Node) ||\n        (this.shadowRoot?.contains(target as Node) &&\n          target !== (startSentinelNode as Node) &&\n          target !== (endSentinelNode as Node)));\n    const currentContains =\n      relatedTarget !== this &&\n      (this.contains(relatedTarget as Node) ||\n        (this.shadowRoot?.contains(relatedTarget as Node) &&\n          relatedTarget !== (startSentinelNode as Node) &&\n          relatedTarget !== (endSentinelNode as Node)));\n\n    // Performs focus wrapping if _all_ of the following is met:\n    // * This notification is open\n    // * Notification role attribute is set to 'alertdialog'\n    // * The viewport still has focus\n    // * Notification body used to have focus but no longer has focus\n    const { selectorTabbable: selectorTabbableForActionableNotification } = this\n      .constructor as typeof CDSActionableNotification;\n    if (\n      open &&\n      this.getAttribute('role') === 'alertdialog' &&\n      relatedTarget &&\n      !(relatedTarget instanceof CDSActionableNotification) &&\n      oldContains &&\n      !currentContains\n    ) {\n      const comparisonResult = (target as Node).compareDocumentPosition(\n        relatedTarget as Node\n      );\n      // tabbable elements in Shadow root\n      const shadowElems = this.shadowRoot!.querySelectorAll(\n        selectorTabbableForActionableNotification\n      );\n      // tabbable elements in light DOM\n      const lightElems = this.querySelectorAll(\n        selectorTabbableForActionableNotification\n      );\n      // eslint-disable-next-line no-bitwise\n      if (relatedTarget === startSentinelNode || comparisonResult & PRECEDING) {\n        await (this.constructor as typeof CDSActionableNotification)._delay();\n        if (\n          !tryFocusElems(shadowElems as NodeListOf<HTMLElement>, true) &&\n          !tryFocusElems(lightElems as NodeListOf<HTMLElement>, true) &&\n          relatedTarget !== this\n        ) {\n          this.focus();\n        }\n      }\n      // eslint-disable-next-line no-bitwise\n      else if (\n        relatedTarget === endSentinelNode ||\n        comparisonResult & FOLLOWING\n      ) {\n        await (this.constructor as typeof CDSActionableNotification)._delay();\n        if (\n          !tryFocusElems(lightElems as NodeListOf<HTMLElement>) &&\n          !tryFocusElems(shadowElems as NodeListOf<HTMLElement>)\n        ) {\n          this.focus();\n        }\n      }\n    }\n  };\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'alertdialog');\n    }\n    super.connectedCallback();\n  }\n\n  protected _renderIcon() {\n    const { statusIconDescription, kind, inline } = this;\n    const { [kind]: icon } = iconsForKinds;\n    return !icon\n      ? undefined\n      : icon({\n          class: `${prefix}--${inline ? 'inline' : 'toast'}-notification__icon`,\n          children: !statusIconDescription\n            ? undefined\n            : svg`<title>${statusIconDescription}</title>`,\n        });\n  }\n\n  protected _renderText() {\n    const { subtitle, title, _type: type } = this;\n    return html`\n      <div class=\"${prefix}--${type}-notification__text-wrapper\">\n        <div class=\"${prefix}--${type}-notification__content\">\n          <div class=\"${prefix}--${type}-notification__title\">\n            ${title}<slot name=\"title\"></slot>\n          </div>\n          <div class=\"${prefix}--${type}-notification__subtitle\">\n            ${subtitle}<slot name=\"subtitle\"></slot>\n          </div>\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * The caption.\n   */\n  @property()\n  caption = '';\n\n  updated(changedProperties) {\n    super.updated(changedProperties);\n    const button = this.querySelector(\n      (this.constructor as typeof CDSActionableNotification)\n        .selectorActionButton\n    );\n    if (changedProperties.has('inline')) {\n      button?.setAttribute('kind', this.inline ? 'ghost' : 'tertiary');\n    }\n    if (changedProperties.has('lowContrast')) {\n      if (this.lowContrast) {\n        button?.setAttribute('low-contrast', 'true');\n      } else {\n        button?.removeAttribute('low-contrast');\n      }\n    }\n    if (changedProperties.has('hideCloseButton')) {\n      if (this.hideCloseButton) {\n        button?.setAttribute('hide-close-button', 'true');\n      } else {\n        button?.removeAttribute('hide-close-button');\n      }\n    }\n    if (changedProperties.has('hasFocus')) {\n      if (this.hasFocus) {\n        this.focus();\n      }\n    }\n  }\n\n  render() {\n    const { _type: type } = this;\n    return html`\n      <a\n        id=\"start-sentinel\"\n        class=\"${prefix}--visually-hidden\"\n        href=\"javascript:void 0\"\n        role=\"navigation\"></a>\n      <div class=\"${prefix}--${type}-notification__details\">\n        ${this._renderIcon()} ${this._renderText()}\n      </div>\n      <slot name=\"action\"></slot>\n      ${this._renderButton()}\n      <a\n        id=\"end-sentinel\"\n        class=\"${prefix}--visually-hidden\"\n        href=\"javascript:void 0\"\n        role=\"navigation\"></a>\n    `;\n  }\n\n  /**\n   * @param ms The number of milliseconds.\n   * @returns A promise that is resolves after the given milliseconds.\n   */\n  private static _delay(ms = 0) {\n    return new Promise((resolve) => {\n      setTimeout(resolve, ms);\n    });\n  }\n\n  /**\n   * A selector selecting tabbable nodes.\n   */\n  static get selectorTabbable() {\n    return selectorTabbable;\n  }\n\n  /**\n   * A selector that will return the action button element\n   */\n  static get selectorActionButton() {\n    return `${prefix}-actionable-notification-button`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSActionableNotification;\n"],"names":["customElement"],"mappings":"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"}