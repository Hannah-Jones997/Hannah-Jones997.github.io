{"version":3,"file":"content-switcher.js","sources":["../../../src/components/content-switcher/content-switcher.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport { forEach, indexOf } from '../../globals/internal/collection-helpers';\nimport { NAVIGATION_DIRECTION, CONTENT_SWITCHER_SIZE } from './defs';\nimport CDSContentSwitcherItem from './content-switcher-item';\nimport styles from './content-switcher.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { NAVIGATION_DIRECTION, CONTENT_SWITCHER_SIZE };\n\n/**\n * @param index The index\n * @param length The length of the array.\n * @returns The new index, adjusting overflow/underflow.\n */\nconst capIndex = (index: number, length: number) => {\n  if (index < 0) {\n    return length - 1;\n  }\n  if (index >= length) {\n    return 0;\n  }\n  return index;\n};\n\n/**\n * Content switcher.\n *\n * @element cds-custom-content-switcher\n * @fires cds-custom-content-switcher-beingselected\n *   The custom event fired before a content switcher item is selected upon a user gesture.\n *   Cancellation of this event stops changing the user-initiated selection.\n * @fires cds-custom-content-switcher-selected - The custom event fired after a a content switcher item is selected upon a user gesture.\n */\n@customElement(`${prefix}-content-switcher`)\nclass CDSContentSwitcher extends LitElement {\n  /**\n   * Handles `mouseover`/`mouseout` events on `<slot>`.\n   *\n   * @param event The event.\n   * @param event.target The event target.\n   * @param event.type The event type.\n   */\n  private _handleHover({ target, type }: MouseEvent) {\n    const { selectorItem } = this.constructor as typeof CDSContentSwitcher;\n    const items = this.querySelectorAll(selectorItem);\n    const index =\n      type !== 'mouseover'\n        ? -1\n        : indexOf(items, (target as Element).closest(selectorItem)!);\n    const nextIndex = index < 0 ? index : index + 1;\n    forEach(this.querySelectorAll(selectorItem), (elem, i) => {\n      // Specifies child `<cds-custom-content-switcher-item>` to hide its divider instead of using CSS,\n      // until `:host-context()` gets supported in all major browsers\n      (elem as CDSContentSwitcherItem).hideDivider = i === nextIndex;\n    });\n\n    const { selectorItemSelected } = this\n      .constructor as typeof CDSContentSwitcher;\n    const selectedItem = this.querySelector(selectorItemSelected);\n    const nextItem = this._getNextItem(\n      selectedItem as CDSContentSwitcherItem,\n      1\n    );\n    (nextItem as CDSContentSwitcherItem).hideDivider = true;\n  }\n\n  /**\n   * @param target The current event target.\n   * @returns The item to be selected.\n   */\n  protected _getCurrentItem(target: HTMLElement) {\n    const items = this.querySelectorAll(\n      (this.constructor as typeof CDSContentSwitcher).selectorItemEnabled\n    );\n    const { selectorItem } = this.constructor as typeof CDSContentSwitcher;\n    const containerItem = target.closest(\n      selectorItem\n    ) as CDSContentSwitcherItem;\n    const index = indexOf(items, containerItem);\n    return items[index] ?? null;\n  }\n\n  /**\n   * @param currentItem The currently selected item.\n   * @param direction The navigation direction.\n   * @returns The item to be selected.\n   */\n  protected _getNextItem(\n    currentItem: CDSContentSwitcherItem,\n    direction: number\n  ) {\n    const items = this.querySelectorAll(\n      (this.constructor as typeof CDSContentSwitcher).selectorItemEnabled\n    );\n    const currentIndex = indexOf(items, currentItem);\n    const nextIndex = capIndex(currentIndex + direction, items.length);\n    return nextIndex === currentIndex ? null : items[nextIndex];\n  }\n\n  /**\n   * Handles `click` event on content switcher item.\n   *\n   * @param event The event.\n   * @param event.target The event target.\n   */\n  protected _handleClick({ target }: MouseEvent) {\n    const currentItem = this._getCurrentItem(target as HTMLElement);\n    this._handleUserInitiatedSelectItem(currentItem as CDSContentSwitcherItem);\n  }\n\n  /**\n   * Handles `keydown` event on the top-level element in the shadow DOM.\n   *\n   * @param event The event.\n   * @param event.key The event key.\n   */\n  protected _handleKeydown({ key }: KeyboardEvent) {\n    if (key in NAVIGATION_DIRECTION) {\n      this._navigate(NAVIGATION_DIRECTION[key]);\n    }\n  }\n\n  /**\n   * Handles user-initiated selection of a content switcher item.\n   *\n   * @param [item] The content switcher item user wants to select.\n   */\n  protected _handleUserInitiatedSelectItem(item: CDSContentSwitcherItem) {\n    if (!item.disabled && item.value !== this.value) {\n      const init = {\n        bubbles: true,\n        composed: true,\n        detail: {\n          item,\n        },\n      };\n      const constructor = this.constructor as typeof CDSContentSwitcher;\n      const beforeSelectEvent = new CustomEvent(constructor.eventBeforeSelect, {\n        ...init,\n        cancelable: true,\n      });\n      if (this.dispatchEvent(beforeSelectEvent)) {\n        this._selectionDidChange(item);\n        const afterSelectEvent = new CustomEvent(constructor.eventSelect, init);\n        this.dispatchEvent(afterSelectEvent);\n      }\n    }\n  }\n\n  /**\n   * Navigates through content switcher items.\n   *\n   * @param direction `-1` to navigate backward, `1` to navigate forward.\n   */\n  protected _navigate(direction: number) {\n    const { selectorItemSelected } = this\n      .constructor as typeof CDSContentSwitcher;\n    const nextItem = this._getNextItem(\n      this.querySelector(selectorItemSelected) as CDSContentSwitcherItem,\n      direction\n    );\n    if (nextItem) {\n      this._handleUserInitiatedSelectItem(nextItem as CDSContentSwitcherItem);\n      this.requestUpdate();\n    }\n  }\n\n  /**\n   * A callback that runs after change in content switcher selection upon user interaction is confirmed.\n   *\n   * @param itemToSelect A content switcher item.\n   */\n  protected _selectionDidChange(itemToSelect: CDSContentSwitcherItem) {\n    this.value = itemToSelect.value;\n    forEach(\n      this.querySelectorAll(\n        (this.constructor as typeof CDSContentSwitcher).selectorItemSelected\n      ),\n      (item) => {\n        (item as CDSContentSwitcherItem).selected = false;\n      }\n    );\n    itemToSelect.selected = true;\n    // Waits for rendering with the new state that updates `tabindex`\n    Promise.resolve().then(() => {\n      itemToSelect.focus();\n\n      const { selectorItem } = this.constructor as typeof CDSContentSwitcher;\n      const items = this.querySelectorAll(selectorItem);\n      const index = indexOf(\n        items,\n        (itemToSelect as Element).closest(selectorItem)!\n      );\n      const nextIndex = index < 0 ? index : index + 1;\n      forEach(this.querySelectorAll(selectorItem), (elem, i) => {\n        // Specifies child `<cds-custom-content-switcher-item>` to hide its divider instead of using CSS,\n        // until `:host-context()` gets supported in all major browsers\n        (elem as CDSContentSwitcherItem).hideDivider = i === nextIndex;\n      });\n    });\n  }\n\n  /**\n   * The value of the selected item.\n   */\n  @property({ reflect: true })\n  value = '';\n\n  /**\n   * Content switcher size.\n   */\n  @property({ reflect: true })\n  size = CONTENT_SWITCHER_SIZE.REGULAR;\n\n  /**\n   * Icon only.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'icon' })\n  iconOnly = false;\n\n  shouldUpdate(changedProperties) {\n    if (changedProperties.has('value')) {\n      const { selectorItem } = this.constructor as typeof CDSContentSwitcher;\n      forEach(this.querySelectorAll(selectorItem), (elem) => {\n        (elem as CDSContentSwitcherItem).selected =\n          (elem as CDSContentSwitcherItem).value === this.value;\n      });\n    }\n    const { selectorIconItem } = this.constructor as typeof CDSContentSwitcher;\n    if (this.querySelector(selectorIconItem)) {\n      this.iconOnly = true;\n    }\n    return true;\n  }\n\n  _handleSlotchange() {\n    const { selectorItemSelected } = this\n      .constructor as typeof CDSContentSwitcher;\n    const selectedItem = this.querySelector(selectorItemSelected);\n    const nextItem = this._getNextItem(\n      selectedItem as CDSContentSwitcherItem,\n      1\n    );\n\n    // Specifies child `<cds-custom-content-switcher-item>` to hide its divider instead of using CSS,\n    // until `:host-context()` gets supported in all major browsers\n    (nextItem as CDSContentSwitcherItem).hideDivider = true;\n  }\n\n  /**\n   * A selector that will return content switcher items.\n   */\n  static get selectorItem() {\n    return `${prefix}-content-switcher-item`;\n  }\n\n  /**\n   * A selector that will return content switcher icon items.\n   */\n  static get selectorIconItem() {\n    return `${prefix}-content-switcher-item[icon]`;\n  }\n\n  /**\n   * A selector that will return enabled content switcher items.\n   */\n  static get selectorItemEnabled() {\n    return `${prefix}-content-switcher-item:not([disabled])`;\n  }\n\n  /**\n   * A selector that will return selected items.\n   */\n  static get selectorItemSelected() {\n    return `${prefix}-content-switcher-item[selected]`;\n  }\n\n  /**\n   * The name of the custom event fired before a content switcher item is selected upon a user gesture.\n   * Cancellation of this event stops changing the user-initiated selection.\n   */\n  static get eventBeforeSelect() {\n    return `${prefix}-content-switcher-beingselected`;\n  }\n\n  /**\n   * The name of the custom event fired after a a content switcher item is selected upon a user gesture.\n   */\n  static get eventSelect() {\n    return `${prefix}-content-switcher-selected`;\n  }\n\n  render() {\n    const {\n      _handleHover: handleHover,\n      _handleKeydown: handleKeydown,\n      _handleSlotchange: handleSlotchange,\n    } = this;\n    return html`\n      <slot\n        @click=\"${this._handleClick}\"\n        @keydown=\"${handleKeydown}\"\n        @mouseover=\"${handleHover}\"\n        @mouseout=\"${handleHover}\"\n        @slotchange=${handleSlotchange}></slot>\n    `;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSContentSwitcher;\n"],"names":["customElement"],"mappings":"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"}