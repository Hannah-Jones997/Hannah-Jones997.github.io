{"version":3,"file":"content-switcher-item.js","sources":["../../../src/components/content-switcher/content-switcher-item.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport styles from './content-switcher.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Content switcher button.\n *\n * @element cds-custom-content-switcher-item\n */\n@customElement(`${prefix}-content-switcher-item`)\nclass CDSContentSwitcherItem extends FocusMixin(LitElement) {\n  /**\n   * `true` if this content switcher item should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * `true` to hide the divider at the left.\n   *\n   * @private\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'hide-divider' })\n  hideDivider = false;\n\n  /**\n   * `true` if the content switcher button should be selected.\n   *\n   * @private\n   */\n  @property({ type: Boolean, reflect: true })\n  selected = false;\n\n  /**\n   * The element ID of target panel.\n   */\n  @property()\n  target!: string;\n\n  /**\n   * The `value` attribute that is set to the parent `<cds-custom-content-switcher>`\n   * when this content switcher item is selected.\n   */\n  @property()\n  value = '';\n\n  /**\n   * `true` if the content switcher button should be icon-only.\n   */\n  @property({ type: Boolean, reflect: true })\n  icon = false;\n\n  /**\n   * Specify how the trigger should align with the tooltip for icon-only\n   * switcher item\n   */\n  @property({ reflect: true, type: String })\n  align = 'top';\n\n  /**\n   * Determines whether the tooltip should close when inner content is\n   * activated (click, Enter or Space)\n   */\n  @property({ attribute: 'close-on-activation', reflect: true, type: Boolean })\n  closeOnActivation = true;\n\n  /**\n   * Specify the duration in milliseconds to delay before displaying the\n   * tooltip for icon-only switcher item\n   */\n  enterDelayMs = 100;\n\n  /**\n   * Specify the duration in milliseconds to delay before hiding the tooltip\n   * for icon-only switcher-item\n   *\n   * TODO: match upstream value once #10471 is resolved\n   */\n  leaveDelayMs = 100;\n\n  updated(changedProperties) {\n    if (changedProperties) {\n      this.shadowRoot\n        ?.querySelector(`${prefix}-tooltip`)\n        ?.classList.add(`${prefix}--icon-tooltip`);\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  protected _renderTooltipContent() {\n    return html`\n      <cds-custom-tooltip-content>\n        <slot name=\"tooltip-content\"></slot>\n      </cds-custom-tooltip-content>\n    `;\n  }\n\n  shouldUpdate(changedProperties) {\n    if (changedProperties.has('selected') || changedProperties.has('target')) {\n      const { selected, target } = this;\n      if (target) {\n        const doc = this.getRootNode() as HTMLDocument;\n        // `doc` can be an element if such element is orphaned\n        const targetNode = doc?.getElementById(target);\n        targetNode?.toggleAttribute('hidden', !selected);\n      }\n    }\n    return true;\n  }\n\n  render() {\n    const { disabled, selected, target } = this;\n    const className = classMap({\n      [`${prefix}--content-switcher-btn`]: true,\n      [`${prefix}--content-switcher--selected`]: selected,\n    });\n    const switcherItem = html`<button\n      type=\"button\"\n      role=\"tab\"\n      class=\"${className}\"\n      ?disabled=\"${disabled}\"\n      tabindex=\"${selected ? '0' : '-1'}\"\n      aria-controls=\"${ifDefined(target)}\"\n      aria-selected=\"${Boolean(selected)}\">\n      <span class=\"${prefix}--content-switcher__label\"><slot></slot></span>\n    </button>`;\n\n    if (this.icon) {\n      const { align, closeOnActivation, enterDelayMs, leaveDelayMs } = this;\n      return html`<cds-custom-tooltip\n        align=${align}\n        close-on-activation=\"${closeOnActivation}\"\n        enter-delay-ms=${enterDelayMs}\n        leave-delay-ms=${leaveDelayMs}>\n        ${switcherItem} ${this._renderTooltipContent()}\n      </cds-custom-tooltip>`;\n    }\n    return switcherItem;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  static styles = styles;\n}\n\nexport default CDSContentSwitcherItem;\n"],"names":["customElement"],"mappings":"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"}