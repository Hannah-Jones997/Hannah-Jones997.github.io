{"version":3,"file":"accordion-skeleton.js","sources":["../../../src/components/accordion/accordion-skeleton.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport { ACCORDION_ALIGNMENT } from './accordion';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport ChevronRight16 from '@carbon/icons/lib/chevron--right/16.js';\nimport './accordion-item-skeleton';\nimport '../skeleton-text/index';\nimport styles from './accordion.scss?lit';\n\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Skeleton of code snippet.\n */\n@customElement(`${prefix}-accordion-skeleton`)\nclass CDSAccordionSkeleton extends LitElement {\n  /**\n   * Specify the alignment of the accordion heading title and chevron\n   */\n  @property({ reflect: true })\n  alignment = ACCORDION_ALIGNMENT.END;\n\n  /**\n   * Set number of items to render\n   */\n  @property({ type: Number, attribute: 'count' })\n  count = 4;\n\n  /**\n   * Specify whether Accordion text should be flush, default is false, does not work with align=\"start\"\n   */\n  @property({ type: Boolean, reflect: true })\n  isFlush = false;\n\n  /**\n   * `true` if the first accordion item should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  open = true;\n\n  updated(changedProperties) {\n    if (changedProperties.has('alignment')) {\n      // Propagate `alignment` attribute to descendants until `:host-context()` gets supported in all major browsers\n      forEach(\n        this.shadowRoot!.querySelectorAll(\n          (this.constructor as typeof CDSAccordionSkeleton)\n            .selectorAccordionItemSkeletons\n        ),\n        (elem) => {\n          elem.setAttribute('alignment', this.alignment);\n        }\n      );\n    }\n    if (\n      changedProperties.has('isFlush') ||\n      changedProperties.has('alignment')\n    ) {\n      // Propagate `isFlush` attribute to descendants until `:host-context()` gets supported in all major browsers\n      forEach(\n        this.shadowRoot!.querySelectorAll(\n          (this.constructor as typeof CDSAccordionSkeleton)\n            .selectorAccordionItemSkeletons\n        ),\n        (elem) => {\n          this.isFlush && this.alignment !== 'start'\n            ? elem.setAttribute('isFlush', '')\n            : elem.removeAttribute('isFlush');\n        }\n      );\n    }\n  }\n\n  render() {\n    const classes = classMap({\n      [`${prefix}--accordion__item`]: true,\n      [`${prefix}--accordion__item--active`]: true,\n      [`${prefix}--accordion--${this.alignment}`]: this.alignment,\n      [`${prefix}--accordion--flush`]:\n        this.isFlush && this.alignment !== 'start',\n    });\n    const numSkeletonItems = this.open ? this.count - 1 : this.count;\n    return html`\n      ${this.open\n        ? html`\n            <li class=\"${classes}\">\n              <span class=\"${prefix}--accordion__heading\">\n                ${ChevronRight16({\n                  part: 'expando-icon',\n                  class: `${prefix}--accordion__arrow`,\n                })}\n                <cds-custom-skeleton-text\n                  class=\"${prefix}--accordion__title\"></cds-custom-skeleton-text>\n              </span>\n              <div class=\"${prefix}--accordion__content\">\n                <cds-custom-skeleton-text width=\"90%\"></cds-custom-skeleton-text>\n                <cds-custom-skeleton-text width=\"80%\"></cds-custom-skeleton-text>\n                <cds-custom-skeleton-text width=\"95%\"></cds-custom-skeleton-text>\n              </div>\n            </li>\n          `\n        : ``}\n      ${Array.from({ length: numSkeletonItems }).map(\n        (_, i, arr) =>\n          html`<cds-custom-accordion-item-skeleton\n            key=${i}\n            ?data-last-item=${i ===\n            arr.length - 1}></cds-custom-accordion-item-skeleton>`\n      )}\n    `;\n  }\n\n  static get selectorAccordionItemSkeletons() {\n    return `${prefix}-accordion-item-skeleton`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSAccordionSkeleton;\n"],"names":["customElement"],"mappings":"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"}