{"version":3,"file":"checkbox-group.js","sources":["../../../src/components/checkbox/checkbox-group.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport WarningFilled16 from '@carbon/icons/lib/warning--filled/16.js';\nimport WarningAltFilled16 from '@carbon/icons/lib/warning--alt--filled/16.js';\nimport CDSCheckbox from './checkbox';\nimport styles from './checkbox.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\nimport { CHECKBOX_ORIENTATION } from './defs';\n\nexport { CHECKBOX_ORIENTATION };\n/**\n * Check box.\n *\n * @element cds-custom-checkbox\n * @fires cds-custom-checkbox-changed - The custom event fired after this changebox changes its checked state.\n * @csspart input The checkbox.\n * @csspart label The label.\n */\n@customElement(`${prefix}-checkbox-group`)\nclass CDSCheckboxGroup extends LitElement {\n  /**\n   * fieldset `aria-labelledby`\n   */\n  @property({ type: String, reflect: true, attribute: 'aria-labelledby' })\n  ariaLabelledBy;\n\n  /**\n   * Specify whether the form group is currently disabled\n   */\n  @property({ type: Boolean })\n  disabled;\n\n  /**\n   * Provide text for the form group for additional help\n   */\n  @property({ type: String, reflect: true, attribute: 'helper-text' })\n  helperText;\n\n  /**\n   * Specify whether the form group is currently invalid\n   */\n  @property({ type: Boolean, attribute: 'invalid' })\n  invalid;\n\n  /**\n   * Provide the text that is displayed when the form group is in an invalid state\n   */\n  @property({ type: String, reflect: true, attribute: 'invalid-text' })\n  invalidText;\n\n  /**\n   * Provide id for the fieldset <legend> which corresponds to the fieldset\n   * `aria-labelledby`\n   */\n  @property({ type: String, reflect: true, attribute: 'legend-id' })\n  legendId;\n\n  /**\n   * Provide the text to be rendered inside of the fieldset <legend>\n   */\n  @property({ type: String, reflect: true, attribute: 'legend-text' })\n  legendText;\n\n  /**\n   * Provide the orientation for how the checkbox should be displayed\n   */\n  @property({ type: String, reflect: true, attribute: 'orientation' })\n  orientation = CHECKBOX_ORIENTATION.VERTICAL;\n\n  /**\n   * Whether the CheckboxGroup should be read-only\n   */\n  @property({ type: Boolean, reflect: true })\n  readonly = false;\n\n  /**\n   * Specify whether the form group is currently in warning state\n   */\n  @property({ type: Boolean, reflect: true })\n  warn = false;\n\n  /**\n   * Provide the text that is displayed when the form group is in warning state\n   */\n  @property({ type: String, reflect: true, attribute: 'warn-text' })\n  warnText = '';\n\n  /*\n   * Handles `slotchange` event.\n   */\n  protected _handleSlotChange({ target }: Event) {\n    const hasContent = (target as HTMLSlotElement)\n      .assignedNodes()\n      .filter((elem) =>\n        (elem as HTMLElement).matches !== undefined\n          ? (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSCheckboxGroup).aiLabelItem\n            ) ||\n            // remove slug reference in v12\n            (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSCheckboxGroup).slugItem\n            )\n          : false\n      );\n\n    this._hasAILabel = Boolean(hasContent);\n    (hasContent[0] as HTMLElement).setAttribute('size', 'mini');\n    this.requestUpdate();\n  }\n\n  /**\n   * `true` if there is an AI Label.\n   */\n  protected _hasAILabel = false;\n\n  updated(changedProperties) {\n    const { selectorCheckbox } = this.constructor as typeof CDSCheckboxGroup;\n    const checkboxes = this.querySelectorAll(selectorCheckbox);\n    ['disabled', 'readonly', 'orientation'].forEach((name) => {\n      if (changedProperties.has(name)) {\n        const { [name as keyof CDSCheckboxGroup]: value } = this;\n        // Propagate the property to descendants until `:host-context()` gets supported in all major browsers\n        checkboxes.forEach((elem) => {\n          (elem as CDSCheckbox)[name] = value;\n        });\n      }\n    });\n    if (changedProperties.has('invalid')) {\n      const { invalid } = this;\n      checkboxes.forEach((elem) => {\n        if (invalid) {\n          (elem as CDSCheckbox).setAttribute('invalid-group', '');\n        } else {\n          (elem as CDSCheckbox).removeAttribute('invalid-group');\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      ariaLabelledBy,\n      disabled,\n      helperText,\n      invalid,\n      invalidText,\n      legendId,\n      legendText,\n      orientation,\n      readonly,\n      warn,\n      warnText,\n      _hasAILabel: hasAILabel,\n      _handleSlotChange: handleSlotChange,\n    } = this;\n\n    const showWarning = !readonly && !invalid && warn;\n    const showHelper = !invalid && !warn;\n\n    const checkboxGroupInstanceId = Math.random().toString(16).slice(2);\n\n    const helperId = !helperText\n      ? undefined\n      : `checkbox-group-helper-text-${checkboxGroupInstanceId}`;\n\n    const helper = helperText\n      ? html` <div id=\"${helperId}\" class=\"${prefix}--form__helper-text\">\n          ${helperText}\n        </div>`\n      : null;\n\n    const fieldsetClasses = classMap({\n      [`${prefix}--checkbox-group`]: true,\n      [`${prefix}--checkbox-group--readonly`]: readonly,\n      [`${prefix}--checkbox-group--invalid`]: !readonly && invalid,\n      [`${prefix}--checkbox-group--warning`]: showWarning,\n      [`${prefix}--checkbox-group--slug`]: hasAILabel,\n      [`${prefix}--checkbox-group--${orientation}`]:\n        orientation === 'horizontal',\n    });\n\n    return html`\n      <fieldset\n        class=\"${fieldsetClasses}\"\n        ?data-invalid=${invalid}\n        ?disabled=${disabled}\n        aria-disabled=${readonly}\n        ?aria-labelledby=${ariaLabelledBy || legendId}\n        ?aria-describedby=${!invalid && !warn && helper ? helperId : undefined}\n        orientation=${orientation}>\n        <legend class=\"${prefix}--label\" id=${legendId || ariaLabelledBy}>\n          ${legendText}\n          <slot name=\"ai-label\" @slotchange=\"${handleSlotChange}\"></slot>\n          <slot name=\"decorator\" @slotchange=\"${handleSlotChange}\"></slot>\n          <slot name=\"slug\" @slotchange=\"${handleSlotChange}\"></slot>\n        </legend>\n        <slot></slot>\n        <div class=\"${prefix}--checkbox-group__validation-msg\">\n          ${!readonly && invalid\n            ? html`\n                ${WarningFilled16({\n                  class: `${prefix}--checkbox__invalid-icon`,\n                })}\n                <div class=\"${prefix}--form-requirement\">${invalidText}</div>\n              `\n            : null}\n          ${showWarning\n            ? html`\n                ${WarningAltFilled16({\n                  class: `${prefix}--checkbox__invalid-icon ${prefix}--checkbox__invalid-icon--warning`,\n                })}\n                <div class=\"${prefix}--form-requirement\">${warnText}</div>\n              `\n            : null}\n        </div>\n        ${showHelper ? helper : null}\n      </fieldset>\n    `;\n  }\n\n  /**\n   * A selector that will return the checkboxes.\n   */\n  static get selectorCheckbox() {\n    return `${prefix}-checkbox`;\n  }\n\n  /**\n   * A selector that will return the slug item.\n   *\n   * remove in v12\n   */\n  static get slugItem() {\n    return `${prefix}-slug`;\n  }\n\n  /**\n   * A selector that will return the AI Label item.\n   */\n  static get aiLabelItem() {\n    return `${prefix}-ai-label`;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n  static styles = styles;\n}\n\nexport default CDSCheckboxGroup;\n"],"names":["customElement"],"mappings":"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"}