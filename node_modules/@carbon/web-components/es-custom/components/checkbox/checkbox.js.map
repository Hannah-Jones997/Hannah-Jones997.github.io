{"version":3,"file":"checkbox.js","sources":["../../../src/components/checkbox/checkbox.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { LitElement, html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport FormMixin from '../../globals/mixins/form';\nimport WarningFilled16 from '@carbon/icons/lib/warning--filled/16.js';\nimport WarningAltFilled16 from '@carbon/icons/lib/warning--alt--filled/16.js';\nimport styles from './checkbox.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Check box.\n *\n * @element cds-custom-checkbox\n * @fires cds-custom-checkbox-changed - The custom event fired after this changebox changes its checked state.\n * @csspart input The checkbox.\n * @csspart label The label.\n */\n@customElement(`${prefix}-checkbox`)\nclass CDSCheckbox extends FocusMixin(FormMixin(LitElement)) {\n  @query('input')\n  protected _checkboxNode!: HTMLInputElement;\n\n  /**\n   * Handles `click` event on the `<input>` in the shadow DOM.\n   */\n  protected _handleChange() {\n    const { checked, indeterminate } = this._checkboxNode;\n    this.checked = checked;\n    this.indeterminate = indeterminate;\n    const { eventChange } = this.constructor as typeof CDSCheckbox;\n    this.dispatchEvent(\n      new CustomEvent(eventChange, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          checked,\n          indeterminate,\n        },\n      })\n    );\n  }\n\n  /**\n   * Prevent checkbox state from updating when readonly\n   */\n  private _handleClick(event: MouseEvent) {\n    if (this.readonly) {\n      event.preventDefault();\n    }\n  }\n\n  _handleFormdata(event: FormDataEvent) {\n    const { formData } = event;\n    const { checked, disabled, name, value = 'on' } = this;\n    if (!disabled && checked) {\n      formData.append(name, value);\n    }\n  }\n\n  /**\n   * Specify whether the underlying input should be checked\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'checked' })\n  checked = false;\n\n  /**\n   * Specify if checkbox is being used in a data table\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'data-table' })\n  dataTable = false;\n\n  /**\n   * Specify whether the Checkbox should be disabled\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * Provide text for the form group for additional help\n   */\n  @property({ type: String, reflect: true, attribute: 'helper-text' })\n  helperText;\n\n  /**\n   * Specify whether the checkbox should be present in the DOM,\n   * but invisible and uninteractable. Used for data-table purposes.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'hide-checkbox' })\n  hideCheckbox = false;\n\n  /**\n   * Specify whether the label should be hidden, or not\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'hide-label' })\n  hideLabel = false;\n\n  /**\n   * Specify a custom id for the checkbox\n   */\n  @property({ reflect: true })\n  id = 'checkbox';\n\n  /**\n   * Specify whether the Checkbox is in an indeterminate state\n   */\n  @property({ type: Boolean, reflect: true })\n  indeterminate = false;\n\n  /**\n   * Provide a label to provide a description of the Checkbox input that you are\n   * exposing to the user\n   */\n  @property({ attribute: 'label-text' })\n  labelText = '';\n\n  /**\n   * The form name.\n   */\n  @property()\n  name!: string;\n\n  /**\n   * Specify whether the Checkbox is read-only\n   */\n  @property({ type: Boolean, reflect: true })\n  readonly = false;\n\n  /**\n   * Specify whether the Checkbox is currently invalid\n   */\n  @property({ type: Boolean })\n  invalid = false;\n\n  /**\n   * Provide the text that is displayed when the Checkbox is in an invalid state\n   */\n  @property({ type: String, attribute: 'invalid-text' })\n  invalidText;\n\n  /**\n   * Specify a title for the node for the Checkbox\n   */\n  @property({ attribute: 'title' })\n  title = '';\n\n  /**\n   * The value.\n   */\n  @property()\n  value!: string;\n\n  /**\n   * Specify whether the Checkbox is in a warn state\n   */\n  @property({ type: Boolean })\n  warn = false;\n\n  /**\n   * Provide the text that is displayed when the Checkbox is in a warn state\n   */\n  @property({ type: String, attribute: 'warn-text' })\n  warnText = false;\n\n  /**\n   * Specify whether the underlying input should be checked by default\n   */\n  @property({ type: Boolean, attribute: 'default-checked' })\n  defaultChecked;\n\n  /**\n   * Handles `slotchange` event.\n   */\n  protected _handleSlotChange({ target }: Event) {\n    const hasContent = (target as HTMLSlotElement)\n      .assignedNodes()\n      .filter((elem) =>\n        (elem as HTMLElement).matches !== undefined\n          ? (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSCheckbox).aiLabelItem\n            ) ||\n            // remove slug reference in v12\n            (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSCheckbox).slugItem\n            )\n          : false\n      );\n\n    this._hasAILabel = Boolean(hasContent);\n    const type = (hasContent[0] as HTMLElement).getAttribute('kind');\n    (hasContent[0] as HTMLElement).setAttribute(\n      'size',\n      type === 'inline' ? 'md' : 'mini'\n    );\n    this.requestUpdate();\n  }\n\n  /**\n   * `true` if there is an AI Label.\n   */\n  protected _hasAILabel = false;\n\n  updated() {\n    const { _hasAILabel: hasAILabel, defaultChecked } = this;\n    hasAILabel\n      ? this.setAttribute('ai-label', '')\n      : this.removeAttribute('ai-label');\n\n    if (defaultChecked) {\n      this.checked = defaultChecked;\n    }\n  }\n\n  render() {\n    const {\n      checked,\n      disabled,\n      helperText,\n      hideLabel,\n      id,\n      indeterminate,\n      invalid,\n      invalidText,\n      labelText,\n      name,\n      readonly,\n      title,\n      value,\n      warn,\n      warnText,\n      defaultChecked,\n      _handleChange: handleChange,\n      _handleClick: handleClick,\n    } = this;\n\n    const showWarning = !readonly && !invalid && warn;\n    const showHelper = !invalid && !warn;\n\n    const helper = helperText\n      ? html` <div class=\"${prefix}--form__helper-text\">${helperText}</div>`\n      : null;\n\n    const labelClasses = classMap({\n      [`${prefix}--checkbox-label`]: true,\n    });\n    const labelTextClasses = classMap({\n      [`${prefix}--checkbox-label-text`]: true,\n      [`${prefix}--visually-hidden`]: hideLabel,\n    });\n    return html`\n      <input\n        id=\"${ifDefined(id)}\"\n        type=\"checkbox\"\n        part=\"input\"\n        class=\"${`${prefix}--checkbox`}\"\n        aria-readonly=\"${String(Boolean(readonly))}\"\n        ?checked=\"${checked}\"\n        ?data-invalid=\"${invalid}\"\n        ?disabled=\"${disabled}\"\n        ?defaultChecked=\"${defaultChecked}\"\n        .indeterminate=\"${indeterminate}\"\n        name=\"${ifDefined(name)}\"\n        value=\"${ifDefined(value)}\"\n        @change=\"${handleChange}\"\n        @click=\"${handleClick}\" />\n      <label\n        for=\"${ifDefined(id)}\"\n        part=\"label\"\n        class=\"${labelClasses}\"\n        title=\"${ifDefined(title)}\">\n        <span class=\"${labelTextClasses}\"\n          >${labelText ? labelText : html`<slot></slot>`}</span\n        >\n      </label>\n      <slot name=\"ai-label\" @slotchange=\"${this._handleSlotChange}\"></slot>\n      <slot name=\"decorator\" @slotchange=\"${this._handleSlotChange}\"></slot>\n      <slot name=\"slug\" @slotchange=\"${this._handleSlotChange}\"></slot>\n      <div class=\"${prefix}--checkbox__validation-msg\">\n        ${!readonly && invalid\n          ? html`\n              ${WarningFilled16({\n                class: `${prefix}--checkbox__invalid-icon`,\n              })}\n              <div class=\"${prefix}--form-requirement\">${invalidText}</div>\n            `\n          : null}\n        ${showWarning\n          ? html`\n              ${WarningAltFilled16({\n                class: `${prefix}--checkbox__invalid-icon ${prefix}--checkbox__invalid-icon--warning`,\n              })}\n              <div class=\"${prefix}--form-requirement\">${warnText}</div>\n            `\n          : null}\n      </div>\n      ${showHelper ? helper : null}\n    `;\n  }\n\n  /**\n   * The name of the custom event fired after this changebox changes its checked state.\n   */\n  static get eventChange() {\n    return `${prefix}-checkbox-changed`;\n  }\n\n  /**\n   * A selector that will return the slug item.\n   *\n   * Remove in v12\n   */\n  static get slugItem() {\n    return `${prefix}-slug`;\n  }\n\n  /**\n   * A selector that will return the ai-label item.\n   */\n  static get aiLabelItem() {\n    return `${prefix}-ai-label`;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n  static styles = styles;\n}\n\nexport default CDSCheckbox;\n"],"names":["customElement"],"mappings":"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"}