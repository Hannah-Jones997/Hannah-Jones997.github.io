{"version":3,"file":"overflow-menu-body.js","sources":["../../../src/components/overflow-menu/overflow-menu-body.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2025\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport CDSFloatingMenu, {\n  FLOATING_MENU_DIRECTION,\n} from '../floating-menu/floating-menu';\nimport { NAVIGATION_DIRECTION, OVERFLOW_MENU_SIZE } from './defs';\nimport CDSOverflowMenuItem from './overflow-menu-item';\nimport HostListener from '../../globals/decorators/host-listener';\nimport { indexOf } from '../../globals/internal/collection-helpers';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\nimport styles from './overflow-menu.scss?lit';\n\n/**\n * @param index The index\n * @param length The length of the array.\n * @returns The new index, adjusting overflow/underflow.\n */\nconst capIndex = (index: number, length: number) => {\n  if (index < 0) {\n    return length - 1;\n  }\n  if (index >= length) {\n    return 0;\n  }\n  return index;\n};\n\n/**\n * Overflow menu body.\n *\n * @element cds-custom-overflow-menu-body\n */\n@customElement(`${prefix}-overflow-menu-body`)\nclass CDSOverflowMenuBody extends CDSFloatingMenu {\n  /**\n   * The menu direction.\n   */\n  @property()\n  direction = FLOATING_MENU_DIRECTION.BOTTOM;\n\n  /**\n   * How the menu is aligned to the trigger button.\n   */\n  @property({ type: Boolean, reflect: true })\n  flipped = false;\n\n  /**\n   * `true` if the menu should be open.\n   *\n   * @private\n   */\n  @property({ type: Boolean, reflect: true })\n  open = false;\n\n  selected: CDSOverflowMenuItem | null = null;\n\n  /**\n   * The overflow menu size.\n   */\n  @property({ reflect: true })\n  size = OVERFLOW_MENU_SIZE.MEDIUM;\n\n  /**\n   * @param currentItem The currently selected item.\n   * @param direction The navigation direction.\n   * @returns The item to be selected.\n   */\n  protected _getNextItem(currentItem: CDSOverflowMenuItem, direction: number) {\n    const { selectorItemEnabled } = this\n      .constructor as typeof CDSOverflowMenuBody;\n    const menuItems = this.querySelectorAll(selectorItemEnabled);\n    const currentIndex = indexOf(menuItems, currentItem);\n    const nextIndex = capIndex(currentIndex + direction, menuItems.length);\n    return nextIndex === currentIndex ? null : menuItems[nextIndex];\n  }\n\n  /**\n   * Navigates through overflow menu items.\n   *\n   * @param direction `-1` to navigate backward, `1` to navigate forward.\n   */\n  protected _navigate(direction: number) {\n    if (this.selected) {\n      const nextItem = this._getNextItem(this.selected, direction);\n      (nextItem as HTMLElement)?.focus();\n    }\n  }\n\n  /**\n   * Handles `keydown` event on the menu body.\n   */\n  @HostListener('keydown')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  protected _handleKeydown = async (event: KeyboardEvent) => {\n    const { key } = event;\n    if (this.open) {\n      /**\n       * sets this.selected to focused menu item. the menu item is focused\n       * automatically due to FocusMixin\n       */\n      if (this.contains(document.activeElement)) {\n        this.selected = document.activeElement as CDSOverflowMenuItem;\n      }\n\n      if (key in NAVIGATION_DIRECTION) {\n        event.preventDefault();\n        this._navigate(NAVIGATION_DIRECTION[key]);\n        return;\n      }\n\n      if (key === 'Escape') {\n        this.open = false;\n        return;\n      }\n\n      const items = this.querySelectorAll(\n        CDSOverflowMenuBody.selectorItemEnabled\n      );\n      const isInsideMenu = Array.from(items).some((item) =>\n        item.contains(document.activeElement)\n      );\n\n      if (isInsideMenu) {\n        event.preventDefault();\n        this.open = false;\n\n        requestAnimationFrame(() => {\n          const menuTrigger = this.parent as HTMLElement | null;\n          const triggerButton =\n            menuTrigger?.shadowRoot?.querySelector(\n              `button.${prefix}--overflow-menu`\n            ) || menuTrigger?.querySelector(`button.${prefix}--overflow-menu`);\n\n          if (triggerButton) {\n            (triggerButton as HTMLElement).focus();\n          } else {\n            console.warn('Could not find trigger button.');\n            (document.body as HTMLElement).focus();\n          }\n        });\n      }\n    }\n  };\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'menu');\n    }\n    if (!this.hasAttribute('tabindex')) {\n      // TODO: Should we use a property?\n      this.setAttribute('tabindex', '-1');\n    }\n    super.connectedCallback();\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('size')) {\n      const { selectorMenuItem } = this\n        .constructor as typeof CDSOverflowMenuBody;\n      const menuItems = this.querySelectorAll(selectorMenuItem);\n      menuItems.forEach((item) => {\n        item.setAttribute('size', this.size);\n      });\n    }\n\n    super.updated(changedProperties);\n  }\n\n  render() {\n    return html` <slot></slot> `;\n  }\n\n  /**\n   * A selector that will return menu items.\n   */\n  static get selectorMenuItem() {\n    return `${prefix}-overflow-menu-item`;\n  }\n\n  /**\n   * A selector that will return enabled menu items.\n   */\n  static get selectorItemEnabled() {\n    return `${prefix}-overflow-menu-item:not([disabled])`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSOverflowMenuBody;\n"],"names":["customElement"],"mappings":"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"}