{"version":3,"file":"skeleton-text.js","sources":["../../../src/components/skeleton-text/skeleton-text.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { LitElement, TemplateResult, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport { SKELETON_TEXT_TYPE } from './defs';\nimport styles from './skeleton-text.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { SKELETON_TEXT_TYPE };\n\nfunction getRandomInt(min: number, max: number, n: number) {\n  const randoms = [0.973051493507435, 0.15334737213558558, 0.5671034553053769];\n  return Math.floor(randoms[n % 3] * (max - min + 1)) + min;\n}\n\n/**\n * Skeleton text.\n *\n * @element cds-custom-skeleton-text\n */\n@customElement(`${prefix}-skeleton-text`)\nclass CDSSkeletonText extends LitElement {\n  /**\n   * Specify optional classes to be added to your SkeletonText\n   */\n  @property({ reflect: true, attribute: 'optional-classes' })\n  optionalClasses;\n\n  /**\n   * The type of skeleton text.\n   * @deprecated Use the `heading` property instead.\n   */\n  @property({ reflect: true })\n  type = SKELETON_TEXT_TYPE.REGULAR;\n\n  /**\n   * Determines if the skeleton text should be rendered as a heading.\n   */\n  @property({ type: Boolean, reflect: true })\n  heading = false;\n\n  /**\n   * width (in px or %) of single line of text or max-width of paragraph lines\n   */\n  @property({ reflect: true })\n  width = '100%';\n\n  /**\n   * will generate multiple lines of text\n   */\n  @property({ type: Boolean, reflect: true })\n  paragraph = false;\n\n  /**\n   * the number of lines in a paragraph\n   */\n  @property({ type: Number, reflect: true })\n  lineCount = 3;\n\n  render() {\n    const { optionalClasses, paragraph, lineCount, type, width, heading } =\n      this;\n    let defaultClasses = {\n      [`${prefix}--skeleton__text`]: true,\n      [`${prefix}--skeleton__heading`]:\n        heading || type === SKELETON_TEXT_TYPE.HEADING,\n    };\n\n    if (optionalClasses) {\n      const outputObject = {};\n      optionalClasses?.split(' ').forEach((element) => {\n        outputObject[element] = true;\n      });\n      defaultClasses = { ...defaultClasses, ...outputObject };\n    }\n    const classes = classMap(defaultClasses);\n\n    if (paragraph) {\n      const widthNum = parseInt(this.width, 10);\n      const widthPx = this.width.includes('px');\n      const widthPercent = this.width.includes('%');\n      const lines: TemplateResult[] = [];\n      for (let i = 0; i < lineCount; i++) {\n        const randomWidth =\n          (widthPercent && `${getRandomInt(0, 75, i)}px`) ||\n          (widthPx && `${getRandomInt(0, widthNum, i)}px`);\n        const style =\n          (widthPercent && `width: calc(${width} - ${randomWidth})`) ||\n          (widthPx && `width: ${randomWidth}`) ||\n          '';\n        lines.push(html`<p class=\"${classes}\" style=\"${style}\"></p>`);\n      }\n      return lines;\n    }\n\n    return html`<p class=\"${classes}\" style=\"width:${width}\"></p>`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSSkeletonText;\n"],"names":["customElement"],"mappings":"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"}