{"version":3,"file":"selectable-tile.js","sources":["../../../src/components/tile/selectable-tile.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { LitElement, html, svg } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport Checkbox16 from '@carbon/icons/lib/checkbox/16.js';\nimport CheckboxCheckedFilled16 from '@carbon/icons/lib/checkbox--checked--filled/16.js';\nimport { prefix } from '../../globals/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport { TILE_COLOR_SCHEME } from './defs';\nimport styles from './tile.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Multi-selectable tile.\n *\n * @element cds-custom-selectable-tile\n * @fires cds-custom-selectable-tile-changed - The custom event fired after this selectable tile changes its selected state.\n */\n@customElement(`${prefix}-selectable-tile`)\nclass CDSSelectableTile extends HostListenerMixin(FocusMixin(LitElement)) {\n  @query('input')\n  protected _inputNode!: HTMLInputElement;\n\n  /**\n   * The `type` attribute of the `<input>`.\n   */\n  protected _inputType = 'checkbox';\n\n  /**\n   * `true` if there is an AI Label.\n   */\n  protected _hasAILabel = false;\n\n  /**\n   * Handles `slotchange` event.\n   */\n  protected _handleSlotChange({ target }: Event) {\n    const hasContent = (target as HTMLSlotElement)\n      .assignedNodes()\n      .filter((elem) =>\n        (elem as HTMLElement).matches !== undefined\n          ? (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSSelectableTile)?.aiLabelItem\n            ) ||\n            // remove reference of slug in v12\n            (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSSelectableTile)?.slugItem\n            )\n          : false\n      );\n    if (hasContent.length > 0) {\n      this._hasAILabel = Boolean(hasContent);\n      (hasContent[0] as HTMLElement).setAttribute('size', 'xs');\n    }\n    this.requestUpdate();\n  }\n\n  /**\n   * Handles `change` event on the `<input>` in the shadow DOM.\n   */\n  protected _handleChange() {\n    this.selected = this._inputNode.checked;\n\n    const selected = this.selected;\n    const { eventChange } = this.constructor as typeof CDSSelectableTile;\n    this.dispatchEvent(\n      new CustomEvent(eventChange, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          selected,\n        },\n      })\n    );\n  }\n\n  /**\n   * Handles the rendering of the icon.\n   */\n  protected _renderIcon() {\n    const { selected, checkmarkLabel } = this;\n\n    return html` ${selected\n      ? CheckboxCheckedFilled16({\n          children: !checkmarkLabel\n            ? undefined\n            : svg`<title>${checkmarkLabel}</title>`,\n        })\n      : Checkbox16({\n          children: !checkmarkLabel\n            ? undefined\n            : svg`<title>${checkmarkLabel}</title>`,\n        })}`;\n  }\n\n  /**\n   * Listener function for click interaction.\n   *\n   */\n  private _handleClick = () => {\n    this.selected = !this.selected; // Toggle selection\n    const { eventChange } = this.constructor as typeof CDSSelectableTile;\n    this.dispatchEvent(\n      new CustomEvent(eventChange, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          selected: this.selected,\n        },\n      })\n    );\n  };\n\n  /**\n   * Listener function for keyboard interaction.\n   *\n   * @param event to get the key pressed\n   */\n  protected _handleKeydown = (event: KeyboardEvent) => {\n    const { key } = event;\n    if (\n      (key === ' ' || key === 'Enter') &&\n      !(event.target as HTMLElement)?.matches(\n        (this.constructor as typeof CDSSelectableTile).aiLabelItem\n      ) &&\n      !(event.target as HTMLElement)?.matches(\n        (this.constructor as typeof CDSSelectableTile).slugItem\n      )\n    ) {\n      this.selected = !this.selected;\n    }\n  };\n\n  /**\n   * The a11y text for the checkmark icon of the selected state.\n   */\n  @property({ attribute: 'checkmark-label' })\n  checkmarkLabel!: string;\n\n  /**\n   * The color scheme.\n   */\n  @property({ attribute: 'color-scheme', reflect: true })\n  colorScheme = TILE_COLOR_SCHEME.REGULAR;\n\n  /**\n   * `true` if the seletable tile should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * Specify if the `SeletableTile` component should be rendered with rounded corners.\n   * Only valid when `ai-label` prop is present\n   */\n  @property({ type: Boolean, attribute: 'has-rounded-corners' })\n  hasRoundedCorners = false;\n\n  /**\n   * @deprecated\n   *\n   * The form name.\n   */\n  @property()\n  name!: string;\n\n  /**\n   * `true` to show the selected state.\n   */\n  @property({ type: Boolean, reflect: true })\n  selected = false;\n\n  /**\n   * @deprecated\n   *\n   * The form value.\n   */\n  @property()\n  value!: string;\n\n  updated() {\n    if (this._hasAILabel) {\n      this.setAttribute('ai-label', '');\n    } else {\n      this.removeAttribute('ai-label');\n    }\n  }\n\n  render() {\n    const {\n      colorScheme,\n      disabled,\n      hasRoundedCorners,\n      name,\n      selected,\n      value,\n      _handleChange: handleChange,\n      _hasAILabel: hasAILabel,\n    } = this;\n    const classes = classMap({\n      [`${prefix}--tile`]: true,\n      [`${prefix}--tile--disabled`]: disabled,\n      [`${prefix}--tile--selectable`]: true,\n      [`${prefix}--tile--is-selected`]: selected,\n      [`${prefix}--tile--${colorScheme}`]: colorScheme,\n      [`${prefix}--tile--slug-rounded`]: hasAILabel && hasRoundedCorners,\n    });\n    return html`\n      <div\n        class=${classes}\n        role=\"checkbox\"\n        aria-checked=${selected}\n        @change=${handleChange}\n        tabindex=${!disabled ? 0 : undefined}\n        name=${name}\n        value=${value}\n        @click=${!disabled ? this._handleClick : undefined}\n        @keydown=${this._handleKeydown}>\n        <span\n          class=\"${prefix}--tile__checkmark ${prefix}--tile__checkmark--persistent\">\n          ${this._renderIcon()}\n        </span>\n        <label class=\"${prefix}--tile-content\">\n          <slot></slot>\n        </label>\n        <slot name=\"decorator\"></slot>\n        <slot name=\"ai-label\" @slotchange=\"${this._handleSlotChange}\"></slot>\n        <slot name=\"slug\" @slotchange=\"${this._handleSlotChange}\"></slot>\n      </div>\n    `;\n  }\n\n  /**\n   * A selector that will return the slug item.\n   *\n   * remove in v12\n   */\n  static get slugItem() {\n    return `${prefix}-slug`;\n  }\n\n  /**\n   * A selector that will return the AI Label item.\n   */\n  static get aiLabelItem() {\n    return `${prefix}-ai-label`;\n  }\n\n  /**\n   * The name of the custom event fired after this selectable tile changes its selected state.\n   */\n  static get eventChange() {\n    return `${prefix}-selectable-tile-changed`;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  static styles = styles;\n}\n\nexport default CDSSelectableTile;\n"],"names":["TILE_COLOR_SCHEME","customElement"],"mappings":"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"}