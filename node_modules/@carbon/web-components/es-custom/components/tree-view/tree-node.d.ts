/**
 * @license
 *
 * Copyright IBM Corp. 2025, 2025
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { LitElement } from 'lit';
/**
 * Tree node.
 *
 * @element cds-custom-tree-node
 * @fires eventSelected
 *   The name of the custom event fired when node is selected.
 * @fires eventToggled
 *   The name of the custom event fired when a node is toggled.
 */
declare class CDSTreeNode extends LitElement {
    private _hasChildren;
    private _hasIcon;
    /**
     * Handles `slotchange` event.
     */
    private _handleSlotChange;
    /**
     * Handles icon's `slotchange` event.
     */
    private _handleIconSlotChange;
    /**
     * Handles style updates based on depth
     */
    private _handleStyles;
    _handleToggleClick: (event: any) => void;
    /**
     * sets if tree node is active
     */
    active: boolean;
    /**
     * disabled property
     */
    disabled: boolean;
    /**
     * **Note:** this is controlled by the parent TreeView component, do not set manually.
     * TreeNode depth to determine spacing
     */
    private _depth;
    /**
     * Specify if the TreeNode is expanded (only applicable to parent nodes)
     */
    isExpanded: boolean;
    /**
     * Optional: The URL the TreeNode is linking to
     */
    href: any;
    /**
     * Specify the TreeNode's ID. Must be unique in the DOM and is used for props.active, props.selected and aria-owns
     */
    id: string;
    /**
     * Rendered label for the TreeNode
     */
    label: string;
    /**
     * sets if tree node is selected
     */
    selected: boolean;
    /**
     * when adding an href to control the click functionality
     */
    onClick?: (event: Event) => void;
    connectedCallback(): void;
    private _dispatchSelectedEvent;
    private _dispatchToggledEvent;
    updated(changedProperties: any): void;
    render(): import("lit-html").TemplateResult<1>;
    /**
     * The name of the custom event fired when node is selected.
     */
    static get eventSelected(): string;
    /**
     * The name of the custom event fired when a node is toggled
     */
    static get eventToggled(): string;
    static styles: any;
}
export default CDSTreeNode;
