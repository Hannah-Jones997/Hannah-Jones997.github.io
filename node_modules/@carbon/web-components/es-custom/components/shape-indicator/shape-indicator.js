/**
 * Copyright IBM Corp. 2024
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { __decorate } from 'tslib';
import { html, LitElement } from 'lit';
import { property } from 'lit/decorators.js';
import { prefix } from '../../globals/settings.js';
import { carbonElement } from '../../globals/decorators/carbon-element.js';
import styles from './shape-indicator.scss.js';
import Critical from '../../icons/critical/index.js';
import CriticalSeverity from '../../icons/critical-severity/index.js';
import DiamondFill from '../../icons/diamond-fill/index.js';
import LowSeverity from '../../icons/low-severity/index.js';
import Caution from '../../icons/caution/index.js';
import CircleFill from '../../icons/circle-fill/index.js';
import CircleStroke from '../../icons/circle-stroke/index.js';
import { SHAPE_INDICATOR_KIND } from './defs.js';

/**
 * Copyright IBM Corp. 2025, 2025
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * Custom incomplete icon implementation
 */
const IncompleteIcon = () => html `
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="16"
    height="16"
    fill="none"
    aria-hidden="true">
    <path
      fill="#fff"
      fillOpacity="0.01"
      d="M0 0h16v16H0z"
      style="mix-blend-mode: multiply;" />
    <path
      fill="#161616"
      d="M8 2a6 6 0 1 0 0 12A6 6 0 0 0 8 2Zm0 2a4.004 4.004 0 0 1 4 4H4a4.004 4.004 0 0 1 4-4Z" />
  </svg>
`;
/**
 * Map of shape indicators to their corresponding icons
 */
const shapeMap = {
    [SHAPE_INDICATOR_KIND.FAILED]: Critical,
    [SHAPE_INDICATOR_KIND.CRITICAL]: CriticalSeverity,
    [SHAPE_INDICATOR_KIND.HIGH]: Caution,
    [SHAPE_INDICATOR_KIND.MEDIUM]: DiamondFill,
    [SHAPE_INDICATOR_KIND.LOW]: LowSeverity,
    [SHAPE_INDICATOR_KIND.CAUTIOUS]: Caution,
    [SHAPE_INDICATOR_KIND.UNDEFINED]: DiamondFill,
    [SHAPE_INDICATOR_KIND.STABLE]: CircleFill,
    [SHAPE_INDICATOR_KIND.INFORMATIVE]: LowSeverity,
    [SHAPE_INDICATOR_KIND.INCOMPLETE]: IncompleteIcon,
    [SHAPE_INDICATOR_KIND.DRAFT]: CircleStroke,
};
/**
 * Shape Indicator.
 * @element cds-custom-shape-indicator
 */
let CDSShapeIndicator = class CDSShapeIndicator extends LitElement {
    constructor() {
        super(...arguments);
        /**
         * Shape indicator size (12 or 14)
         */
        this.textSize = 12;
    }
    render() {
        const shape = shapeMap[this.kind];
        if (!shape) {
            return null;
        }
        return html ` ${shape()} ${this.label} `;
    }
};
/**
 * Styles are imported from the SCSS file
 */
CDSShapeIndicator.styles = styles;
__decorate([
    property({ attribute: 'text-size' })
], CDSShapeIndicator.prototype, "textSize", void 0);
__decorate([
    property()
], CDSShapeIndicator.prototype, "label", void 0);
__decorate([
    property()
], CDSShapeIndicator.prototype, "kind", void 0);
CDSShapeIndicator = __decorate([
    carbonElement(`${prefix}-shape-indicator`)
], CDSShapeIndicator);
var CDSShapeIndicator$1 = CDSShapeIndicator;

export { CDSShapeIndicator$1 as default };
//# sourceMappingURL=shape-indicator.js.map
