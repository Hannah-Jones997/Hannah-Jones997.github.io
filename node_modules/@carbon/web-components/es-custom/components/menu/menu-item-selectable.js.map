{"version":3,"file":"menu-item-selectable.js","sources":["../../../src/components/menu/menu-item-selectable.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport styles from './menu-item.scss?lit';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\nimport { consume } from '@lit/context';\nimport { MenuContext } from './menu-context';\n/**\n * Menu Item.\n *\n * @element cds-custom-menu-item\n */\n@customElement(`${prefix}-menu-item-selectable`)\nclass CDSmenuItemSelectable extends LitElement {\n  @consume({ context: MenuContext })\n  context;\n  /**\n   * Label for the menu item selectable.\n   */\n  @property({ type: String })\n  label;\n  /**\n   * Whether the menu item is selected or not.\n   */\n  @property({ type: Boolean })\n  selected = false;\n\n  /**\n   * The name of the custom event fired when the selection state changes.\n   */\n  static get eventOnChange() {\n    return `${prefix}-item-changed`;\n  }\n\n  /**\n   * Automatically forwards focus to the first focusable element inside the shadow root (helps with focus styles when wrapped in menu-item-group)\n   */\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /**\n   * Sets the menu item's icon.\n   */\n  @property()\n  renderIcon?: () => void;\n\n  @property()\n  shortcut;\n\n  _handleClick = (e) => {\n    this.selected = !this.selected;\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        triggeredBy: e.target,\n      },\n    };\n    if (\n      this.dispatchEvent(\n        new CustomEvent(\n          (this.constructor as typeof CDSmenuItemSelectable).eventOnChange,\n          init\n        )\n      )\n    ) {\n      this.dispatchEvent(\n        new CustomEvent(\n          (this.constructor as typeof CDSmenuItemSelectable).eventOnChange,\n          init\n        )\n      );\n    }\n  };\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('keydown', this._handleKeydown);\n  }\n\n  firstUpdated() {\n    const menuItemSelectable = this.shadowRoot?.querySelector(\n      `${prefix}-menu-item`\n    ) as HTMLElement | null;\n    if (menuItemSelectable) {\n      menuItemSelectable.addEventListener('keydown', this._handleKeydown);\n    }\n\n    this.setAttribute('tabindex', '-1');\n    this.context.updateFromChild({ hasSelectableItems: true });\n  }\n\n  _handleKeydown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      this._handleClick(e);\n    }\n  };\n\n  render() {\n    const { label, selected, _handleClick: handleClick } = this;\n\n    return html`\n      <cds-custom-menu-item\n        label=\"${label}\"\n        class=\"${prefix}--menu-item-selectable--selected\"\n        role=\"menuitemcheckbox\"\n        shortcut=${this.shortcut}\n        aria-checked=\"${selected}\"\n        @click=\"${handleClick}\">\n        <slot slot=\"render-icon\" name=\"render-icon\"></slot>\n      </cds-custom-menu-item>\n    `;\n  }\n  static styles = styles;\n}\nexport default CDSmenuItemSelectable;\n"],"names":["customElement"],"mappings":"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"}