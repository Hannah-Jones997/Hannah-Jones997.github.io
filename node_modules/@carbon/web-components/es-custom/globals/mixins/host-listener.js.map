{"version":3,"file":"host-listener.js","sources":["../../../src/globals/mixins/host-listener.ts"],"sourcesContent":["/**\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport on from './on';\nimport Handle from '../internal/handle';\n\n/**\n * The format for the event name used by `@HostListener` decorator.\n */\nconst EVENT_NAME_FORMAT =\n  /^((document|window|parentRoot|shadowRoot):)?([\\w-]+)$/;\n\n/**\n * @param Base The base class.\n * @returns A mix-in that sets up and cleans up event listeners defined by `@HostListener` decorator.\n */\nconst HostListenerMixin = <T extends Constructor<HTMLElement>>(Base: T) => {\n  /**\n   * A mix-in class that sets up and cleans up event listeners defined by `@HostListener` decorator.\n   */\n  class HostListenerMixinImpl extends Base {\n    /**\n     * The list of handles managed by this mix-in.\n     *\n     * @private\n     */\n    _handles: Set<Handle> = new Set(); // Not using TypeScript `private` due to: microsoft/TypeScript#17744\n\n    connectedCallback() {\n      // @ts-ignore: Until `connectedCallback` is added to `HTMLElement` definition\n      super.connectedCallback();\n      const hostListeners = (this.constructor as typeof HostListenerMixinImpl)\n        ._hostListeners;\n      Object.keys(hostListeners).forEach((listenerName) => {\n        Object.keys(hostListeners[listenerName]).forEach((type) => {\n          // Parses `document:click`/`window:click` format\n          const tokens = EVENT_NAME_FORMAT.exec(type);\n          if (!tokens) {\n            throw new Error(`Could not parse the event name: ${listenerName}`);\n          }\n          const [, , targetName, unprefixedType] = tokens;\n          const target: EventTarget =\n            {\n              document: this.ownerDocument,\n              window: this.ownerDocument!.defaultView,\n              parentRoot: this.getRootNode(),\n              shadowRoot: this.shadowRoot,\n            }[targetName] || this;\n\n          const { options } = hostListeners[listenerName][type];\n\n          this._handles.add(\n            on(\n              target,\n              ((this.constructor as typeof Base)[unprefixedType] ??\n                unprefixedType) as keyof HTMLElementEventMap,\n              this[listenerName],\n              options\n            )\n          );\n        });\n      });\n    }\n\n    disconnectedCallback() {\n      this._handles.forEach((handle) => {\n        handle.release();\n        this._handles.delete(handle);\n      });\n      // @ts-ignore: Until `disconnectedCallback` is added to `HTMLElement` definition\n      super.disconnectedCallback();\n    }\n\n    /**\n     * The map, keyed by method name, of event listeners that should be attached to host element or host document.\n     *\n     * @private\n     */\n    static _hostListeners: {\n      [listenerName: string]: {\n        [type: string]: {\n          options?: boolean | AddEventListenerOptions;\n        };\n      };\n    } = {}; // Not using TypeScript `private` due to: microsoft/TypeScript#17744\n  }\n\n  return HostListenerMixinImpl;\n};\n\nexport default HostListenerMixin;\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;AAKG;AAKH;;AAEG;AACH,MAAM,iBAAiB,GACrB,uDAAuD;AAEzD;;;AAGG;AACH,MAAM,iBAAiB,GAAG,CAAqC,IAAO,KAAI;AACxE;;AAEG;IACH,MAAM,qBAAsB,SAAQ,IAAI,CAAA;AAAxC,QAAA,WAAA,GAAA;;AACE;;;;AAIG;AACH,YAAA,IAAA,CAAA,QAAQ,GAAgB,IAAI,GAAG,EAAE,CAAC;;QAElC,iBAAiB,GAAA;;YAEf,KAAK,CAAC,iBAAiB,EAAE;AACzB,YAAA,MAAM,aAAa,GAAI,IAAI,CAAC;AACzB,iBAAA,cAAc;YACjB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,YAAY,KAAI;AAClD,gBAAA,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;;;oBAExD,MAAM,MAAM,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC3C,IAAI,CAAC,MAAM,EAAE;AACX,wBAAA,MAAM,IAAI,KAAK,CAAC,mCAAmC,YAAY,CAAA,CAAE,CAAC;;oBAEpE,MAAM,KAAK,UAAU,EAAE,cAAc,CAAC,GAAG,MAAM;AAC/C,oBAAA,MAAM,MAAM,GACV;wBACE,QAAQ,EAAE,IAAI,CAAC,aAAa;AAC5B,wBAAA,MAAM,EAAE,IAAI,CAAC,aAAc,CAAC,WAAW;AACvC,wBAAA,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE;wBAC9B,UAAU,EAAE,IAAI,CAAC,UAAU;AAC5B,qBAAA,CAAC,UAAU,CAAC,IAAI,IAAI;oBAEvB,MAAM,EAAE,OAAO,EAAE,GAAG,aAAa,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC;AAErD,oBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CACf,EAAE,CACA,MAAM,GACL,CAAC,EAAA,GAAA,IAAI,CAAC,WAA2B,CAAC,cAAc,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,EAAA,GAChD,cAAc,GAChB,IAAI,CAAC,YAAY,CAAC,EAClB,OAAO,CACR,CACF;AACH,iBAAC,CAAC;AACJ,aAAC,CAAC;;QAGJ,oBAAoB,GAAA;YAClB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,KAAI;gBAC/B,MAAM,CAAC,OAAO,EAAE;AAChB,gBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;AAC9B,aAAC,CAAC;;YAEF,KAAK,CAAC,oBAAoB,EAAE;;;AAG9B;;;;AAIG;AACI,IAAA,qBAAA,CAAA,cAAc,GAMjB,EAAE,CAAC;AAGT,IAAA,OAAO,qBAAqB;AAC9B;;;;"}